{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"../lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":778},"end":{"line":12,"column":47,"index":805}}],"key":"5SaJjHUOpKrE3J3aWh2RTsVAt6s=","exportNames":["*"],"imports":1}},{"name":"../lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":17,"index":824},"end":{"line":13,"column":41,"index":848}}],"key":"+GSAvg/CWfG2ifOQrWLkai/D9hY=","exportNames":["*"],"imports":1}},{"name":"../lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":866},"end":{"line":14,"column":39,"index":889}}],"key":"m5IduDkD0DmXIm44QxetlLAeo0E=","exportNames":["*"],"imports":1}},{"name":"../lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":18,"index":909},"end":{"line":15,"column":43,"index":934}}],"key":"g7hF4pHwnWO84hRO36vjqsLwW80=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var constants_1 = require(_dependencyMap[2], \"../lib/constants\");\n  var errors_1 = require(_dependencyMap[3], \"../lib/errors\");\n  var fetch_1 = require(_dependencyMap[4], \"../lib/fetch\");\n  var helpers_1 = require(_dependencyMap[5], \"../lib/helpers\");\n  var StorageBucketApi = /*#__PURE__*/function () {\n    function StorageBucketApi(url) {\n      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var fetch = arguments.length > 2 ? arguments[2] : undefined;\n      var opts = arguments.length > 3 ? arguments[3] : undefined;\n      _classCallCheck(this, StorageBucketApi);\n      this.shouldThrowOnError = false;\n      var baseUrl = new URL(url);\n      // if legacy uri is used, replace with new storage host (disables request buffering to allow > 50GB uploads)\n      // \"project-ref.supabase.co\" becomes \"project-ref.storage.supabase.co\"\n      if (opts === null || opts === void 0 ? void 0 : opts.useNewHostname) {\n        var isSupabaseHost = /supabase\\.(co|in|red)$/.test(baseUrl.hostname);\n        if (isSupabaseHost && !baseUrl.hostname.includes('storage.supabase.')) {\n          baseUrl.hostname = baseUrl.hostname.replace('supabase.', 'storage.supabase.');\n        }\n      }\n      this.url = baseUrl.href;\n      this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n      this.fetch = (0, helpers_1.resolveFetch)(fetch);\n    }\n    /**\n     * Enable throwing errors instead of returning them.\n     */\n    return _createClass(StorageBucketApi, [{\n      key: \"throwOnError\",\n      value: function throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n      }\n      /**\n       * Retrieves the details of all Storage buckets within an existing project.\n       */\n    }, {\n      key: \"listBuckets\",\n      value: function listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket`, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Retrieves the details of an existing Storage bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to retrieve.\n       */\n    }, {\n      key: \"getBucket\",\n      value: function getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.get)(this.fetch, `${this.url}/bucket/${id}`, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Creates a new Storage bucket\n       *\n       * @param id A unique identifier for the bucket you are creating.\n       * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n       * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n       * The global file size limit takes precedence over this value.\n       * The default value is null, which doesn't set a per bucket file size limit.\n       * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n       * The default value is null, which allows files with all mime types to be uploaded.\n       * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n       * @returns newly created bucket id\n       * @param options.type (private-beta) specifies the bucket type. see `BucketType` for more details.\n       *   - default bucket type is `STANDARD`\n       */\n    }, {\n      key: \"createBucket\",\n      value: function createBucket(id) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          public: false\n        };\n        return __awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket`, {\n              id,\n              name: id,\n              type: options.type,\n              public: options.public,\n              file_size_limit: options.fileSizeLimit,\n              allowed_mime_types: options.allowedMimeTypes\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Updates a Storage bucket\n       *\n       * @param id A unique identifier for the bucket you are updating.\n       * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n       * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n       * The global file size limit takes precedence over this value.\n       * The default value is null, which doesn't set a per bucket file size limit.\n       * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n       * The default value is null, which allows files with all mime types to be uploaded.\n       * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n       */\n    }, {\n      key: \"updateBucket\",\n      value: function updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.put)(this.fetch, `${this.url}/bucket/${id}`, {\n              id,\n              name: id,\n              public: options.public,\n              file_size_limit: options.fileSizeLimit,\n              allowed_mime_types: options.allowedMimeTypes\n            }, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Removes all objects inside a single bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to empty.\n       */\n    }, {\n      key: \"emptyBucket\",\n      value: function emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.post)(this.fetch, `${this.url}/bucket/${id}/empty`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n      /**\n       * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n       * You must first `empty()` the bucket.\n       *\n       * @param id The unique identifier of the bucket you would like to delete.\n       */\n    }, {\n      key: \"deleteBucket\",\n      value: function deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n          try {\n            var data = yield (0, fetch_1.remove)(this.fetch, `${this.url}/bucket/${id}`, {}, {\n              headers: this.headers\n            });\n            return {\n              data,\n              error: null\n            };\n          } catch (error) {\n            if (this.shouldThrowOnError) {\n              throw error;\n            }\n            if ((0, errors_1.isStorageError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n      }\n    }]);\n  }();\n  exports.default = StorageBucketApi;\n});","lineCount":290,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[4,92,1,13,"default"],[4,99,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[5,86,1,13,"default"],[5,93,1,13],[6,2,2,0],[6,6,2,4,"__awaiter"],[6,15,2,13],[6,18,2,17],[6,22,2,21],[6,26,2,25],[6,30,2,29],[6,31,2,30,"__awaiter"],[6,40,2,39],[6,44,2,44],[6,54,2,54,"thisArg"],[6,61,2,61],[6,63,2,63,"_arguments"],[6,73,2,73],[6,75,2,75,"P"],[6,76,2,76],[6,78,2,78,"generator"],[6,87,2,87],[6,89,2,89],[7,4,3,4],[7,13,3,13,"adopt"],[7,18,3,18,"adopt"],[7,19,3,19,"value"],[7,24,3,24],[7,26,3,26],[8,6,3,28],[8,13,3,35,"value"],[8,18,3,40],[8,30,3,52,"P"],[8,31,3,53],[8,34,3,56,"value"],[8,39,3,61],[8,42,3,64],[8,46,3,68,"P"],[8,47,3,69],[8,48,3,70],[8,58,3,80,"resolve"],[8,65,3,87],[8,67,3,89],[9,8,3,91,"resolve"],[9,15,3,98],[9,16,3,99,"value"],[9,21,3,104],[9,22,3,105],[10,6,3,107],[10,7,3,108],[10,8,3,109],[11,4,3,111],[12,4,4,4],[12,11,4,11],[12,16,4,16,"P"],[12,17,4,17],[12,22,4,22,"P"],[12,23,4,23],[12,26,4,26,"Promise"],[12,33,4,33],[12,34,4,34],[12,36,4,36],[12,46,4,46,"resolve"],[12,53,4,53],[12,55,4,55,"reject"],[12,61,4,61],[12,63,4,63],[13,6,5,8],[13,15,5,17,"fulfilled"],[13,24,5,26,"fulfilled"],[13,25,5,27,"value"],[13,30,5,32],[13,32,5,34],[14,8,5,36],[14,12,5,40],[15,10,5,42,"step"],[15,14,5,46],[15,15,5,47,"generator"],[15,24,5,56],[15,25,5,57,"next"],[15,29,5,61],[15,30,5,62,"value"],[15,35,5,67],[15,36,5,68],[15,37,5,69],[16,8,5,71],[16,9,5,72],[16,10,5,73],[16,17,5,80,"e"],[16,18,5,81],[16,20,5,83],[17,10,5,85,"reject"],[17,16,5,91],[17,17,5,92,"e"],[17,18,5,93],[17,19,5,94],[18,8,5,96],[19,6,5,98],[20,6,6,8],[20,15,6,17,"rejected"],[20,23,6,25,"rejected"],[20,24,6,26,"value"],[20,29,6,31],[20,31,6,33],[21,8,6,35],[21,12,6,39],[22,10,6,41,"step"],[22,14,6,45],[22,15,6,46,"generator"],[22,24,6,55],[22,25,6,56],[22,32,6,63],[22,33,6,64],[22,34,6,65,"value"],[22,39,6,70],[22,40,6,71],[22,41,6,72],[23,8,6,74],[23,9,6,75],[23,10,6,76],[23,17,6,83,"e"],[23,18,6,84],[23,20,6,86],[24,10,6,88,"reject"],[24,16,6,94],[24,17,6,95,"e"],[24,18,6,96],[24,19,6,97],[25,8,6,99],[26,6,6,101],[27,6,7,8],[27,15,7,17,"step"],[27,19,7,21,"step"],[27,20,7,22,"result"],[27,26,7,28],[27,28,7,30],[28,8,7,32,"result"],[28,14,7,38],[28,15,7,39,"done"],[28,19,7,43],[28,22,7,46,"resolve"],[28,29,7,53],[28,30,7,54,"result"],[28,36,7,60],[28,37,7,61,"value"],[28,42,7,66],[28,43,7,67],[28,46,7,70,"adopt"],[28,51,7,75],[28,52,7,76,"result"],[28,58,7,82],[28,59,7,83,"value"],[28,64,7,88],[28,65,7,89],[28,66,7,90,"then"],[28,70,7,94],[28,71,7,95,"fulfilled"],[28,80,7,104],[28,82,7,106,"rejected"],[28,90,7,114],[28,91,7,115],[29,6,7,117],[30,6,8,8,"step"],[30,10,8,12],[30,11,8,13],[30,12,8,14,"generator"],[30,21,8,23],[30,24,8,26,"generator"],[30,33,8,35],[30,34,8,36,"apply"],[30,39,8,41],[30,40,8,42,"thisArg"],[30,47,8,49],[30,49,8,51,"_arguments"],[30,59,8,61],[30,63,8,65],[30,65,8,67],[30,66,8,68],[30,68,8,70,"next"],[30,72,8,74],[30,73,8,75],[30,74,8,76],[30,75,8,77],[31,4,9,4],[31,5,9,5],[31,6,9,6],[32,2,10,0],[32,3,10,1],[33,2,11,0,"Object"],[33,8,11,6],[33,9,11,7,"defineProperty"],[33,23,11,21],[33,24,11,22,"exports"],[33,31,11,29],[33,33,11,31],[33,45,11,43],[33,47,11,45],[34,4,11,47,"value"],[34,9,11,52],[34,11,11,54],[35,2,11,59],[35,3,11,60],[35,4,11,61],[36,2,12,0],[36,6,12,6,"constants_1"],[36,17,12,17],[36,20,12,20,"require"],[36,27,12,27],[36,28,12,27,"_dependencyMap"],[36,42,12,27],[36,65,12,46],[36,66,12,47],[37,2,13,0],[37,6,13,6,"errors_1"],[37,14,13,14],[37,17,13,17,"require"],[37,24,13,24],[37,25,13,24,"_dependencyMap"],[37,39,13,24],[37,59,13,40],[37,60,13,41],[38,2,14,0],[38,6,14,6,"fetch_1"],[38,13,14,13],[38,16,14,16,"require"],[38,23,14,23],[38,24,14,23,"_dependencyMap"],[38,38,14,23],[38,57,14,38],[38,58,14,39],[39,2,15,0],[39,6,15,6,"helpers_1"],[39,15,15,15],[39,18,15,18,"require"],[39,25,15,25],[39,26,15,25,"_dependencyMap"],[39,40,15,25],[39,61,15,42],[39,62,15,43],[40,2,15,44],[40,6,16,6,"StorageBucketApi"],[40,22,16,22],[41,4,17,4],[41,13,17,4,"StorageBucketApi"],[41,30,17,16,"url"],[41,33,17,19],[41,35,17,48],[42,6,17,48],[42,10,17,21,"headers"],[42,17,17,28],[42,20,17,28,"arguments"],[42,29,17,28],[42,30,17,28,"length"],[42,36,17,28],[42,44,17,28,"arguments"],[42,53,17,28],[42,61,17,28,"undefined"],[42,70,17,28],[42,73,17,28,"arguments"],[42,82,17,28],[42,88,17,31],[42,89,17,32],[42,90,17,33],[43,6,17,33],[43,10,17,35,"fetch"],[43,15,17,40],[43,18,17,40,"arguments"],[43,27,17,40],[43,28,17,40,"length"],[43,34,17,40],[43,41,17,40,"arguments"],[43,50,17,40],[43,56,17,40,"undefined"],[43,65,17,40],[44,6,17,40],[44,10,17,42,"opts"],[44,14,17,46],[44,17,17,46,"arguments"],[44,26,17,46],[44,27,17,46,"length"],[44,33,17,46],[44,40,17,46,"arguments"],[44,49,17,46],[44,55,17,46,"undefined"],[44,64,17,46],[45,6,17,46,"_classCallCheck"],[45,21,17,46],[45,28,17,46,"StorageBucketApi"],[45,44,17,46],[46,6,18,8],[46,10,18,12],[46,11,18,13,"shouldThrowOnError"],[46,29,18,31],[46,32,18,34],[46,37,18,39],[47,6,19,8],[47,10,19,14,"baseUrl"],[47,17,19,21],[47,20,19,24],[47,24,19,28,"URL"],[47,27,19,31],[47,28,19,32,"url"],[47,31,19,35],[47,32,19,36],[48,6,20,8],[49,6,21,8],[50,6,22,8],[50,10,22,12,"opts"],[50,14,22,16],[50,19,22,21],[50,23,22,25],[50,27,22,29,"opts"],[50,31,22,33],[50,36,22,38],[50,41,22,43],[50,42,22,44],[50,45,22,47],[50,50,22,52],[50,51,22,53],[50,54,22,56,"opts"],[50,58,22,60],[50,59,22,61,"useNewHostname"],[50,73,22,75],[50,75,22,77],[51,8,23,12],[51,12,23,18,"isSupabaseHost"],[51,26,23,32],[51,29,23,35],[51,53,23,59],[51,54,23,60,"test"],[51,58,23,64],[51,59,23,65,"baseUrl"],[51,66,23,72],[51,67,23,73,"hostname"],[51,75,23,81],[51,76,23,82],[52,8,24,12],[52,12,24,16,"isSupabaseHost"],[52,26,24,30],[52,30,24,34],[52,31,24,35,"baseUrl"],[52,38,24,42],[52,39,24,43,"hostname"],[52,47,24,51],[52,48,24,52,"includes"],[52,56,24,60],[52,57,24,61],[52,76,24,80],[52,77,24,81],[52,79,24,83],[53,10,25,16,"baseUrl"],[53,17,25,23],[53,18,25,24,"hostname"],[53,26,25,32],[53,29,25,35,"baseUrl"],[53,36,25,42],[53,37,25,43,"hostname"],[53,45,25,51],[53,46,25,52,"replace"],[53,53,25,59],[53,54,25,60],[53,65,25,71],[53,67,25,73],[53,86,25,92],[53,87,25,93],[54,8,26,12],[55,6,27,8],[56,6,28,8],[56,10,28,12],[56,11,28,13,"url"],[56,14,28,16],[56,17,28,19,"baseUrl"],[56,24,28,26],[56,25,28,27,"href"],[56,29,28,31],[57,6,29,8],[57,10,29,12],[57,11,29,13,"headers"],[57,18,29,20],[57,21,29,23,"Object"],[57,27,29,29],[57,28,29,30,"assign"],[57,34,29,36],[57,35,29,37,"Object"],[57,41,29,43],[57,42,29,44,"assign"],[57,48,29,50],[57,49,29,51],[57,50,29,52],[57,51,29,53],[57,53,29,55,"constants_1"],[57,64,29,66],[57,65,29,67,"DEFAULT_HEADERS"],[57,80,29,82],[57,81,29,83],[57,83,29,85,"headers"],[57,90,29,92],[57,91,29,93],[58,6,30,8],[58,10,30,12],[58,11,30,13,"fetch"],[58,16,30,18],[58,19,30,21],[58,20,30,22],[58,21,30,23],[58,23,30,25,"helpers_1"],[58,32,30,34],[58,33,30,35,"resolveFetch"],[58,45,30,47],[58,47,30,49,"fetch"],[58,52,30,54],[58,53,30,55],[59,4,31,4],[60,4,32,4],[61,0,33,0],[62,0,34,0],[63,4,32,4],[63,11,32,4,"_createClass"],[63,23,32,4],[63,24,32,4,"StorageBucketApi"],[63,40,32,4],[64,6,32,4,"key"],[64,9,32,4],[65,6,32,4,"value"],[65,11,32,4],[65,13,35,4],[65,22,35,4,"throwOnError"],[65,34,35,16,"throwOnError"],[65,35,35,16],[65,37,35,19],[66,8,36,8],[66,12,36,12],[66,13,36,13,"shouldThrowOnError"],[66,31,36,31],[66,34,36,34],[66,38,36,38],[67,8,37,8],[67,15,37,15],[67,19,37,19],[68,6,38,4],[69,6,39,4],[70,0,40,0],[71,0,41,0],[72,4,39,4],[73,6,39,4,"key"],[73,9,39,4],[74,6,39,4,"value"],[74,11,39,4],[74,13,42,4],[74,22,42,4,"listBuckets"],[74,33,42,15,"listBuckets"],[74,34,42,15],[74,36,42,18],[75,8,43,8],[75,15,43,15,"__awaiter"],[75,24,43,24],[75,25,43,25],[75,29,43,29],[75,31,43,31],[75,36,43,36],[75,37,43,37],[75,39,43,39],[75,44,43,44],[75,45,43,45],[75,47,43,47],[75,60,43,60],[76,10,44,12],[76,14,44,16],[77,12,45,16],[77,16,45,22,"data"],[77,20,45,26],[77,23,45,29],[77,29,45,35],[77,30,45,36],[77,31,45,37],[77,33,45,39,"fetch_1"],[77,40,45,46],[77,41,45,47,"get"],[77,44,45,50],[77,46,45,52],[77,50,45,56],[77,51,45,57,"fetch"],[77,56,45,62],[77,58,45,64],[77,61,45,67],[77,65,45,71],[77,66,45,72,"url"],[77,69,45,75],[77,78,45,84],[77,80,45,86],[78,14,45,88,"headers"],[78,21,45,95],[78,23,45,97],[78,27,45,101],[78,28,45,102,"headers"],[79,12,45,110],[79,13,45,111],[79,14,45,112],[80,12,46,16],[80,19,46,23],[81,14,46,25,"data"],[81,18,46,29],[82,14,46,31,"error"],[82,19,46,36],[82,21,46,38],[83,12,46,43],[83,13,46,44],[84,10,47,12],[84,11,47,13],[84,12,48,12],[84,19,48,19,"error"],[84,24,48,24],[84,26,48,26],[85,12,49,16],[85,16,49,20],[85,20,49,24],[85,21,49,25,"shouldThrowOnError"],[85,39,49,43],[85,41,49,45],[86,14,50,20],[86,20,50,26,"error"],[86,25,50,31],[87,12,51,16],[88,12,52,16],[88,16,52,20],[88,17,52,21],[88,18,52,22],[88,20,52,24,"errors_1"],[88,28,52,32],[88,29,52,33,"isStorageError"],[88,43,52,47],[88,45,52,49,"error"],[88,50,52,54],[88,51,52,55],[88,53,52,57],[89,14,53,20],[89,21,53,27],[90,16,53,29,"data"],[90,20,53,33],[90,22,53,35],[90,26,53,39],[91,16,53,41,"error"],[92,14,53,47],[92,15,53,48],[93,12,54,16],[94,12,55,16],[94,18,55,22,"error"],[94,23,55,27],[95,10,56,12],[96,8,57,8],[96,9,57,9],[96,10,57,10],[97,6,58,4],[98,6,59,4],[99,0,60,0],[100,0,61,0],[101,0,62,0],[102,0,63,0],[103,4,59,4],[104,6,59,4,"key"],[104,9,59,4],[105,6,59,4,"value"],[105,11,59,4],[105,13,64,4],[105,22,64,4,"getBucket"],[105,31,64,13,"getBucket"],[105,32,64,14,"id"],[105,34,64,16],[105,36,64,18],[106,8,65,8],[106,15,65,15,"__awaiter"],[106,24,65,24],[106,25,65,25],[106,29,65,29],[106,31,65,31],[106,36,65,36],[106,37,65,37],[106,39,65,39],[106,44,65,44],[106,45,65,45],[106,47,65,47],[106,60,65,60],[107,10,66,12],[107,14,66,16],[108,12,67,16],[108,16,67,22,"data"],[108,20,67,26],[108,23,67,29],[108,29,67,35],[108,30,67,36],[108,31,67,37],[108,33,67,39,"fetch_1"],[108,40,67,46],[108,41,67,47,"get"],[108,44,67,50],[108,46,67,52],[108,50,67,56],[108,51,67,57,"fetch"],[108,56,67,62],[108,58,67,64],[108,61,67,67],[108,65,67,71],[108,66,67,72,"url"],[108,69,67,75],[108,80,67,86,"id"],[108,82,67,88],[108,84,67,90],[108,86,67,92],[109,14,67,94,"headers"],[109,21,67,101],[109,23,67,103],[109,27,67,107],[109,28,67,108,"headers"],[110,12,67,116],[110,13,67,117],[110,14,67,118],[111,12,68,16],[111,19,68,23],[112,14,68,25,"data"],[112,18,68,29],[113,14,68,31,"error"],[113,19,68,36],[113,21,68,38],[114,12,68,43],[114,13,68,44],[115,10,69,12],[115,11,69,13],[115,12,70,12],[115,19,70,19,"error"],[115,24,70,24],[115,26,70,26],[116,12,71,16],[116,16,71,20],[116,20,71,24],[116,21,71,25,"shouldThrowOnError"],[116,39,71,43],[116,41,71,45],[117,14,72,20],[117,20,72,26,"error"],[117,25,72,31],[118,12,73,16],[119,12,74,16],[119,16,74,20],[119,17,74,21],[119,18,74,22],[119,20,74,24,"errors_1"],[119,28,74,32],[119,29,74,33,"isStorageError"],[119,43,74,47],[119,45,74,49,"error"],[119,50,74,54],[119,51,74,55],[119,53,74,57],[120,14,75,20],[120,21,75,27],[121,16,75,29,"data"],[121,20,75,33],[121,22,75,35],[121,26,75,39],[122,16,75,41,"error"],[123,14,75,47],[123,15,75,48],[124,12,76,16],[125,12,77,16],[125,18,77,22,"error"],[125,23,77,27],[126,10,78,12],[127,8,79,8],[127,9,79,9],[127,10,79,10],[128,6,80,4],[129,6,81,4],[130,0,82,0],[131,0,83,0],[132,0,84,0],[133,0,85,0],[134,0,86,0],[135,0,87,0],[136,0,88,0],[137,0,89,0],[138,0,90,0],[139,0,91,0],[140,0,92,0],[141,0,93,0],[142,0,94,0],[143,0,95,0],[144,4,81,4],[145,6,81,4,"key"],[145,9,81,4],[146,6,81,4,"value"],[146,11,81,4],[146,13,96,4],[146,22,96,4,"createBucket"],[146,34,96,16,"createBucket"],[146,35,96,17,"id"],[146,37,96,19],[146,39,98,7],[147,8,98,7],[147,12,96,21,"options"],[147,19,96,28],[147,22,96,28,"arguments"],[147,31,96,28],[147,32,96,28,"length"],[147,38,96,28],[147,46,96,28,"arguments"],[147,55,96,28],[147,63,96,28,"undefined"],[147,72,96,28],[147,75,96,28,"arguments"],[147,84,96,28],[147,90,96,31],[148,10,97,8,"public"],[148,16,97,14],[148,18,97,16],[149,8,98,4],[149,9,98,5],[150,8,99,8],[150,15,99,15,"__awaiter"],[150,24,99,24],[150,25,99,25],[150,29,99,29],[150,31,99,31],[150,36,99,36],[150,37,99,37],[150,39,99,39],[150,44,99,44],[150,45,99,45],[150,47,99,47],[150,60,99,60],[151,10,100,12],[151,14,100,16],[152,12,101,16],[152,16,101,22,"data"],[152,20,101,26],[152,23,101,29],[152,29,101,35],[152,30,101,36],[152,31,101,37],[152,33,101,39,"fetch_1"],[152,40,101,46],[152,41,101,47,"post"],[152,45,101,51],[152,47,101,53],[152,51,101,57],[152,52,101,58,"fetch"],[152,57,101,63],[152,59,101,65],[152,62,101,68],[152,66,101,72],[152,67,101,73,"url"],[152,70,101,76],[152,79,101,85],[152,81,101,87],[153,14,102,20,"id"],[153,16,102,22],[154,14,103,20,"name"],[154,18,103,24],[154,20,103,26,"id"],[154,22,103,28],[155,14,104,20,"type"],[155,18,104,24],[155,20,104,26,"options"],[155,27,104,33],[155,28,104,34,"type"],[155,32,104,38],[156,14,105,20,"public"],[156,20,105,26],[156,22,105,28,"options"],[156,29,105,35],[156,30,105,36,"public"],[156,36,105,42],[157,14,106,20,"file_size_limit"],[157,29,106,35],[157,31,106,37,"options"],[157,38,106,44],[157,39,106,45,"fileSizeLimit"],[157,52,106,58],[158,14,107,20,"allowed_mime_types"],[158,32,107,38],[158,34,107,40,"options"],[158,41,107,47],[158,42,107,48,"allowedMimeTypes"],[159,12,108,16],[159,13,108,17],[159,15,108,19],[160,14,108,21,"headers"],[160,21,108,28],[160,23,108,30],[160,27,108,34],[160,28,108,35,"headers"],[161,12,108,43],[161,13,108,44],[161,14,108,45],[162,12,109,16],[162,19,109,23],[163,14,109,25,"data"],[163,18,109,29],[164,14,109,31,"error"],[164,19,109,36],[164,21,109,38],[165,12,109,43],[165,13,109,44],[166,10,110,12],[166,11,110,13],[166,12,111,12],[166,19,111,19,"error"],[166,24,111,24],[166,26,111,26],[167,12,112,16],[167,16,112,20],[167,20,112,24],[167,21,112,25,"shouldThrowOnError"],[167,39,112,43],[167,41,112,45],[168,14,113,20],[168,20,113,26,"error"],[168,25,113,31],[169,12,114,16],[170,12,115,16],[170,16,115,20],[170,17,115,21],[170,18,115,22],[170,20,115,24,"errors_1"],[170,28,115,32],[170,29,115,33,"isStorageError"],[170,43,115,47],[170,45,115,49,"error"],[170,50,115,54],[170,51,115,55],[170,53,115,57],[171,14,116,20],[171,21,116,27],[172,16,116,29,"data"],[172,20,116,33],[172,22,116,35],[172,26,116,39],[173,16,116,41,"error"],[174,14,116,47],[174,15,116,48],[175,12,117,16],[176,12,118,16],[176,18,118,22,"error"],[176,23,118,27],[177,10,119,12],[178,8,120,8],[178,9,120,9],[178,10,120,10],[179,6,121,4],[180,6,122,4],[181,0,123,0],[182,0,124,0],[183,0,125,0],[184,0,126,0],[185,0,127,0],[186,0,128,0],[187,0,129,0],[188,0,130,0],[189,0,131,0],[190,0,132,0],[191,0,133,0],[192,4,122,4],[193,6,122,4,"key"],[193,9,122,4],[194,6,122,4,"value"],[194,11,122,4],[194,13,134,4],[194,22,134,4,"updateBucket"],[194,34,134,16,"updateBucket"],[194,35,134,17,"id"],[194,37,134,19],[194,39,134,21,"options"],[194,46,134,28],[194,48,134,30],[195,8,135,8],[195,15,135,15,"__awaiter"],[195,24,135,24],[195,25,135,25],[195,29,135,29],[195,31,135,31],[195,36,135,36],[195,37,135,37],[195,39,135,39],[195,44,135,44],[195,45,135,45],[195,47,135,47],[195,60,135,60],[196,10,136,12],[196,14,136,16],[197,12,137,16],[197,16,137,22,"data"],[197,20,137,26],[197,23,137,29],[197,29,137,35],[197,30,137,36],[197,31,137,37],[197,33,137,39,"fetch_1"],[197,40,137,46],[197,41,137,47,"put"],[197,44,137,50],[197,46,137,52],[197,50,137,56],[197,51,137,57,"fetch"],[197,56,137,62],[197,58,137,64],[197,61,137,67],[197,65,137,71],[197,66,137,72,"url"],[197,69,137,75],[197,80,137,86,"id"],[197,82,137,88],[197,84,137,90],[197,86,137,92],[198,14,138,20,"id"],[198,16,138,22],[199,14,139,20,"name"],[199,18,139,24],[199,20,139,26,"id"],[199,22,139,28],[200,14,140,20,"public"],[200,20,140,26],[200,22,140,28,"options"],[200,29,140,35],[200,30,140,36,"public"],[200,36,140,42],[201,14,141,20,"file_size_limit"],[201,29,141,35],[201,31,141,37,"options"],[201,38,141,44],[201,39,141,45,"fileSizeLimit"],[201,52,141,58],[202,14,142,20,"allowed_mime_types"],[202,32,142,38],[202,34,142,40,"options"],[202,41,142,47],[202,42,142,48,"allowedMimeTypes"],[203,12,143,16],[203,13,143,17],[203,15,143,19],[204,14,143,21,"headers"],[204,21,143,28],[204,23,143,30],[204,27,143,34],[204,28,143,35,"headers"],[205,12,143,43],[205,13,143,44],[205,14,143,45],[206,12,144,16],[206,19,144,23],[207,14,144,25,"data"],[207,18,144,29],[208,14,144,31,"error"],[208,19,144,36],[208,21,144,38],[209,12,144,43],[209,13,144,44],[210,10,145,12],[210,11,145,13],[210,12,146,12],[210,19,146,19,"error"],[210,24,146,24],[210,26,146,26],[211,12,147,16],[211,16,147,20],[211,20,147,24],[211,21,147,25,"shouldThrowOnError"],[211,39,147,43],[211,41,147,45],[212,14,148,20],[212,20,148,26,"error"],[212,25,148,31],[213,12,149,16],[214,12,150,16],[214,16,150,20],[214,17,150,21],[214,18,150,22],[214,20,150,24,"errors_1"],[214,28,150,32],[214,29,150,33,"isStorageError"],[214,43,150,47],[214,45,150,49,"error"],[214,50,150,54],[214,51,150,55],[214,53,150,57],[215,14,151,20],[215,21,151,27],[216,16,151,29,"data"],[216,20,151,33],[216,22,151,35],[216,26,151,39],[217,16,151,41,"error"],[218,14,151,47],[218,15,151,48],[219,12,152,16],[220,12,153,16],[220,18,153,22,"error"],[220,23,153,27],[221,10,154,12],[222,8,155,8],[222,9,155,9],[222,10,155,10],[223,6,156,4],[224,6,157,4],[225,0,158,0],[226,0,159,0],[227,0,160,0],[228,0,161,0],[229,4,157,4],[230,6,157,4,"key"],[230,9,157,4],[231,6,157,4,"value"],[231,11,157,4],[231,13,162,4],[231,22,162,4,"emptyBucket"],[231,33,162,15,"emptyBucket"],[231,34,162,16,"id"],[231,36,162,18],[231,38,162,20],[232,8,163,8],[232,15,163,15,"__awaiter"],[232,24,163,24],[232,25,163,25],[232,29,163,29],[232,31,163,31],[232,36,163,36],[232,37,163,37],[232,39,163,39],[232,44,163,44],[232,45,163,45],[232,47,163,47],[232,60,163,60],[233,10,164,12],[233,14,164,16],[234,12,165,16],[234,16,165,22,"data"],[234,20,165,26],[234,23,165,29],[234,29,165,35],[234,30,165,36],[234,31,165,37],[234,33,165,39,"fetch_1"],[234,40,165,46],[234,41,165,47,"post"],[234,45,165,51],[234,47,165,53],[234,51,165,57],[234,52,165,58,"fetch"],[234,57,165,63],[234,59,165,65],[234,62,165,68],[234,66,165,72],[234,67,165,73,"url"],[234,70,165,76],[234,81,165,87,"id"],[234,83,165,89],[234,91,165,97],[234,93,165,99],[234,94,165,100],[234,95,165,101],[234,97,165,103],[235,14,165,105,"headers"],[235,21,165,112],[235,23,165,114],[235,27,165,118],[235,28,165,119,"headers"],[236,12,165,127],[236,13,165,128],[236,14,165,129],[237,12,166,16],[237,19,166,23],[238,14,166,25,"data"],[238,18,166,29],[239,14,166,31,"error"],[239,19,166,36],[239,21,166,38],[240,12,166,43],[240,13,166,44],[241,10,167,12],[241,11,167,13],[241,12,168,12],[241,19,168,19,"error"],[241,24,168,24],[241,26,168,26],[242,12,169,16],[242,16,169,20],[242,20,169,24],[242,21,169,25,"shouldThrowOnError"],[242,39,169,43],[242,41,169,45],[243,14,170,20],[243,20,170,26,"error"],[243,25,170,31],[244,12,171,16],[245,12,172,16],[245,16,172,20],[245,17,172,21],[245,18,172,22],[245,20,172,24,"errors_1"],[245,28,172,32],[245,29,172,33,"isStorageError"],[245,43,172,47],[245,45,172,49,"error"],[245,50,172,54],[245,51,172,55],[245,53,172,57],[246,14,173,20],[246,21,173,27],[247,16,173,29,"data"],[247,20,173,33],[247,22,173,35],[247,26,173,39],[248,16,173,41,"error"],[249,14,173,47],[249,15,173,48],[250,12,174,16],[251,12,175,16],[251,18,175,22,"error"],[251,23,175,27],[252,10,176,12],[253,8,177,8],[253,9,177,9],[253,10,177,10],[254,6,178,4],[255,6,179,4],[256,0,180,0],[257,0,181,0],[258,0,182,0],[259,0,183,0],[260,0,184,0],[261,4,179,4],[262,6,179,4,"key"],[262,9,179,4],[263,6,179,4,"value"],[263,11,179,4],[263,13,185,4],[263,22,185,4,"deleteBucket"],[263,34,185,16,"deleteBucket"],[263,35,185,17,"id"],[263,37,185,19],[263,39,185,21],[264,8,186,8],[264,15,186,15,"__awaiter"],[264,24,186,24],[264,25,186,25],[264,29,186,29],[264,31,186,31],[264,36,186,36],[264,37,186,37],[264,39,186,39],[264,44,186,44],[264,45,186,45],[264,47,186,47],[264,60,186,60],[265,10,187,12],[265,14,187,16],[266,12,188,16],[266,16,188,22,"data"],[266,20,188,26],[266,23,188,29],[266,29,188,35],[266,30,188,36],[266,31,188,37],[266,33,188,39,"fetch_1"],[266,40,188,46],[266,41,188,47,"remove"],[266,47,188,53],[266,49,188,55],[266,53,188,59],[266,54,188,60,"fetch"],[266,59,188,65],[266,61,188,67],[266,64,188,70],[266,68,188,74],[266,69,188,75,"url"],[266,72,188,78],[266,83,188,89,"id"],[266,85,188,91],[266,87,188,93],[266,89,188,95],[266,90,188,96],[266,91,188,97],[266,93,188,99],[267,14,188,101,"headers"],[267,21,188,108],[267,23,188,110],[267,27,188,114],[267,28,188,115,"headers"],[268,12,188,123],[268,13,188,124],[268,14,188,125],[269,12,189,16],[269,19,189,23],[270,14,189,25,"data"],[270,18,189,29],[271,14,189,31,"error"],[271,19,189,36],[271,21,189,38],[272,12,189,43],[272,13,189,44],[273,10,190,12],[273,11,190,13],[273,12,191,12],[273,19,191,19,"error"],[273,24,191,24],[273,26,191,26],[274,12,192,16],[274,16,192,20],[274,20,192,24],[274,21,192,25,"shouldThrowOnError"],[274,39,192,43],[274,41,192,45],[275,14,193,20],[275,20,193,26,"error"],[275,25,193,31],[276,12,194,16],[277,12,195,16],[277,16,195,20],[277,17,195,21],[277,18,195,22],[277,20,195,24,"errors_1"],[277,28,195,32],[277,29,195,33,"isStorageError"],[277,43,195,47],[277,45,195,49,"error"],[277,50,195,54],[277,51,195,55],[277,53,195,57],[278,14,196,20],[278,21,196,27],[279,16,196,29,"data"],[279,20,196,33],[279,22,196,35],[279,26,196,39],[280,16,196,41,"error"],[281,14,196,47],[281,15,196,48],[282,12,197,16],[283,12,198,16],[283,18,198,22,"error"],[283,23,198,27],[284,10,199,12],[285,8,200,8],[285,9,200,9],[285,10,200,10],[286,6,201,4],[287,4,201,5],[288,2,201,5],[289,2,203,0,"exports"],[289,9,203,7],[289,10,203,8,"default"],[289,17,203,15],[289,20,203,18,"StorageBucketApi"],[289,36,203,34],[290,0,203,35],[290,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","StorageBucketApi","constructor","throwOnError","listBuckets","__awaiter$argument_3","getBucket","createBucket","updateBucket","emptyBucket","deleteBucket"],"mappings":"AAA;4CCC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;AOM;ICC;KDc;IEI;KFG;IGI;+CCC;SDc;KHC;IKM;+CDC;SCc;KLC;IMgB;+CFG;SEqB;KNC;IOa;+CHC;SGoB;KPC;IQM;+CJC;SIc;KRC;ISO;+CLC;SKc;KTC;CPC"},"hasCjsExports":true},"type":"js/module"}]}