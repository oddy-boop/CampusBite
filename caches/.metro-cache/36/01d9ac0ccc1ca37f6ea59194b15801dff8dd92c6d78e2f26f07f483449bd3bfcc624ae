{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"./GoTrueAdminApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":257},"end":{"line":6,"column":68,"index":284}}],"key":"i76uMxXVdWAA3Rph0eWK7LoaO/w=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":307},"end":{"line":7,"column":46,"index":333}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":352},"end":{"line":8,"column":40,"index":375}}],"key":"Hvlclxpmmg311e5qhG3wYodSjVs=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":393},"end":{"line":9,"column":38,"index":415}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":435},"end":{"line":10,"column":42,"index":459}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/local-storage","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":24,"index":485},"end":{"line":11,"column":54,"index":515}}],"key":"28e7FuPaeGJTeNMVDStJkLK21ZQ=","exportNames":["*"],"imports":1}},{"name":"./lib/polyfills","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":20,"index":537},"end":{"line":12,"column":46,"index":563}}],"key":"H1na6Pv39nAwh4LAnhORLuVehnY=","exportNames":["*"],"imports":1}},{"name":"./lib/version","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18,"index":583},"end":{"line":13,"column":42,"index":607}}],"key":"be4aTMTsFhd78/kHR0JbG8rudXE=","exportNames":["*"],"imports":1}},{"name":"./lib/locks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":16,"index":625},"end":{"line":14,"column":38,"index":647}}],"key":"30OMvxA5kFoj+Fk30l1b7z+Cmv4=","exportNames":["*"],"imports":1}},{"name":"./lib/base64url","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":20,"index":669},"end":{"line":15,"column":46,"index":695}}],"key":"A8ay9+wpIpGL0Q6K/yfIViI8mrc=","exportNames":["*"],"imports":1}},{"name":"./lib/web3/ethereum","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":19,"index":716},"end":{"line":16,"column":49,"index":746}}],"key":"7NCa1l0WsdounoYDseQIolyeoT4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var _asyncToGenerator = require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var GoTrueAdminApi_1 = __importDefault(require(_dependencyMap[4], \"./GoTrueAdminApi\"));\n  var constants_1 = require(_dependencyMap[5], \"./lib/constants\");\n  var errors_1 = require(_dependencyMap[6], \"./lib/errors\");\n  var fetch_1 = require(_dependencyMap[7], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[8], \"./lib/helpers\");\n  var local_storage_1 = require(_dependencyMap[9], \"./lib/local-storage\");\n  var polyfills_1 = require(_dependencyMap[10], \"./lib/polyfills\");\n  var version_1 = require(_dependencyMap[11], \"./lib/version\");\n  var locks_1 = require(_dependencyMap[12], \"./lib/locks\");\n  var base64url_1 = require(_dependencyMap[13], \"./lib/base64url\");\n  var ethereum_1 = require(_dependencyMap[14], \"./lib/web3/ethereum\");\n  (0, polyfills_1.polyfillGlobalThis)(); // Make \"globalThis\" available\n  var DEFAULT_OPTIONS = {\n    url: constants_1.GOTRUE_URL,\n    storageKey: constants_1.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: constants_1.DEFAULT_HEADERS,\n    flowType: 'implicit',\n    debug: false,\n    hasCustomAuthorizationHeader: false\n  };\n  function lockNoOp(_x, _x2, _x3) {\n    return _lockNoOp.apply(this, arguments);\n  }\n  /**\n   * Caches JWKS values for all clients created in the same environment. This is\n   * especially useful for shared-memory execution environments such as Vercel's\n   * Fluid Compute, AWS Lambda or Supabase's Edge Functions. Regardless of how\n   * many clients are created, if they share the same storage key they will use\n   * the same JWKS cache, significantly speeding up getClaims() with asymmetric\n   * JWTs.\n   */\n  function _lockNoOp() {\n    _lockNoOp = _asyncToGenerator(function* (name, acquireTimeout, fn) {\n      return yield fn();\n    });\n    return _lockNoOp.apply(this, arguments);\n  }\n  var GLOBAL_JWKS = {};\n  var GoTrueClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     */\n    function GoTrueClient(options) {\n      var _this = this;\n      _classCallCheck(this, GoTrueClient);\n      var _a, _b;\n      /**\n       * @experimental\n       */\n      this.userStorage = null;\n      this.memoryStorage = null;\n      this.stateChangeEmitters = new Map();\n      this.autoRefreshTicker = null;\n      this.visibilityChangedCallback = null;\n      this.refreshingDeferred = null;\n      /**\n       * Keeps track of the async client initialization.\n       * When null or not yet resolved the auth state is `unknown`\n       * Once resolved the auth state is known and it's safe to call any further client methods.\n       * Keep extra care to never reject or throw uncaught errors\n       */\n      this.initializePromise = null;\n      this.detectSessionInUrl = true;\n      this.hasCustomAuthorizationHeader = false;\n      this.suppressGetSessionWarning = false;\n      this.lockAcquired = false;\n      this.pendingInLock = [];\n      /**\n       * Used to broadcast state change events to other tabs listening.\n       */\n      this.broadcastChannel = null;\n      this.logger = console.log;\n      this.instanceID = GoTrueClient.nextInstanceID;\n      GoTrueClient.nextInstanceID += 1;\n      if (this.instanceID > 0 && (0, helpers_1.isBrowser)()) {\n        console.warn('Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.');\n      }\n      var settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n      this.logDebugMessages = !!settings.debug;\n      if (typeof settings.debug === 'function') {\n        this.logger = settings.debug;\n      }\n      this.persistSession = settings.persistSession;\n      this.storageKey = settings.storageKey;\n      this.autoRefreshToken = settings.autoRefreshToken;\n      this.admin = new GoTrueAdminApi_1.default({\n        url: settings.url,\n        headers: settings.headers,\n        fetch: settings.fetch\n      });\n      this.url = settings.url;\n      this.headers = settings.headers;\n      this.fetch = (0, helpers_1.resolveFetch)(settings.fetch);\n      this.lock = settings.lock || lockNoOp;\n      this.detectSessionInUrl = settings.detectSessionInUrl;\n      this.flowType = settings.flowType;\n      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n      if (settings.lock) {\n        this.lock = settings.lock;\n      } else if ((0, helpers_1.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n        this.lock = locks_1.navigatorLock;\n      } else {\n        this.lock = lockNoOp;\n      }\n      if (!this.jwks) {\n        this.jwks = {\n          keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n      }\n      this.mfa = {\n        verify: this._verify.bind(this),\n        enroll: this._enroll.bind(this),\n        unenroll: this._unenroll.bind(this),\n        challenge: this._challenge.bind(this),\n        listFactors: this._listFactors.bind(this),\n        challengeAndVerify: this._challengeAndVerify.bind(this),\n        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n      };\n      if (this.persistSession) {\n        if (settings.storage) {\n          this.storage = settings.storage;\n        } else {\n          if ((0, helpers_1.supportsLocalStorage)()) {\n            this.storage = globalThis.localStorage;\n          } else {\n            this.memoryStorage = {};\n            this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n          }\n        }\n        if (settings.userStorage) {\n          this.userStorage = settings.userStorage;\n        }\n      } else {\n        this.memoryStorage = {};\n        this.storage = (0, local_storage_1.memoryLocalStorageAdapter)(this.memoryStorage);\n      }\n      if ((0, helpers_1.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n        try {\n          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n        } catch (e) {\n          console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n        }\n        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener('message', /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this._debug('received broadcast notification from other tab or client', event);\n            yield _this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n          });\n          return function (_x4) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n      this.initialize();\n    }\n    /**\n     * The JWKS used for verifying asymmetric JWTs\n     */\n    return _createClass(GoTrueClient, [{\n      key: \"jwks\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.jwks) !== null && _b !== void 0 ? _b : {\n          keys: []\n        };\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          jwks: value\n        });\n      }\n    }, {\n      key: \"jwks_cached_at\",\n      get: function () {\n        var _a, _b;\n        return (_b = (_a = GLOBAL_JWKS[this.storageKey]) === null || _a === void 0 ? void 0 : _a.cachedAt) !== null && _b !== void 0 ? _b : Number.MIN_SAFE_INTEGER;\n      },\n      set: function (value) {\n        GLOBAL_JWKS[this.storageKey] = Object.assign(Object.assign({}, GLOBAL_JWKS[this.storageKey]), {\n          cachedAt: value\n        });\n      }\n    }, {\n      key: \"_debug\",\n      value: function _debug() {\n        if (this.logDebugMessages) {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          this.logger(`GoTrueClient@${this.instanceID} (${version_1.version}) ${new Date().toISOString()}`, ...args);\n        }\n        return this;\n      }\n      /**\n       * Initializes the client session either from the url or from storage.\n       * This method is automatically called when instantiating the client, but should also be called\n       * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n       */\n    }, {\n      key: \"initialize\",\n      value: (function () {\n        var _initialize2 = _asyncToGenerator(function* () {\n          var _this2 = this;\n          if (this.initializePromise) {\n            return yield this.initializePromise;\n          }\n          this.initializePromise = _asyncToGenerator(function* () {\n            return yield _this2._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this2._initialize();\n            }));\n          })();\n          return yield this.initializePromise;\n        });\n        function initialize() {\n          return _initialize2.apply(this, arguments);\n        }\n        return initialize;\n      }()\n      /**\n       * IMPORTANT:\n       * 1. Never throw in this method, as it is called from the constructor\n       * 2. Never return a session from this method as it would be cached over\n       *    the whole lifetime of the client\n       */\n      )\n    }, {\n      key: \"_initialize\",\n      value: (function () {\n        var _initialize3 = _asyncToGenerator(function* () {\n          var _this3 = this;\n          var _a;\n          try {\n            var params = (0, helpers_1.parseParametersFromURL)(window.location.href);\n            var callbackUrlType = 'none';\n            if (this._isImplicitGrantCallback(params)) {\n              callbackUrlType = 'implicit';\n            } else if (yield this._isPKCECallback(params)) {\n              callbackUrlType = 'pkce';\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */\n            if ((0, helpers_1.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== 'none') {\n              var _yield$this$_getSessi = yield this._getSessionFromURL(params, callbackUrlType),\n                data = _yield$this$_getSessi.data,\n                error = _yield$this$_getSessi.error;\n              if (error) {\n                this._debug('#_initialize()', 'error detecting session from URL', error);\n                if ((0, errors_1.isAuthImplicitGrantRedirectError)(error)) {\n                  var errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                  if (errorCode === 'identity_already_exists' || errorCode === 'identity_not_found' || errorCode === 'single_identity_not_deletable') {\n                    return {\n                      error\n                    };\n                  }\n                }\n                // failed login attempt via url,\n                // remove old session as in verifyOtp, signUp and signInWith*\n                yield this._removeSession();\n                return {\n                  error\n                };\n              }\n              var session = data.session,\n                redirectType = data.redirectType;\n              this._debug('#_initialize()', 'detected session in URL', session, 'redirect type', redirectType);\n              yield this._saveSession(session);\n              setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n                if (redirectType === 'recovery') {\n                  yield _this3._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                } else {\n                  yield _this3._notifyAllSubscribers('SIGNED_IN', session);\n                }\n              }), 0);\n              return {\n                error: null\n              };\n            }\n            // no login attempt via callback url try to recover session from storage\n            yield this._recoverAndRefresh();\n            return {\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                error\n              };\n            }\n            return {\n              error: new errors_1.AuthUnknownError('Unexpected error during initialization', error)\n            };\n          } finally {\n            yield this._handleVisibilityChange();\n            this._debug('#_initialize()', 'end');\n          }\n        });\n        function _initialize() {\n          return _initialize3.apply(this, arguments);\n        }\n        return _initialize;\n      }()\n      /**\n       * Creates a new anonymous user.\n       *\n       * @returns A session where the is_anonymous claim in the access token JWT set to true\n       */\n      )\n    }, {\n      key: \"signInAnonymously\",\n      value: (function () {\n        var _signInAnonymously = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n              headers: this.headers,\n              body: {\n                data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                gotrue_meta_security: {\n                  captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInAnonymously(_x5) {\n          return _signInAnonymously.apply(this, arguments);\n        }\n        return signInAnonymously;\n      }()\n      /**\n       * Creates a new user.\n       *\n       * Be aware that if a user account exists in the system you may get back an\n       * error message that attempts to hide this information from the user.\n       * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n       *\n       * @returns A logged-in session if the server has \"autoconfirm\" ON\n       * @returns A user if the server has \"autoconfirm\" OFF\n       */\n      )\n    }, {\n      key: \"signUp\",\n      value: (function () {\n        var _signUp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c;\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield2 = _slicedToArray(_yield, 2);\n                codeChallenge = _yield2[0];\n                codeChallengeMethod = _yield2[1];\n              }\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                body: {\n                  email,\n                  password,\n                  data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  },\n                  code_challenge: codeChallenge,\n                  code_challenge_method: codeChallengeMethod\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password = credentials.password,\n                _options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/signup`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password,\n                  data: (_b = _options === null || _options === void 0 ? void 0 : _options.data) !== null && _b !== void 0 ? _b : {},\n                  channel: (_c = _options === null || _options === void 0 ? void 0 : _options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                  gotrue_meta_security: {\n                    captcha_token: _options === null || _options === void 0 ? void 0 : _options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponse\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res = res,\n              data = _res.data,\n              error = _res.error;\n            if (error || !data) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: error\n              };\n            }\n            var session = data.session;\n            var user = data.user;\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signUp(_x6) {\n          return _signUp.apply(this, arguments);\n        }\n        return signUp;\n      }()\n      /**\n       * Log in an existing user with an email and password or phone and password.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or that the\n       * email/phone and password combination is wrong or that the account can only\n       * be accessed via social login.\n       */\n      )\n    }, {\n      key: \"signInWithPassword\",\n      value: (function () {\n        var _signInWithPassword = _asyncToGenerator(function* (credentials) {\n          try {\n            var res;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                password = credentials.password,\n                options = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  email,\n                  password,\n                  gotrue_meta_security: {\n                    captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _password2 = credentials.password,\n                _options2 = credentials.options;\n              res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                headers: this.headers,\n                body: {\n                  phone,\n                  password: _password2,\n                  gotrue_meta_security: {\n                    captcha_token: _options2 === null || _options2 === void 0 ? void 0 : _options2.captchaToken\n                  }\n                },\n                xform: fetch_1._sessionResponsePassword\n              });\n            } else {\n              throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n            }\n            var _res2 = res,\n              data = _res2.data,\n              error = _res2.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({\n                user: data.user,\n                session: data.session\n              }, data.weak_password ? {\n                weakPassword: data.weak_password\n              } : null),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithPassword(_x7) {\n          return _signInWithPassword.apply(this, arguments);\n        }\n        return signInWithPassword;\n      }()\n      /**\n       * Log in an existing user via a third-party provider.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"signInWithOAuth\",\n      value: (function () {\n        var _signInWithOAuth = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d;\n          return yield this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n          });\n        });\n        function signInWithOAuth(_x8) {\n          return _signInWithOAuth.apply(this, arguments);\n        }\n        return signInWithOAuth;\n      }()\n      /**\n       * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n       */\n      )\n    }, {\n      key: \"exchangeCodeForSession\",\n      value: (function () {\n        var _exchangeCodeForSession2 = _asyncToGenerator(function* (authCode) {\n          var _this4 = this;\n          yield this.initializePromise;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this4._exchangeCodeForSession(authCode);\n          }));\n        });\n        function exchangeCodeForSession(_x9) {\n          return _exchangeCodeForSession2.apply(this, arguments);\n        }\n        return exchangeCodeForSession;\n      }()\n      /**\n       * Signs in a user by verifying a message signed by the user's private key.\n       * Supports Ethereum (via Sign-In-With-Ethereum) & Solana (Sign-In-With-Solana) standards,\n       * both of which derive from the EIP-4361 standard\n       * With slight variation on Solana's side.\n       * @reference https://eips.ethereum.org/EIPS/eip-4361\n       */\n      )\n    }, {\n      key: \"signInWithWeb3\",\n      value: (function () {\n        var _signInWithWeb = _asyncToGenerator(function* (credentials) {\n          var chain = credentials.chain;\n          switch (chain) {\n            case 'ethereum':\n              return yield this.signInWithEthereum(credentials);\n            case 'solana':\n              return yield this.signInWithSolana(credentials);\n            default:\n              throw new Error(`@supabase/auth-js: Unsupported chain \"${chain}\"`);\n          }\n        });\n        function signInWithWeb3(_x0) {\n          return _signInWithWeb.apply(this, arguments);\n        }\n        return signInWithWeb3;\n      }())\n    }, {\n      key: \"signInWithEthereum\",\n      value: function () {\n        var _signInWithEthereum = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n          // TODO: flatten type\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('ethereum' in windowAny && typeof windowAny.ethereum === 'object' && 'request' in windowAny.ethereum && typeof windowAny.ethereum.request === 'function') {\n                resolvedWallet = windowAny.ethereum;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Ethereum wallet interface on the window object (window.ethereum) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'ethereum', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            var accounts = yield resolvedWallet.request({\n              method: 'eth_requestAccounts'\n            }).then(accs => accs).catch(() => {\n              throw new Error(`@supabase/auth-js: Wallet method eth_requestAccounts is missing or invalid`);\n            });\n            if (!accounts || accounts.length === 0) {\n              throw new Error(`@supabase/auth-js: No accounts available. Please ensure the wallet is connected.`);\n            }\n            var address = (0, ethereum_1.getAddress)(accounts[0]);\n            var chainId = (_b = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _b === void 0 ? void 0 : _b.chainId;\n            if (!chainId) {\n              var chainIdHex = yield resolvedWallet.request({\n                method: 'eth_chainId'\n              });\n              chainId = (0, ethereum_1.fromHex)(chainIdHex);\n            }\n            var siweMessage = {\n              domain: url.host,\n              address: address,\n              statement: statement,\n              uri: url.href,\n              version: '1',\n              chainId: chainId,\n              nonce: (_c = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _c === void 0 ? void 0 : _c.nonce,\n              issuedAt: (_e = (_d = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _d === void 0 ? void 0 : _d.issuedAt) !== null && _e !== void 0 ? _e : new Date(),\n              expirationTime: (_f = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _f === void 0 ? void 0 : _f.expirationTime,\n              notBefore: (_g = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _g === void 0 ? void 0 : _g.notBefore,\n              requestId: (_h = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _h === void 0 ? void 0 : _h.requestId,\n              resources: (_j = options === null || options === void 0 ? void 0 : options.signInWithEthereum) === null || _j === void 0 ? void 0 : _j.resources\n            };\n            message = (0, ethereum_1.createSiweMessage)(siweMessage);\n            // Sign message\n            signature = yield resolvedWallet.request({\n              method: 'personal_sign',\n              params: [(0, ethereum_1.toHex)(message), address]\n            });\n          }\n          try {\n            var _yield3 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'ethereum',\n                  message,\n                  signature\n                }, ((_k = credentials.options) === null || _k === void 0 ? void 0 : _k.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield3.data,\n              error = _yield3.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithEthereum(_x1) {\n          return _signInWithEthereum.apply(this, arguments);\n        }\n        return signInWithEthereum;\n      }()\n    }, {\n      key: \"signInWithSolana\",\n      value: function () {\n        var _signInWithSolana = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n          var message;\n          var signature;\n          if ('message' in credentials) {\n            message = credentials.message;\n            signature = credentials.signature;\n          } else {\n            var chain = credentials.chain,\n              wallet = credentials.wallet,\n              statement = credentials.statement,\n              options = credentials.options;\n            var resolvedWallet;\n            if (!(0, helpers_1.isBrowser)()) {\n              if (typeof wallet !== 'object' || !(options === null || options === void 0 ? void 0 : options.url)) {\n                throw new Error('@supabase/auth-js: Both wallet and url must be specified in non-browser environments.');\n              }\n              resolvedWallet = wallet;\n            } else if (typeof wallet === 'object') {\n              resolvedWallet = wallet;\n            } else {\n              var windowAny = window;\n              if ('solana' in windowAny && typeof windowAny.solana === 'object' && ('signIn' in windowAny.solana && typeof windowAny.solana.signIn === 'function' || 'signMessage' in windowAny.solana && typeof windowAny.solana.signMessage === 'function')) {\n                resolvedWallet = windowAny.solana;\n              } else {\n                throw new Error(`@supabase/auth-js: No compatible Solana wallet interface on the window object (window.solana) detected. Make sure the user already has a wallet installed and connected for this app. Prefer passing the wallet interface object directly to signInWithWeb3({ chain: 'solana', wallet: resolvedUserWallet }) instead.`);\n              }\n            }\n            var url = new URL((_a = options === null || options === void 0 ? void 0 : options.url) !== null && _a !== void 0 ? _a : window.location.href);\n            if ('signIn' in resolvedWallet && resolvedWallet.signIn) {\n              var output = yield resolvedWallet.signIn(Object.assign(Object.assign(Object.assign({\n                issuedAt: new Date().toISOString()\n              }, options === null || options === void 0 ? void 0 : options.signInWithSolana), {\n                // non-overridable properties\n                version: '1',\n                domain: url.host,\n                uri: url.href\n              }), statement ? {\n                statement\n              } : null));\n              var outputToProcess;\n              if (Array.isArray(output) && output[0] && typeof output[0] === 'object') {\n                outputToProcess = output[0];\n              } else if (output && typeof output === 'object' && 'signedMessage' in output && 'signature' in output) {\n                outputToProcess = output;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() returned unrecognized value');\n              }\n              if ('signedMessage' in outputToProcess && 'signature' in outputToProcess && (typeof outputToProcess.signedMessage === 'string' || outputToProcess.signedMessage instanceof Uint8Array) && outputToProcess.signature instanceof Uint8Array) {\n                message = typeof outputToProcess.signedMessage === 'string' ? outputToProcess.signedMessage : new TextDecoder().decode(outputToProcess.signedMessage);\n                signature = outputToProcess.signature;\n              } else {\n                throw new Error('@supabase/auth-js: Wallet method signIn() API returned object without signedMessage and signature fields');\n              }\n            } else {\n              if (!('signMessage' in resolvedWallet) || typeof resolvedWallet.signMessage !== 'function' || !('publicKey' in resolvedWallet) || typeof resolvedWallet !== 'object' || !resolvedWallet.publicKey || !('toBase58' in resolvedWallet.publicKey) || typeof resolvedWallet.publicKey.toBase58 !== 'function') {\n                throw new Error('@supabase/auth-js: Wallet does not have a compatible signMessage() and publicKey.toBase58() API');\n              }\n              message = [`${url.host} wants you to sign in with your Solana account:`, resolvedWallet.publicKey.toBase58(), ...(statement ? ['', statement, ''] : ['']), 'Version: 1', `URI: ${url.href}`, `Issued At: ${(_c = (_b = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _b === void 0 ? void 0 : _b.issuedAt) !== null && _c !== void 0 ? _c : new Date().toISOString()}`, ...(((_d = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _d === void 0 ? void 0 : _d.notBefore) ? [`Not Before: ${options.signInWithSolana.notBefore}`] : []), ...(((_e = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _e === void 0 ? void 0 : _e.expirationTime) ? [`Expiration Time: ${options.signInWithSolana.expirationTime}`] : []), ...(((_f = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _f === void 0 ? void 0 : _f.chainId) ? [`Chain ID: ${options.signInWithSolana.chainId}`] : []), ...(((_g = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _g === void 0 ? void 0 : _g.nonce) ? [`Nonce: ${options.signInWithSolana.nonce}`] : []), ...(((_h = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _h === void 0 ? void 0 : _h.requestId) ? [`Request ID: ${options.signInWithSolana.requestId}`] : []), ...(((_k = (_j = options === null || options === void 0 ? void 0 : options.signInWithSolana) === null || _j === void 0 ? void 0 : _j.resources) === null || _k === void 0 ? void 0 : _k.length) ? ['Resources', ...options.signInWithSolana.resources.map(resource => `- ${resource}`)] : [])].join('\\n');\n              var maybeSignature = yield resolvedWallet.signMessage(new TextEncoder().encode(message), 'utf8');\n              if (!maybeSignature || !(maybeSignature instanceof Uint8Array)) {\n                throw new Error('@supabase/auth-js: Wallet signMessage() API returned an recognized value');\n              }\n              signature = maybeSignature;\n            }\n          }\n          try {\n            var _yield4 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=web3`, {\n                headers: this.headers,\n                body: Object.assign({\n                  chain: 'solana',\n                  message,\n                  signature: (0, base64url_1.bytesToBase64URL)(signature)\n                }, ((_l = credentials.options) === null || _l === void 0 ? void 0 : _l.captchaToken) ? {\n                  gotrue_meta_security: {\n                    captcha_token: (_m = credentials.options) === null || _m === void 0 ? void 0 : _m.captchaToken\n                  }\n                } : null),\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield4.data,\n              error = _yield4.error;\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign({}, data),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSolana(_x10) {\n          return _signInWithSolana.apply(this, arguments);\n        }\n        return signInWithSolana;\n      }()\n    }, {\n      key: \"_exchangeCodeForSession\",\n      value: function () {\n        var _exchangeCodeForSession3 = _asyncToGenerator(function* (authCode) {\n          var storageItem = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          var _split = (storageItem !== null && storageItem !== void 0 ? storageItem : '').split('/'),\n            _split2 = _slicedToArray(_split, 2),\n            codeVerifier = _split2[0],\n            redirectType = _split2[1];\n          try {\n            var _yield5 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                  auth_code: authCode,\n                  code_verifier: codeVerifier\n                },\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield5.data,\n              error = _yield5.error;\n            yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n            if (error) {\n              throw error;\n            }\n            if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data: Object.assign(Object.assign({}, data), {\n                redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n              }),\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _exchangeCodeForSession(_x11) {\n          return _exchangeCodeForSession3.apply(this, arguments);\n        }\n        return _exchangeCodeForSession;\n      }()\n      /**\n       * Allows signing in with an OIDC ID token. The authentication provider used\n       * should be enabled and configured.\n       */\n    }, {\n      key: \"signInWithIdToken\",\n      value: (function () {\n        var _signInWithIdToken = _asyncToGenerator(function* (credentials) {\n          try {\n            var options = credentials.options,\n              provider = credentials.provider,\n              token = credentials.token,\n              access_token = credentials.access_token,\n              nonce = credentials.nonce;\n            var res = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n              headers: this.headers,\n              body: {\n                provider,\n                id_token: token,\n                access_token,\n                nonce,\n                gotrue_meta_security: {\n                  captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                }\n              },\n              xform: fetch_1._sessionResponse\n            });\n            var data = res.data,\n              error = res.error;\n            if (error) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if (!data || !data.session || !data.user) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error: new errors_1.AuthInvalidTokenResponseError()\n              };\n            }\n            if (data.session) {\n              yield this._saveSession(data.session);\n              yield this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return {\n              data,\n              error\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithIdToken(_x12) {\n          return _signInWithIdToken.apply(this, arguments);\n        }\n        return signInWithIdToken;\n      }()\n      /**\n       * Log in a user using magiclink or a one-time password (OTP).\n       *\n       * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n       * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n       * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n       *\n       * Be aware that you may get back an error message that will not distinguish\n       * between the cases where the account does not exist or, that the account\n       * can only be accessed via social login.\n       *\n       * Do note that you will need to configure a Whatsapp sender on Twilio\n       * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n       * channel is not supported on other providers\n       * at this time.\n       * This method supports PKCE when an email is passed.\n       */\n      )\n    }, {\n      key: \"signInWithOtp\",\n      value: (function () {\n        var _signInWithOtp = _asyncToGenerator(function* (credentials) {\n          var _a, _b, _c, _d, _e;\n          try {\n            if ('email' in credentials) {\n              var email = credentials.email,\n                options = credentials.options;\n              var codeChallenge = null;\n              var codeChallengeMethod = null;\n              if (this.flowType === 'pkce') {\n                ;\n                var _yield6 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                var _yield7 = _slicedToArray(_yield6, 2);\n                codeChallenge = _yield7[0];\n                codeChallengeMethod = _yield7[1];\n              }\n              var _yield8 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                    create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    },\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield8.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _options3 = credentials.options;\n              var _yield9 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/otp`, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    data: (_c = _options3 === null || _options3 === void 0 ? void 0 : _options3.data) !== null && _c !== void 0 ? _c : {},\n                    create_user: (_d = _options3 === null || _options3 === void 0 ? void 0 : _options3.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                    gotrue_meta_security: {\n                      captcha_token: _options3 === null || _options3 === void 0 ? void 0 : _options3.captchaToken\n                    },\n                    channel: (_e = _options3 === null || _options3 === void 0 ? void 0 : _options3.channel) !== null && _e !== void 0 ? _e : 'sms'\n                  }\n                }),\n                data = _yield9.data,\n                _error = _yield9.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number.');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithOtp(_x13) {\n          return _signInWithOtp.apply(this, arguments);\n        }\n        return signInWithOtp;\n      }()\n      /**\n       * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n       */\n      )\n    }, {\n      key: \"verifyOtp\",\n      value: (function () {\n        var _verifyOtp = _asyncToGenerator(function* (params) {\n          var _a, _b;\n          try {\n            var redirectTo = undefined;\n            var captchaToken = undefined;\n            if ('options' in params) {\n              redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n              captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            var _yield0 = yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/verify`, {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                  gotrue_meta_security: {\n                    captcha_token: captchaToken\n                  }\n                }),\n                redirectTo,\n                xform: fetch_1._sessionResponse\n              }),\n              data = _yield0.data,\n              error = _yield0.error;\n            if (error) {\n              throw error;\n            }\n            if (!data) {\n              throw new Error('An error occurred on token verification.');\n            }\n            var session = data.session;\n            var user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers(params.type == 'recovery' ? 'PASSWORD_RECOVERY' : 'SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function verifyOtp(_x14) {\n          return _verifyOtp.apply(this, arguments);\n        }\n        return verifyOtp;\n      }()\n      /**\n       * Attempts a single-sign on using an enterprise Identity Provider. A\n       * successful SSO attempt will redirect the current page to the identity\n       * provider authorization page. The redirect URL is implementation and SSO\n       * protocol specific.\n       *\n       * You can use it by providing a SSO domain. Typically you can extract this\n       * domain by asking users for their email address. If this domain is\n       * registered on the Auth instance the redirect will use that organization's\n       * currently active SSO Identity Provider for the login.\n       *\n       * If you have built an organization-specific login page, you can use the\n       * organization's SSO Identity Provider UUID directly instead.\n       */\n      )\n    }, {\n      key: \"signInWithSSO\",\n      value: (function () {\n        var _signInWithSSO = _asyncToGenerator(function* (params) {\n          var _a, _b, _c;\n          try {\n            var codeChallenge = null;\n            var codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n              ;\n              var _yield1 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n              var _yield10 = _slicedToArray(_yield1, 2);\n              codeChallenge = _yield10[0];\n              codeChallengeMethod = _yield10[1];\n            }\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/sso`, {\n              body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, 'providerId' in params ? {\n                provider_id: params.providerId\n              } : null), 'domain' in params ? {\n                domain: params.domain\n              } : null), {\n                redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n              }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                gotrue_meta_security: {\n                  captcha_token: params.options.captchaToken\n                }\n              } : null), {\n                skip_http_redirect: true,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod\n              }),\n              headers: this.headers,\n              xform: fetch_1._ssoResponse\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function signInWithSSO(_x15) {\n          return _signInWithSSO.apply(this, arguments);\n        }\n        return signInWithSSO;\n      }()\n      /**\n       * Sends a reauthentication OTP to the user's email or phone number.\n       * Requires the user to be signed-in.\n       */\n      )\n    }, {\n      key: \"reauthenticate\",\n      value: (function () {\n        var _reauthenticate2 = _asyncToGenerator(function* () {\n          var _this5 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this5._reauthenticate();\n          }));\n        });\n        function reauthenticate() {\n          return _reauthenticate2.apply(this, arguments);\n        }\n        return reauthenticate;\n      }())\n    }, {\n      key: \"_reauthenticate\",\n      value: function () {\n        var _reauthenticate3 = _asyncToGenerator(function* () {\n          var _this6 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (result) {\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) throw sessionError;\n                if (!session) throw new errors_1.AuthSessionMissingError();\n                var _yield11 = yield (0, fetch_1._request)(_this6.fetch, 'GET', `${_this6.url}/reauthenticate`, {\n                    headers: _this6.headers,\n                    jwt: session.access_token\n                  }),\n                  error = _yield11.error;\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error\n                };\n              });\n              return function (_x16) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _reauthenticate() {\n          return _reauthenticate3.apply(this, arguments);\n        }\n        return _reauthenticate;\n      }()\n      /**\n       * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n       */\n    }, {\n      key: \"resend\",\n      value: (function () {\n        var _resend = _asyncToGenerator(function* (credentials) {\n          try {\n            var endpoint = `${this.url}/resend`;\n            if ('email' in credentials) {\n              var email = credentials.email,\n                type = credentials.type,\n                options = credentials.options;\n              var _yield12 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    email,\n                    type,\n                    gotrue_meta_security: {\n                      captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                  },\n                  redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                }),\n                error = _yield12.error;\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            } else if ('phone' in credentials) {\n              var phone = credentials.phone,\n                _type = credentials.type,\n                _options4 = credentials.options;\n              var _yield13 = yield (0, fetch_1._request)(this.fetch, 'POST', endpoint, {\n                  headers: this.headers,\n                  body: {\n                    phone,\n                    type: _type,\n                    gotrue_meta_security: {\n                      captcha_token: _options4 === null || _options4 === void 0 ? void 0 : _options4.captchaToken\n                    }\n                  }\n                }),\n                data = _yield13.data,\n                _error2 = _yield13.error;\n              return {\n                data: {\n                  user: null,\n                  session: null,\n                  messageId: data === null || data === void 0 ? void 0 : data.message_id\n                },\n                error: _error2\n              };\n            }\n            throw new errors_1.AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resend(_x17) {\n          return _resend.apply(this, arguments);\n        }\n        return resend;\n      }()\n      /**\n       * Returns the session, refreshing it if necessary.\n       *\n       * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n       *\n       * **IMPORTANT:** This method loads values directly from the storage attached\n       * to the client. If that storage is based on request cookies for example,\n       * the values in it may not be authentic and therefore it's strongly advised\n       * against using this method and its results in such circumstances. A warning\n       * will be emitted if this is detected. Use {@link #getUser()} instead.\n       */\n      )\n    }, {\n      key: \"getSession\",\n      value: (function () {\n        var _getSession = _asyncToGenerator(function* () {\n          var _this7 = this;\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return _this7._useSession(/*#__PURE__*/function () {\n              var _ref9 = _asyncToGenerator(function* (result) {\n                return result;\n              });\n              return function (_x18) {\n                return _ref9.apply(this, arguments);\n              };\n            }());\n          }));\n          return result;\n        });\n        function getSession() {\n          return _getSession.apply(this, arguments);\n        }\n        return getSession;\n      }()\n      /**\n       * Acquires a global lock based on the storage key.\n       */\n      )\n    }, {\n      key: \"_acquireLock\",\n      value: (function () {\n        var _acquireLock2 = _asyncToGenerator(function* (acquireTimeout, fn) {\n          var _this8 = this;\n          this._debug('#_acquireLock', 'begin', acquireTimeout);\n          try {\n            if (this.lockAcquired) {\n              var last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n              var result = _asyncToGenerator(function* () {\n                yield last;\n                return yield fn();\n              })();\n              this.pendingInLock.push(_asyncToGenerator(function* () {\n                try {\n                  yield result;\n                } catch (e) {\n                  // we just care if it finished\n                }\n              })());\n              return result;\n            }\n            return yield this.lock(`lock:${this.storageKey}`, acquireTimeout, /*#__PURE__*/_asyncToGenerator(function* () {\n              _this8._debug('#_acquireLock', 'lock acquired for storage key', _this8.storageKey);\n              try {\n                _this8.lockAcquired = true;\n                var _result = fn();\n                _this8.pendingInLock.push(_asyncToGenerator(function* () {\n                  try {\n                    yield _result;\n                  } catch (e) {\n                    // we just care if it finished\n                  }\n                })());\n                yield _result;\n                // keep draining the queue until there's nothing to wait on\n                while (_this8.pendingInLock.length) {\n                  var waitOn = [..._this8.pendingInLock];\n                  yield Promise.all(waitOn);\n                  _this8.pendingInLock.splice(0, waitOn.length);\n                }\n                return yield _result;\n              } finally {\n                _this8._debug('#_acquireLock', 'lock released for storage key', _this8.storageKey);\n                _this8.lockAcquired = false;\n              }\n            }));\n          } finally {\n            this._debug('#_acquireLock', 'end');\n          }\n        });\n        function _acquireLock(_x19, _x20) {\n          return _acquireLock2.apply(this, arguments);\n        }\n        return _acquireLock;\n      }()\n      /**\n       * Use instead of {@link #getSession} inside the library. It is\n       * semantically usually what you want, as getting a session involves some\n       * processing afterwards that requires only one client operating on the\n       * session at once across multiple tabs or processes.\n       */\n      )\n    }, {\n      key: \"_useSession\",\n      value: (function () {\n        var _useSession2 = _asyncToGenerator(function* (fn) {\n          this._debug('#_useSession', 'begin');\n          try {\n            // the use of __loadSession here is the only correct use of the function!\n            var result = yield this.__loadSession();\n            return yield fn(result);\n          } finally {\n            this._debug('#_useSession', 'end');\n          }\n        });\n        function _useSession(_x21) {\n          return _useSession2.apply(this, arguments);\n        }\n        return _useSession;\n      }()\n      /**\n       * NEVER USE DIRECTLY!\n       *\n       * Always use {@link #_useSession}.\n       */\n      )\n    }, {\n      key: \"__loadSession\",\n      value: (function () {\n        var _loadSession = _asyncToGenerator(function* () {\n          this._debug('#__loadSession()', 'begin');\n          if (!this.lockAcquired) {\n            this._debug('#__loadSession()', 'used outside of an acquired lock!', new Error().stack);\n          }\n          try {\n            var currentSession = null;\n            var maybeSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            this._debug('#getSession()', 'session from storage', maybeSession);\n            if (maybeSession !== null) {\n              if (this._isValidSession(maybeSession)) {\n                currentSession = maybeSession;\n              } else {\n                this._debug('#getSession()', 'session from storage is not valid');\n                yield this._removeSession();\n              }\n            }\n            if (!currentSession) {\n              return {\n                data: {\n                  session: null\n                },\n                error: null\n              };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            var hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS : false;\n            this._debug('#__loadSession()', `session has${hasExpired ? '' : ' not'} expired`, 'expires_at', currentSession.expires_at);\n            if (!hasExpired) {\n              if (this.userStorage) {\n                var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n                if (maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) {\n                  currentSession.user = maybeUser.user;\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n              if (this.storage.isServer && currentSession.user) {\n                var suppressWarning = this.suppressGetSessionWarning;\n                var proxySession = new Proxy(currentSession, {\n                  get: (target, prop, receiver) => {\n                    if (!suppressWarning && prop === 'user') {\n                      // only show warning when the user object is being accessed from the server\n                      console.warn('Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.');\n                      suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                      this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                    }\n                    return Reflect.get(target, prop, receiver);\n                  }\n                });\n                currentSession = proxySession;\n              }\n              return {\n                data: {\n                  session: currentSession\n                },\n                error: null\n              };\n            }\n            var _yield$this$_callRefr = yield this._callRefreshToken(currentSession.refresh_token),\n              session = _yield$this$_callRefr.session,\n              error = _yield$this$_callRefr.error;\n            if (error) {\n              return {\n                data: {\n                  session: null\n                },\n                error\n              };\n            }\n            return {\n              data: {\n                session\n              },\n              error: null\n            };\n          } finally {\n            this._debug('#__loadSession()', 'end');\n          }\n        });\n        function __loadSession() {\n          return _loadSession.apply(this, arguments);\n        }\n        return __loadSession;\n      }()\n      /**\n       * Gets the current user details if there is an existing session. This method\n       * performs a network request to the Supabase Auth server, so the returned\n       * value is authentic and can be used to base authorization rules on.\n       *\n       * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n       */\n      )\n    }, {\n      key: \"getUser\",\n      value: (function () {\n        var _getUser2 = _asyncToGenerator(function* (jwt) {\n          var _this9 = this;\n          if (jwt) {\n            return yield this._getUser(jwt);\n          }\n          yield this.initializePromise;\n          var result = yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this9._getUser();\n          }));\n          return result;\n        });\n        function getUser(_x22) {\n          return _getUser2.apply(this, arguments);\n        }\n        return getUser;\n      }())\n    }, {\n      key: \"_getUser\",\n      value: function () {\n        var _getUser3 = _asyncToGenerator(function* (jwt) {\n          var _this0 = this;\n          try {\n            if (jwt) {\n              return yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/user`, {\n                headers: this.headers,\n                jwt: jwt,\n                xform: fetch_1._userResponse\n              });\n            }\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(function* (result) {\n                var _a, _b, _c;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !_this0.hasCustomAuthorizationHeader) {\n                  return {\n                    data: {\n                      user: null\n                    },\n                    error: new errors_1.AuthSessionMissingError()\n                  };\n                }\n                return yield (0, fetch_1._request)(_this0.fetch, 'GET', `${_this0.url}/user`, {\n                  headers: _this0.headers,\n                  jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                  xform: fetch_1._userResponse\n                });\n              });\n              return function (_x24) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              if ((0, errors_1.isAuthSessionMissingError)(error)) {\n                // JWT contains a `session_id` which does not correspond to an active\n                // session in the database, indicating the user is signed out.\n                yield this._removeSession();\n                yield (0, helpers_1.removeItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n              }\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getUser(_x23) {\n          return _getUser3.apply(this, arguments);\n        }\n        return _getUser;\n      }()\n      /**\n       * Updates user data for a logged in user.\n       */\n    }, {\n      key: \"updateUser\",\n      value: (function () {\n        var _updateUser2 = _asyncToGenerator(function* (attributes) {\n          var _this1 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this1._updateUser(attributes, options);\n          }));\n        });\n        function updateUser(_x25) {\n          return _updateUser2.apply(this, arguments);\n        }\n        return updateUser;\n      }())\n    }, {\n      key: \"_updateUser\",\n      value: function () {\n        var _updateUser3 = _asyncToGenerator(function* (attributes) {\n          var _this10 = this;\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref15 = _asyncToGenerator(function* (result) {\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  throw sessionError;\n                }\n                if (!sessionData.session) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var session = sessionData.session;\n                var codeChallenge = null;\n                var codeChallengeMethod = null;\n                if (_this10.flowType === 'pkce' && attributes.email != null) {\n                  ;\n                  var _yield14 = yield (0, helpers_1.getCodeChallengeAndMethod)(_this10.storage, _this10.storageKey);\n                  var _yield15 = _slicedToArray(_yield14, 2);\n                  codeChallenge = _yield15[0];\n                  codeChallengeMethod = _yield15[1];\n                }\n                var _yield16 = yield (0, fetch_1._request)(_this10.fetch, 'PUT', `${_this10.url}/user`, {\n                    headers: _this10.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                      code_challenge: codeChallenge,\n                      code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: fetch_1._userResponse\n                  }),\n                  data = _yield16.data,\n                  userError = _yield16.error;\n                if (userError) throw userError;\n                session.user = data.user;\n                yield _this10._saveSession(session);\n                yield _this10._notifyAllSubscribers('USER_UPDATED', session);\n                return {\n                  data: {\n                    user: session.user\n                  },\n                  error: null\n                };\n              });\n              return function (_x27) {\n                return _ref15.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _updateUser(_x26) {\n          return _updateUser3.apply(this, arguments);\n        }\n        return _updateUser;\n      }()\n      /**\n       * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n       * If the refresh token or access token in the current session is invalid, an error will be thrown.\n       * @param currentSession The current session that minimally contains an access token and refresh token.\n       */\n    }, {\n      key: \"setSession\",\n      value: (function () {\n        var _setSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this11 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this11._setSession(currentSession);\n          }));\n        });\n        function setSession(_x28) {\n          return _setSession2.apply(this, arguments);\n        }\n        return setSession;\n      }())\n    }, {\n      key: \"_setSession\",\n      value: function () {\n        var _setSession3 = _asyncToGenerator(function* (currentSession) {\n          try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n              throw new errors_1.AuthSessionMissingError();\n            }\n            var timeNow = Date.now() / 1000;\n            var expiresAt = timeNow;\n            var hasExpired = true;\n            var session = null;\n            var _ref17 = (0, helpers_1.decodeJWT)(currentSession.access_token),\n              payload = _ref17.payload;\n            if (payload.exp) {\n              expiresAt = payload.exp;\n              hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n              var _yield$this$_callRefr2 = yield this._callRefreshToken(currentSession.refresh_token),\n                refreshedSession = _yield$this$_callRefr2.session,\n                error = _yield$this$_callRefr2.error;\n              if (error) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: error\n                };\n              }\n              if (!refreshedSession) {\n                return {\n                  data: {\n                    user: null,\n                    session: null\n                  },\n                  error: null\n                };\n              }\n              session = refreshedSession;\n            } else {\n              var _yield$this$_getUser = yield this._getUser(currentSession.access_token),\n                data = _yield$this$_getUser.data,\n                _error3 = _yield$this$_getUser.error;\n              if (_error3) {\n                throw _error3;\n              }\n              session = {\n                access_token: currentSession.access_token,\n                refresh_token: currentSession.refresh_token,\n                user: data.user,\n                token_type: 'bearer',\n                expires_in: expiresAt - timeNow,\n                expires_at: expiresAt\n              };\n              yield this._saveSession(session);\n              yield this._notifyAllSubscribers('SIGNED_IN', session);\n            }\n            return {\n              data: {\n                user: session.user,\n                session\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _setSession(_x29) {\n          return _setSession3.apply(this, arguments);\n        }\n        return _setSession;\n      }()\n      /**\n       * Returns a new session, regardless of expiry status.\n       * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n       * If the current session's refresh token is invalid, an error will be thrown.\n       * @param currentSession The current session. If passed in, it must contain a refresh token.\n       */\n    }, {\n      key: \"refreshSession\",\n      value: (function () {\n        var _refreshSession2 = _asyncToGenerator(function* (currentSession) {\n          var _this12 = this;\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this12._refreshSession(currentSession);\n          }));\n        });\n        function refreshSession(_x30) {\n          return _refreshSession2.apply(this, arguments);\n        }\n        return refreshSession;\n      }())\n    }, {\n      key: \"_refreshSession\",\n      value: function () {\n        var _refreshSession3 = _asyncToGenerator(function* (currentSession) {\n          var _this13 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref19 = _asyncToGenerator(function* (result) {\n                var _a;\n                if (!currentSession) {\n                  var data = result.data,\n                    _error4 = result.error;\n                  if (_error4) {\n                    throw _error4;\n                  }\n                  currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                  throw new errors_1.AuthSessionMissingError();\n                }\n                var _yield$_this13$_callR = yield _this13._callRefreshToken(currentSession.refresh_token),\n                  session = _yield$_this13$_callR.session,\n                  error = _yield$_this13$_callR.error;\n                if (error) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: error\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      user: null,\n                      session: null\n                    },\n                    error: null\n                  };\n                }\n                return {\n                  data: {\n                    user: session.user,\n                    session\n                  },\n                  error: null\n                };\n              });\n              return function (_x32) {\n                return _ref19.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  user: null,\n                  session: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _refreshSession(_x31) {\n          return _refreshSession3.apply(this, arguments);\n        }\n        return _refreshSession;\n      }()\n      /**\n       * Gets the session data from a URL string\n       */\n    }, {\n      key: \"_getSessionFromURL\",\n      value: (function () {\n        var _getSessionFromURL2 = _asyncToGenerator(function* (params, callbackUrlType) {\n          try {\n            if (!(0, helpers_1.isBrowser)()) throw new errors_1.AuthImplicitGrantRedirectError('No browser detected.');\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n              // The error class returned implies that the redirect is from an implicit grant flow\n              // but it could also be from a redirect error from a PKCE flow.\n              throw new errors_1.AuthImplicitGrantRedirectError(params.error_description || 'Error in URL with unspecified error_description', {\n                error: params.error || 'unspecified_error',\n                code: params.error_code || 'unspecified_code'\n              });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch (callbackUrlType) {\n              case 'implicit':\n                if (this.flowType === 'pkce') {\n                  throw new errors_1.AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                break;\n              case 'pkce':\n                if (this.flowType === 'implicit') {\n                  throw new errors_1.AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                break;\n              default:\n              // there's no mismatch so we continue\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === 'pkce') {\n              this._debug('#_initialize()', 'begin', 'is PKCE flow', true);\n              if (!params.code) throw new errors_1.AuthPKCEGrantCodeExchangeError('No code detected.');\n              var _yield$this$_exchange = yield this._exchangeCodeForSession(params.code),\n                _data = _yield$this$_exchange.data,\n                _error5 = _yield$this$_exchange.error;\n              if (_error5) throw _error5;\n              var url = new URL(window.location.href);\n              url.searchParams.delete('code');\n              window.history.replaceState(window.history.state, '', url.toString());\n              return {\n                data: {\n                  session: _data.session,\n                  redirectType: null\n                },\n                error: null\n              };\n            }\n            var provider_token = params.provider_token,\n              provider_refresh_token = params.provider_refresh_token,\n              access_token = params.access_token,\n              refresh_token = params.refresh_token,\n              expires_in = params.expires_in,\n              expires_at = params.expires_at,\n              token_type = params.token_type;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n              throw new errors_1.AuthImplicitGrantRedirectError('No session defined in URL');\n            }\n            var timeNow = Math.round(Date.now() / 1000);\n            var expiresIn = parseInt(expires_in);\n            var expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n              expiresAt = parseInt(expires_at);\n            }\n            var actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= constants_1.AUTO_REFRESH_TICK_DURATION_MS) {\n              console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);\n            }\n            var issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale', issuedAt, expiresAt, timeNow);\n            } else if (timeNow - issuedAt < 0) {\n              console.warn('@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew', issuedAt, expiresAt, timeNow);\n            }\n            var _yield$this$_getUser2 = yield this._getUser(access_token),\n              data = _yield$this$_getUser2.data,\n              error = _yield$this$_getUser2.error;\n            if (error) throw error;\n            var session = {\n              provider_token,\n              provider_refresh_token,\n              access_token,\n              expires_in: expiresIn,\n              expires_at: expiresAt,\n              refresh_token,\n              token_type,\n              user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = '';\n            this._debug('#_getSessionFromURL()', 'clearing window.location.hash');\n            return {\n              data: {\n                session,\n                redirectType: params.type\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  redirectType: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _getSessionFromURL(_x33, _x34) {\n          return _getSessionFromURL2.apply(this, arguments);\n        }\n        return _getSessionFromURL;\n      }()\n      /**\n       * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n       */\n      )\n    }, {\n      key: \"_isImplicitGrantCallback\",\n      value: function _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n      }\n      /**\n       * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n       */\n    }, {\n      key: \"_isPKCECallback\",\n      value: (function () {\n        var _isPKCECallback2 = _asyncToGenerator(function* (params) {\n          var currentStorageContent = yield (0, helpers_1.getItemAsync)(this.storage, `${this.storageKey}-code-verifier`);\n          return !!(params.code && currentStorageContent);\n        });\n        function _isPKCECallback(_x35) {\n          return _isPKCECallback2.apply(this, arguments);\n        }\n        return _isPKCECallback;\n      }()\n      /**\n       * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n       *\n       * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n       * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n       *\n       * If using `others` scope, no `SIGNED_OUT` event is fired!\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut2 = _asyncToGenerator(function* () {\n          var _this14 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n            scope: 'global'\n          };\n          yield this.initializePromise;\n          return yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this14._signOut(options);\n          }));\n        });\n        function signOut() {\n          return _signOut2.apply(this, arguments);\n        }\n        return signOut;\n      }())\n    }, {\n      key: \"_signOut\",\n      value: function () {\n        var _signOut3 = _asyncToGenerator(function* () {\n          var _this15 = this;\n          var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n              scope: 'global'\n            },\n            scope = _ref21.scope;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref22 = _asyncToGenerator(function* (result) {\n              var _a;\n              var data = result.data,\n                sessionError = result.error;\n              if (sessionError) {\n                return {\n                  error: sessionError\n                };\n              }\n              var accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n              if (accessToken) {\n                var _yield$_this15$admin$ = yield _this15.admin.signOut(accessToken, scope),\n                  error = _yield$_this15$admin$.error;\n                if (error) {\n                  // ignore 404s since user might not exist anymore\n                  // ignore 401s since an invalid or expired JWT should sign out the current session\n                  if (!((0, errors_1.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                    return {\n                      error\n                    };\n                  }\n                }\n              }\n              if (scope !== 'others') {\n                yield _this15._removeSession();\n                yield (0, helpers_1.removeItemAsync)(_this15.storage, `${_this15.storageKey}-code-verifier`);\n              }\n              return {\n                error: null\n              };\n            });\n            return function (_x36) {\n              return _ref22.apply(this, arguments);\n            };\n          }());\n        });\n        function _signOut() {\n          return _signOut3.apply(this, arguments);\n        }\n        return _signOut;\n      }()\n      /**\n       * Receive a notification every time an auth event happens.\n       * @param callback A callback function to be invoked when an auth event happens.\n       */\n    }, {\n      key: \"onAuthStateChange\",\n      value: function onAuthStateChange(callback) {\n        var _this16 = this;\n        var id = (0, helpers_1.uuid)();\n        var subscription = {\n          id,\n          callback,\n          unsubscribe: () => {\n            this._debug('#unsubscribe()', 'state change callback with id removed', id);\n            this.stateChangeEmitters.delete(id);\n          }\n        };\n        this._debug('#onAuthStateChange()', 'registered callback with id', id);\n        this.stateChangeEmitters.set(id, subscription);\n        _asyncToGenerator(function* () {\n          yield _this16.initializePromise;\n          yield _this16._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            _this16._emitInitialSession(id);\n          }));\n        })();\n        return {\n          data: {\n            subscription\n          }\n        };\n      }\n    }, {\n      key: \"_emitInitialSession\",\n      value: function () {\n        var _emitInitialSession2 = _asyncToGenerator(function* (id) {\n          var _this17 = this;\n          return yield this._useSession(/*#__PURE__*/function () {\n            var _ref25 = _asyncToGenerator(function* (result) {\n              var _a, _b;\n              try {\n                var session = result.data.session,\n                  error = result.error;\n                if (error) throw error;\n                yield (_a = _this17.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'session', session);\n              } catch (err) {\n                yield (_b = _this17.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                _this17._debug('INITIAL_SESSION', 'callback id', id, 'error', err);\n                console.error(err);\n              }\n            });\n            return function (_x38) {\n              return _ref25.apply(this, arguments);\n            };\n          }());\n        });\n        function _emitInitialSession(_x37) {\n          return _emitInitialSession2.apply(this, arguments);\n        }\n        return _emitInitialSession;\n      }()\n      /**\n       * Sends a password reset request to an email address. This method supports the PKCE flow.\n       *\n       * @param email The email address of the user.\n       * @param options.redirectTo The URL to send the user to after they click the password reset link.\n       * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n       */\n    }, {\n      key: \"resetPasswordForEmail\",\n      value: (function () {\n        var _resetPasswordForEmail = _asyncToGenerator(function* (email) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          var codeChallenge = null;\n          var codeChallengeMethod = null;\n          if (this.flowType === 'pkce') {\n            ;\n            var _yield17 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n            var _yield18 = _slicedToArray(_yield17, 2);\n            codeChallenge = _yield18[0];\n            codeChallengeMethod = _yield18[1];\n          }\n          try {\n            return yield (0, fetch_1._request)(this.fetch, 'POST', `${this.url}/recover`, {\n              body: {\n                email,\n                code_challenge: codeChallenge,\n                code_challenge_method: codeChallengeMethod,\n                gotrue_meta_security: {\n                  captcha_token: options.captchaToken\n                }\n              },\n              headers: this.headers,\n              redirectTo: options.redirectTo\n            });\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function resetPasswordForEmail(_x39) {\n          return _resetPasswordForEmail.apply(this, arguments);\n        }\n        return resetPasswordForEmail;\n      }()\n      /**\n       * Gets all the identities linked to a user.\n       */\n      )\n    }, {\n      key: \"getUserIdentities\",\n      value: (function () {\n        var _getUserIdentities = _asyncToGenerator(function* () {\n          var _a;\n          try {\n            var _yield$this$getUser = yield this.getUser(),\n              data = _yield$this$getUser.data,\n              error = _yield$this$getUser.error;\n            if (error) throw error;\n            return {\n              data: {\n                identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getUserIdentities() {\n          return _getUserIdentities.apply(this, arguments);\n        }\n        return getUserIdentities;\n      }()\n      /**\n       * Links an oauth identity to an existing user.\n       * This method supports the PKCE flow.\n       */\n      )\n    }, {\n      key: \"linkIdentity\",\n      value: (function () {\n        var _linkIdentity = _asyncToGenerator(function* (credentials) {\n          var _this18 = this;\n          var _a;\n          try {\n            var _yield$this$_useSessi = yield this._useSession(/*#__PURE__*/function () {\n                var _ref26 = _asyncToGenerator(function* (result) {\n                  var _a, _b, _c, _d, _e;\n                  var data = result.data,\n                    error = result.error;\n                  if (error) throw error;\n                  var url = yield _this18._getUrlForProvider(`${_this18.url}/user/identities/authorize`, credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true\n                  });\n                  return yield (0, fetch_1._request)(_this18.fetch, 'GET', url, {\n                    headers: _this18.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                  });\n                });\n                return function (_x41) {\n                  return _ref26.apply(this, arguments);\n                };\n              }()),\n              data = _yield$this$_useSessi.data,\n              error = _yield$this$_useSessi.error;\n            if (error) throw error;\n            if ((0, helpers_1.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n              window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return {\n              data: {\n                provider: credentials.provider,\n                url: data === null || data === void 0 ? void 0 : data.url\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  provider: credentials.provider,\n                  url: null\n                },\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function linkIdentity(_x40) {\n          return _linkIdentity.apply(this, arguments);\n        }\n        return linkIdentity;\n      }()\n      /**\n       * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n       */\n      )\n    }, {\n      key: \"unlinkIdentity\",\n      value: (function () {\n        var _unlinkIdentity = _asyncToGenerator(function* (identity) {\n          var _this19 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref27 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var data = result.data,\n                  error = result.error;\n                if (error) {\n                  throw error;\n                }\n                return yield (0, fetch_1._request)(_this19.fetch, 'DELETE', `${_this19.url}/user/identities/${identity.identity_id}`, {\n                  headers: _this19.headers,\n                  jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                });\n              });\n              return function (_x43) {\n                return _ref27.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function unlinkIdentity(_x42) {\n          return _unlinkIdentity.apply(this, arguments);\n        }\n        return unlinkIdentity;\n      }()\n      /**\n       * Generates a new JWT.\n       * @param refreshToken A valid refresh token that was returned on login.\n       */\n      )\n    }, {\n      key: \"_refreshAccessToken\",\n      value: (function () {\n        var _refreshAccessToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _this20 = this;\n          var debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            var startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return yield (0, helpers_1.retryable)(/*#__PURE__*/function () {\n              var _ref28 = _asyncToGenerator(function* (attempt) {\n                if (attempt > 0) {\n                  yield (0, helpers_1.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                _this20._debug(debugName, 'refreshing attempt', attempt);\n                return yield (0, fetch_1._request)(_this20.fetch, 'POST', `${_this20.url}/token?grant_type=refresh_token`, {\n                  body: {\n                    refresh_token: refreshToken\n                  },\n                  headers: _this20.headers,\n                  xform: fetch_1._sessionResponse\n                });\n              });\n              return function (_x45) {\n                return _ref28.apply(this, arguments);\n              };\n            }(), (attempt, error) => {\n              var nextBackOffInterval = 200 * Math.pow(2, attempt);\n              return error && (0, errors_1.isAuthRetryableFetchError)(error) &&\n              // retryable only if the request can be sent before the backoff overflows the tick duration\n              Date.now() + nextBackOffInterval - startedAt < constants_1.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: {\n                  session: null,\n                  user: null\n                },\n                error\n              };\n            }\n            throw error;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _refreshAccessToken(_x44) {\n          return _refreshAccessToken2.apply(this, arguments);\n        }\n        return _refreshAccessToken;\n      }())\n    }, {\n      key: \"_isValidSession\",\n      value: function _isValidSession(maybeSession) {\n        var isValidSession = typeof maybeSession === 'object' && maybeSession !== null && 'access_token' in maybeSession && 'refresh_token' in maybeSession && 'expires_at' in maybeSession;\n        return isValidSession;\n      }\n    }, {\n      key: \"_handleProviderSignIn\",\n      value: function () {\n        var _handleProviderSignIn2 = _asyncToGenerator(function* (provider, options) {\n          var url = yield this._getUrlForProvider(`${this.url}/authorize`, provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n          });\n          this._debug('#_handleProviderSignIn()', 'provider', provider, 'options', options, 'url', url);\n          // try to open on the browser\n          if ((0, helpers_1.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n          }\n          return {\n            data: {\n              provider,\n              url\n            },\n            error: null\n          };\n        });\n        function _handleProviderSignIn(_x46, _x47) {\n          return _handleProviderSignIn2.apply(this, arguments);\n        }\n        return _handleProviderSignIn;\n      }()\n      /**\n       * Recovers the session from LocalStorage and refreshes the token\n       * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n       */\n    }, {\n      key: \"_recoverAndRefresh\",\n      value: (function () {\n        var _recoverAndRefresh2 = _asyncToGenerator(function* () {\n          var _a, _b;\n          var debugName = '#_recoverAndRefresh()';\n          this._debug(debugName, 'begin');\n          try {\n            var currentSession = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey);\n            if (currentSession && this.userStorage) {\n              var maybeUser = yield (0, helpers_1.getItemAsync)(this.userStorage, this.storageKey + '-user');\n              if (!this.storage.isServer && Object.is(this.storage, this.userStorage) && !maybeUser) {\n                // storage and userStorage are the same storage medium, for example\n                // window.localStorage if userStorage does not have the user from\n                // storage stored, store it first thereby migrating the user object\n                // from storage -> userStorage\n                maybeUser = {\n                  user: currentSession.user\n                };\n                yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', maybeUser);\n              }\n              currentSession.user = (_a = maybeUser === null || maybeUser === void 0 ? void 0 : maybeUser.user) !== null && _a !== void 0 ? _a : (0, helpers_1.userNotAvailableProxy)();\n            } else if (currentSession && !currentSession.user) {\n              // user storage is not set, let's check if it was previously enabled so\n              // we bring back the storage as it should be\n              if (!currentSession.user) {\n                // test if userStorage was previously enabled and the storage medium was the same, to move the user back under the same key\n                var separateUser = yield (0, helpers_1.getItemAsync)(this.storage, this.storageKey + '-user');\n                if (separateUser && (separateUser === null || separateUser === void 0 ? void 0 : separateUser.user)) {\n                  currentSession.user = separateUser.user;\n                  yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n                  yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, currentSession);\n                } else {\n                  currentSession.user = (0, helpers_1.userNotAvailableProxy)();\n                }\n              }\n            }\n            this._debug(debugName, 'session from storage', currentSession);\n            if (!this._isValidSession(currentSession)) {\n              this._debug(debugName, 'session is not valid');\n              if (currentSession !== null) {\n                yield this._removeSession();\n              }\n              return;\n            }\n            var expiresWithMargin = ((_b = currentSession.expires_at) !== null && _b !== void 0 ? _b : Infinity) * 1000 - Date.now() < constants_1.EXPIRY_MARGIN_MS;\n            this._debug(debugName, `session has${expiresWithMargin ? '' : ' not'} expired with margin of ${constants_1.EXPIRY_MARGIN_MS}s`);\n            if (expiresWithMargin) {\n              if (this.autoRefreshToken && currentSession.refresh_token) {\n                var _yield$this$_callRefr3 = yield this._callRefreshToken(currentSession.refresh_token),\n                  error = _yield$this$_callRefr3.error;\n                if (error) {\n                  console.error(error);\n                  if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                    this._debug(debugName, 'refresh failed with a non-retryable error, removing the session', error);\n                    yield this._removeSession();\n                  }\n                }\n              }\n            } else if (currentSession.user && currentSession.user.__isUserNotAvailableProxy === true) {\n              // If we have a proxy user, try to get the real user data\n              try {\n                var _yield$this$_getUser3 = yield this._getUser(currentSession.access_token),\n                  data = _yield$this$_getUser3.data,\n                  userError = _yield$this$_getUser3.error;\n                if (!userError && (data === null || data === void 0 ? void 0 : data.user)) {\n                  currentSession.user = data.user;\n                  yield this._saveSession(currentSession);\n                  yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                } else {\n                  this._debug(debugName, 'could not get user data, skipping SIGNED_IN notification');\n                }\n              } catch (getUserError) {\n                console.error('Error getting user data:', getUserError);\n                this._debug(debugName, 'error getting user data, skipping SIGNED_IN notification', getUserError);\n              }\n            } else {\n              // no need to persist currentSession again, as we just loaded it from\n              // local storage; persisting it again may overwrite a value saved by\n              // another client with access to the same local storage\n              yield this._notifyAllSubscribers('SIGNED_IN', currentSession);\n            }\n          } catch (err) {\n            this._debug(debugName, 'error', err);\n            console.error(err);\n            return;\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _recoverAndRefresh() {\n          return _recoverAndRefresh2.apply(this, arguments);\n        }\n        return _recoverAndRefresh;\n      }())\n    }, {\n      key: \"_callRefreshToken\",\n      value: function () {\n        var _callRefreshToken2 = _asyncToGenerator(function* (refreshToken) {\n          var _a, _b;\n          if (!refreshToken) {\n            throw new errors_1.AuthSessionMissingError();\n          }\n          // refreshing is already in progress\n          if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n          }\n          var debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;\n          this._debug(debugName, 'begin');\n          try {\n            this.refreshingDeferred = new helpers_1.Deferred();\n            var _yield$this$_refreshA = yield this._refreshAccessToken(refreshToken),\n              data = _yield$this$_refreshA.data,\n              error = _yield$this$_refreshA.error;\n            if (error) throw error;\n            if (!data.session) throw new errors_1.AuthSessionMissingError();\n            yield this._saveSession(data.session);\n            yield this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n            var result = {\n              session: data.session,\n              error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n          } catch (error) {\n            this._debug(debugName, 'error', error);\n            if ((0, errors_1.isAuthError)(error)) {\n              var _result2 = {\n                session: null,\n                error\n              };\n              if (!(0, errors_1.isAuthRetryableFetchError)(error)) {\n                yield this._removeSession();\n              }\n              (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(_result2);\n              return _result2;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n          } finally {\n            this.refreshingDeferred = null;\n            this._debug(debugName, 'end');\n          }\n        });\n        function _callRefreshToken(_x48) {\n          return _callRefreshToken2.apply(this, arguments);\n        }\n        return _callRefreshToken;\n      }()\n    }, {\n      key: \"_notifyAllSubscribers\",\n      value: function () {\n        var _notifyAllSubscribers2 = _asyncToGenerator(function* (event, session) {\n          var broadcast = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n          var debugName = `#_notifyAllSubscribers(${event})`;\n          this._debug(debugName, 'begin', session, `broadcast = ${broadcast}`);\n          try {\n            if (this.broadcastChannel && broadcast) {\n              this.broadcastChannel.postMessage({\n                event,\n                session\n              });\n            }\n            var errors = [];\n            var promises = Array.from(this.stateChangeEmitters.values()).map(/*#__PURE__*/function () {\n              var _ref29 = _asyncToGenerator(function* (x) {\n                try {\n                  yield x.callback(event, session);\n                } catch (e) {\n                  errors.push(e);\n                }\n              });\n              return function (_x51) {\n                return _ref29.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n            if (errors.length > 0) {\n              for (var i = 0; i < errors.length; i += 1) {\n                console.error(errors[i]);\n              }\n              throw errors[0];\n            }\n          } finally {\n            this._debug(debugName, 'end');\n          }\n        });\n        function _notifyAllSubscribers(_x49, _x50) {\n          return _notifyAllSubscribers2.apply(this, arguments);\n        }\n        return _notifyAllSubscribers;\n      }()\n      /**\n       * set currentSession and currentUser\n       * process to _startAutoRefreshToken if possible\n       */\n    }, {\n      key: \"_saveSession\",\n      value: (function () {\n        var _saveSession2 = _asyncToGenerator(function* (session) {\n          this._debug('#_saveSession()', session);\n          // _saveSession is always called whenever a new session has been acquired\n          // so we can safely suppress the warning returned by future getSession calls\n          this.suppressGetSessionWarning = true;\n          // Create a shallow copy to work with, to avoid mutating the original session object if it's used elsewhere\n          var sessionToProcess = Object.assign({}, session);\n          var userIsProxy = sessionToProcess.user && sessionToProcess.user.__isUserNotAvailableProxy === true;\n          if (this.userStorage) {\n            if (!userIsProxy && sessionToProcess.user) {\n              // If it's a real user object, save it to userStorage.\n              yield (0, helpers_1.setItemAsync)(this.userStorage, this.storageKey + '-user', {\n                user: sessionToProcess.user\n              });\n            } else if (userIsProxy) {\n              // If it's the proxy, it means user was not found in userStorage.\n              // We should ensure no stale user data for this key exists in userStorage if we were to save null,\n              // or simply not save the proxy. For now, we don't save the proxy here.\n              // If there's a need to clear userStorage if user becomes proxy, that logic would go here.\n            }\n            // Prepare the main session data for primary storage: remove the user property before cloning\n            // This is important because the original session.user might be the proxy\n            var mainSessionData = Object.assign({}, sessionToProcess);\n            delete mainSessionData.user; // Remove user (real or proxy) before cloning for main storage\n            var clonedMainSessionData = (0, helpers_1.deepClone)(mainSessionData);\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedMainSessionData);\n          } else {\n            // No userStorage is configured.\n            // In this case, session.user should ideally not be a proxy.\n            // If it were, structuredClone would fail. This implies an issue elsewhere if user is a proxy here\n            var clonedSession = (0, helpers_1.deepClone)(sessionToProcess); // sessionToProcess still has its original user property\n            yield (0, helpers_1.setItemAsync)(this.storage, this.storageKey, clonedSession);\n          }\n        });\n        function _saveSession(_x52) {\n          return _saveSession2.apply(this, arguments);\n        }\n        return _saveSession;\n      }())\n    }, {\n      key: \"_removeSession\",\n      value: function () {\n        var _removeSession2 = _asyncToGenerator(function* () {\n          this._debug('#_removeSession()');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey);\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-code-verifier');\n          yield (0, helpers_1.removeItemAsync)(this.storage, this.storageKey + '-user');\n          if (this.userStorage) {\n            yield (0, helpers_1.removeItemAsync)(this.userStorage, this.storageKey + '-user');\n          }\n          yield this._notifyAllSubscribers('SIGNED_OUT', null);\n        });\n        function _removeSession() {\n          return _removeSession2.apply(this, arguments);\n        }\n        return _removeSession;\n      }()\n      /**\n       * Removes any registered visibilitychange callback.\n       *\n       * {@see #startAutoRefresh}\n       * {@see #stopAutoRefresh}\n       */\n    }, {\n      key: \"_removeVisibilityChangedCallback\",\n      value: function _removeVisibilityChangedCallback() {\n        this._debug('#_removeVisibilityChangedCallback()');\n        var callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n          if (callback && (0, helpers_1.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n            window.removeEventListener('visibilitychange', callback);\n          }\n        } catch (e) {\n          console.error('removing visibilitychange callback failed', e);\n        }\n      }\n      /**\n       * This is the private implementation of {@link #startAutoRefresh}. Use this\n       * within the library.\n       */\n    }, {\n      key: \"_startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh2 = _asyncToGenerator(function* () {\n          var _this21 = this;\n          yield this._stopAutoRefresh();\n          this._debug('#_startAutoRefresh()');\n          var ticker = setInterval(() => this._autoRefreshTokenTick(), constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n          this.autoRefreshTicker = ticker;\n          if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n            // @ts-expect-error TS has no context of Deno\n          } else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n          }\n          // run the tick immediately, but in the next pass of the event loop so that\n          // #_initialize can be allowed to complete without recursively waiting on\n          // itself\n          setTimeout(/*#__PURE__*/_asyncToGenerator(function* () {\n            yield _this21.initializePromise;\n            yield _this21._autoRefreshTokenTick();\n          }), 0);\n        });\n        function _startAutoRefresh() {\n          return _startAutoRefresh2.apply(this, arguments);\n        }\n        return _startAutoRefresh;\n      }()\n      /**\n       * This is the private implementation of {@link #stopAutoRefresh}. Use this\n       * within the library.\n       */\n      )\n    }, {\n      key: \"_stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh2 = _asyncToGenerator(function* () {\n          this._debug('#_stopAutoRefresh()');\n          var ticker = this.autoRefreshTicker;\n          this.autoRefreshTicker = null;\n          if (ticker) {\n            clearInterval(ticker);\n          }\n        });\n        function _stopAutoRefresh() {\n          return _stopAutoRefresh2.apply(this, arguments);\n        }\n        return _stopAutoRefresh;\n      }()\n      /**\n       * Starts an auto-refresh process in the background. The session is checked\n       * every few seconds. Close to the time of expiration a process is started to\n       * refresh the session. If refreshing fails it will be retried for as long as\n       * necessary.\n       *\n       * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n       * to call this function, it will be called for you.\n       *\n       * On browsers the refresh process works only when the tab/window is in the\n       * foreground to conserve resources as well as prevent race conditions and\n       * flooding auth with requests. If you call this method any managed\n       * visibility change callback will be removed and you must manage visibility\n       * changes on your own.\n       *\n       * On non-browser platforms the refresh process works *continuously* in the\n       * background, which may not be desirable. You should hook into your\n       * platform's foreground indication mechanism and call these methods\n       * appropriately to conserve resources.\n       *\n       * {@see #stopAutoRefresh}\n       */\n      )\n    }, {\n      key: \"startAutoRefresh\",\n      value: (function () {\n        var _startAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._startAutoRefresh();\n        });\n        function startAutoRefresh() {\n          return _startAutoRefresh3.apply(this, arguments);\n        }\n        return startAutoRefresh;\n      }()\n      /**\n       * Stops an active auto refresh process running in the background (if any).\n       *\n       * If you call this method any managed visibility change callback will be\n       * removed and you must manage visibility changes on your own.\n       *\n       * See {@link #startAutoRefresh} for more details.\n       */\n      )\n    }, {\n      key: \"stopAutoRefresh\",\n      value: (function () {\n        var _stopAutoRefresh3 = _asyncToGenerator(function* () {\n          this._removeVisibilityChangedCallback();\n          yield this._stopAutoRefresh();\n        });\n        function stopAutoRefresh() {\n          return _stopAutoRefresh3.apply(this, arguments);\n        }\n        return stopAutoRefresh;\n      }()\n      /**\n       * Runs the auto refresh token tick.\n       */\n      )\n    }, {\n      key: \"_autoRefreshTokenTick\",\n      value: (function () {\n        var _autoRefreshTokenTick2 = _asyncToGenerator(function* () {\n          var _this22 = this;\n          this._debug('#_autoRefreshTokenTick()', 'begin');\n          try {\n            yield this._acquireLock(0, /*#__PURE__*/_asyncToGenerator(function* () {\n              try {\n                var now = Date.now();\n                try {\n                  return yield _this22._useSession(/*#__PURE__*/function () {\n                    var _ref32 = _asyncToGenerator(function* (result) {\n                      var session = result.data.session;\n                      if (!session || !session.refresh_token || !session.expires_at) {\n                        _this22._debug('#_autoRefreshTokenTick()', 'no session');\n                        return;\n                      }\n                      // session will expire in this many ticks (or has already expired if <= 0)\n                      var expiresInTicks = Math.floor((session.expires_at * 1000 - now) / constants_1.AUTO_REFRESH_TICK_DURATION_MS);\n                      _this22._debug('#_autoRefreshTokenTick()', `access token expires in ${expiresInTicks} ticks, a tick lasts ${constants_1.AUTO_REFRESH_TICK_DURATION_MS}ms, refresh threshold is ${constants_1.AUTO_REFRESH_TICK_THRESHOLD} ticks`);\n                      if (expiresInTicks <= constants_1.AUTO_REFRESH_TICK_THRESHOLD) {\n                        yield _this22._callRefreshToken(session.refresh_token);\n                      }\n                    });\n                    return function (_x53) {\n                      return _ref32.apply(this, arguments);\n                    };\n                  }());\n                } catch (e) {\n                  console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n                }\n              } finally {\n                _this22._debug('#_autoRefreshTokenTick()', 'end');\n              }\n            }));\n          } catch (e) {\n            if (e.isAcquireTimeout || e instanceof locks_1.LockAcquireTimeoutError) {\n              this._debug('auto refresh token tick lock not available');\n            } else {\n              throw e;\n            }\n          }\n        });\n        function _autoRefreshTokenTick() {\n          return _autoRefreshTokenTick2.apply(this, arguments);\n        }\n        return _autoRefreshTokenTick;\n      }()\n      /**\n       * Registers callbacks on the browser / platform, which in-turn run\n       * algorithms when the browser window/tab are in foreground. On non-browser\n       * platforms it assumes always foreground.\n       */\n      )\n    }, {\n      key: \"_handleVisibilityChange\",\n      value: (function () {\n        var _handleVisibilityChange2 = _asyncToGenerator(function* () {\n          var _this23 = this;\n          this._debug('#_handleVisibilityChange()');\n          if (!(0, helpers_1.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n              // in non-browser environments the refresh token ticker runs always\n              this.startAutoRefresh();\n            }\n            return false;\n          }\n          try {\n            this.visibilityChangedCallback = /*#__PURE__*/_asyncToGenerator(function* () {\n              return yield _this23._onVisibilityChanged(false);\n            });\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            yield this._onVisibilityChanged(true); // initial call\n          } catch (error) {\n            console.error('_handleVisibilityChange', error);\n          }\n        });\n        function _handleVisibilityChange() {\n          return _handleVisibilityChange2.apply(this, arguments);\n        }\n        return _handleVisibilityChange;\n      }()\n      /**\n       * Callback registered with `window.addEventListener('visibilitychange')`.\n       */\n      )\n    }, {\n      key: \"_onVisibilityChanged\",\n      value: (function () {\n        var _onVisibilityChanged2 = _asyncToGenerator(function* (calledFromInitialize) {\n          var _this24 = this;\n          var methodName = `#_onVisibilityChanged(${calledFromInitialize})`;\n          this._debug(methodName, 'visibilityState', document.visibilityState);\n          if (document.visibilityState === 'visible') {\n            if (this.autoRefreshToken) {\n              // in browser environments the refresh token ticker runs only on focused tabs\n              // which prevents race conditions\n              this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n              // called when the visibility has changed, i.e. the browser\n              // transitioned from hidden -> visible so we need to see if the session\n              // should be recovered immediately... but to do that we need to acquire\n              // the lock first asynchronously\n              yield this.initializePromise;\n              yield this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n                if (document.visibilityState !== 'visible') {\n                  _this24._debug(methodName, 'acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting');\n                  // visibility has changed while waiting for the lock, abort\n                  return;\n                }\n                // recover the session\n                yield _this24._recoverAndRefresh();\n              }));\n            }\n          } else if (document.visibilityState === 'hidden') {\n            if (this.autoRefreshToken) {\n              this._stopAutoRefresh();\n            }\n          }\n        });\n        function _onVisibilityChanged(_x54) {\n          return _onVisibilityChanged2.apply(this, arguments);\n        }\n        return _onVisibilityChanged;\n      }()\n      /**\n       * Generates the relevant login URL for a third-party provider.\n       * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n       * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n       * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n       */\n      )\n    }, {\n      key: \"_getUrlForProvider\",\n      value: (function () {\n        var _getUrlForProvider2 = _asyncToGenerator(function* (url, provider, options) {\n          var urlParams = [`provider=${encodeURIComponent(provider)}`];\n          if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n          }\n          if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n          }\n          if (this.flowType === 'pkce') {\n            var _yield19 = yield (0, helpers_1.getCodeChallengeAndMethod)(this.storage, this.storageKey),\n              _yield20 = _slicedToArray(_yield19, 2),\n              codeChallenge = _yield20[0],\n              codeChallengeMethod = _yield20[1];\n            var flowParams = new URLSearchParams({\n              code_challenge: `${encodeURIComponent(codeChallenge)}`,\n              code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`\n            });\n            urlParams.push(flowParams.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            var query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n          }\n          if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(`skip_http_redirect=${options.skipBrowserRedirect}`);\n          }\n          return `${url}?${urlParams.join('&')}`;\n        });\n        function _getUrlForProvider(_x55, _x56, _x57) {\n          return _getUrlForProvider2.apply(this, arguments);\n        }\n        return _getUrlForProvider;\n      }())\n    }, {\n      key: \"_unenroll\",\n      value: function () {\n        var _unenroll2 = _asyncToGenerator(function* (params) {\n          var _this25 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref35 = _asyncToGenerator(function* (result) {\n                var _a;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                return yield (0, fetch_1._request)(_this25.fetch, 'DELETE', `${_this25.url}/factors/${params.factorId}`, {\n                  headers: _this25.headers,\n                  jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n              });\n              return function (_x59) {\n                return _ref35.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _unenroll(_x58) {\n          return _unenroll2.apply(this, arguments);\n        }\n        return _unenroll;\n      }()\n    }, {\n      key: \"_enroll\",\n      value: function () {\n        var _enroll2 = _asyncToGenerator(function* (params) {\n          var _this26 = this;\n          try {\n            return yield this._useSession(/*#__PURE__*/function () {\n              var _ref36 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var sessionData = result.data,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                var body = Object.assign({\n                  friendly_name: params.friendlyName,\n                  factor_type: params.factorType\n                }, params.factorType === 'phone' ? {\n                  phone: params.phone\n                } : {\n                  issuer: params.issuer\n                });\n                var _yield21 = yield (0, fetch_1._request)(_this26.fetch, 'POST', `${_this26.url}/factors`, {\n                    body,\n                    headers: _this26.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  }),\n                  data = _yield21.data,\n                  error = _yield21.error;\n                if (error) {\n                  return {\n                    data: null,\n                    error\n                  };\n                }\n                if (params.factorType === 'totp' && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                  data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return {\n                  data,\n                  error: null\n                };\n              });\n              return function (_x61) {\n                return _ref36.apply(this, arguments);\n              };\n            }());\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function _enroll(_x60) {\n          return _enroll2.apply(this, arguments);\n        }\n        return _enroll;\n      }()\n      /**\n       * {@see GoTrueMFAApi#verify}\n       */\n    }, {\n      key: \"_verify\",\n      value: (function () {\n        var _verify2 = _asyncToGenerator(function* (params) {\n          var _this27 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this27._useSession(/*#__PURE__*/function () {\n                var _ref38 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  var _yield22 = yield (0, fetch_1._request)(_this27.fetch, 'POST', `${_this27.url}/factors/${params.factorId}/verify`, {\n                      body: {\n                        code: params.code,\n                        challenge_id: params.challengeId\n                      },\n                      headers: _this27.headers,\n                      jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    }),\n                    data = _yield22.data,\n                    error = _yield22.error;\n                  if (error) {\n                    return {\n                      data: null,\n                      error\n                    };\n                  }\n                  yield _this27._saveSession(Object.assign({\n                    expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                  }, data));\n                  yield _this27._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                  return {\n                    data,\n                    error\n                  };\n                });\n                return function (_x63) {\n                  return _ref38.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _verify(_x62) {\n          return _verify2.apply(this, arguments);\n        }\n        return _verify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challenge}\n       */\n      )\n    }, {\n      key: \"_challenge\",\n      value: (function () {\n        var _challenge2 = _asyncToGenerator(function* (params) {\n          var _this28 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            try {\n              return yield _this28._useSession(/*#__PURE__*/function () {\n                var _ref40 = _asyncToGenerator(function* (result) {\n                  var _a;\n                  var sessionData = result.data,\n                    sessionError = result.error;\n                  if (sessionError) {\n                    return {\n                      data: null,\n                      error: sessionError\n                    };\n                  }\n                  return yield (0, fetch_1._request)(_this28.fetch, 'POST', `${_this28.url}/factors/${params.factorId}/challenge`, {\n                    body: {\n                      channel: params.channel\n                    },\n                    headers: _this28.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                  });\n                });\n                return function (_x65) {\n                  return _ref40.apply(this, arguments);\n                };\n              }());\n            } catch (error) {\n              if ((0, errors_1.isAuthError)(error)) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              throw error;\n            }\n          }));\n        });\n        function _challenge(_x64) {\n          return _challenge2.apply(this, arguments);\n        }\n        return _challenge;\n      }()\n      /**\n       * {@see GoTrueMFAApi#challengeAndVerify}\n       */\n      )\n    }, {\n      key: \"_challengeAndVerify\",\n      value: (function () {\n        var _challengeAndVerify2 = _asyncToGenerator(function* (params) {\n          // both _challenge and _verify independently acquire the lock, so no need\n          // to acquire it here\n          var _yield$this$_challeng = yield this._challenge({\n              factorId: params.factorId\n            }),\n            challengeData = _yield$this$_challeng.data,\n            challengeError = _yield$this$_challeng.error;\n          if (challengeError) {\n            return {\n              data: null,\n              error: challengeError\n            };\n          }\n          return yield this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n          });\n        });\n        function _challengeAndVerify(_x66) {\n          return _challengeAndVerify2.apply(this, arguments);\n        }\n        return _challengeAndVerify;\n      }()\n      /**\n       * {@see GoTrueMFAApi#listFactors}\n       */\n      )\n    }, {\n      key: \"_listFactors\",\n      value: (function () {\n        var _listFactors2 = _asyncToGenerator(function* () {\n          // use #getUser instead of #_getUser as the former acquires a lock\n          var _yield$this$getUser2 = yield this.getUser(),\n            user = _yield$this$getUser2.data.user,\n            userError = _yield$this$getUser2.error;\n          if (userError) {\n            return {\n              data: null,\n              error: userError\n            };\n          }\n          var factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n          var totp = factors.filter(factor => factor.factor_type === 'totp' && factor.status === 'verified');\n          var phone = factors.filter(factor => factor.factor_type === 'phone' && factor.status === 'verified');\n          return {\n            data: {\n              all: factors,\n              totp,\n              phone\n            },\n            error: null\n          };\n        });\n        function _listFactors() {\n          return _listFactors2.apply(this, arguments);\n        }\n        return _listFactors;\n      }()\n      /**\n       * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n       */\n      )\n    }, {\n      key: \"_getAuthenticatorAssuranceLevel\",\n      value: (function () {\n        var _getAuthenticatorAssuranceLevel2 = _asyncToGenerator(function* () {\n          var _this29 = this;\n          return this._acquireLock(-1, /*#__PURE__*/_asyncToGenerator(function* () {\n            return yield _this29._useSession(/*#__PURE__*/function () {\n              var _ref42 = _asyncToGenerator(function* (result) {\n                var _a, _b;\n                var session = result.data.session,\n                  sessionError = result.error;\n                if (sessionError) {\n                  return {\n                    data: null,\n                    error: sessionError\n                  };\n                }\n                if (!session) {\n                  return {\n                    data: {\n                      currentLevel: null,\n                      nextLevel: null,\n                      currentAuthenticationMethods: []\n                    },\n                    error: null\n                  };\n                }\n                var _ref43 = (0, helpers_1.decodeJWT)(session.access_token),\n                  payload = _ref43.payload;\n                var currentLevel = null;\n                if (payload.aal) {\n                  currentLevel = payload.aal;\n                }\n                var nextLevel = currentLevel;\n                var verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter(factor => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                  nextLevel = 'aal2';\n                }\n                var currentAuthenticationMethods = payload.amr || [];\n                return {\n                  data: {\n                    currentLevel,\n                    nextLevel,\n                    currentAuthenticationMethods\n                  },\n                  error: null\n                };\n              });\n              return function (_x67) {\n                return _ref42.apply(this, arguments);\n              };\n            }());\n          }));\n        });\n        function _getAuthenticatorAssuranceLevel() {\n          return _getAuthenticatorAssuranceLevel2.apply(this, arguments);\n        }\n        return _getAuthenticatorAssuranceLevel;\n      }())\n    }, {\n      key: \"fetchJwk\",\n      value: function () {\n        var _fetchJwk = _asyncToGenerator(function* (kid) {\n          var jwks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n            keys: []\n          };\n          // try fetching from the supplied jwks\n          var jwk = jwks.keys.find(key => key.kid === kid);\n          if (jwk) {\n            return jwk;\n          }\n          var now = Date.now();\n          // try fetching from cache\n          jwk = this.jwks.keys.find(key => key.kid === kid);\n          // jwk exists and jwks isn't stale\n          if (jwk && this.jwks_cached_at + constants_1.JWKS_TTL > now) {\n            return jwk;\n          }\n          // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n          var _yield23 = yield (0, fetch_1._request)(this.fetch, 'GET', `${this.url}/.well-known/jwks.json`, {\n              headers: this.headers\n            }),\n            data = _yield23.data,\n            error = _yield23.error;\n          if (error) {\n            throw error;\n          }\n          if (!data.keys || data.keys.length === 0) {\n            return null;\n          }\n          this.jwks = data;\n          this.jwks_cached_at = now;\n          // Find the signing key\n          jwk = data.keys.find(key => key.kid === kid);\n          if (!jwk) {\n            return null;\n          }\n          return jwk;\n        });\n        function fetchJwk(_x68) {\n          return _fetchJwk.apply(this, arguments);\n        }\n        return fetchJwk;\n      }()\n      /**\n       * Extracts the JWT claims present in the access token by first verifying the\n       * JWT against the server's JSON Web Key Set endpoint\n       * `/.well-known/jwks.json` which is often cached, resulting in significantly\n       * faster responses. Prefer this method over {@link #getUser} which always\n       * sends a request to the Auth server for each JWT.\n       *\n       * If the project is not using an asymmetric JWT signing key (like ECC or\n       * RSA) it always sends a request to the Auth server (similar to {@link\n       * #getUser}) to verify the JWT.\n       *\n       * @param jwt An optional specific JWT you wish to verify, not the one you\n       *            can obtain from {@link #getSession}.\n       * @param options Various additional options that allow you to customize the\n       *                behavior of this method.\n       */\n    }, {\n      key: \"getClaims\",\n      value: (function () {\n        var _getClaims = _asyncToGenerator(function* (jwt) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n          try {\n            var token = jwt;\n            if (!token) {\n              var _yield$this$getSessio = yield this.getSession(),\n                data = _yield$this$getSessio.data,\n                error = _yield$this$getSessio.error;\n              if (error || !data.session) {\n                return {\n                  data: null,\n                  error\n                };\n              }\n              token = data.session.access_token;\n            }\n            var _ref44 = (0, helpers_1.decodeJWT)(token),\n              header = _ref44.header,\n              payload = _ref44.payload,\n              signature = _ref44.signature,\n              _ref44$raw = _ref44.raw,\n              rawHeader = _ref44$raw.header,\n              rawPayload = _ref44$raw.payload;\n            if (!(options === null || options === void 0 ? void 0 : options.allowExpired)) {\n              // Reject expired JWTs should only happen if jwt argument was passed\n              (0, helpers_1.validateExp)(payload.exp);\n            }\n            var signingKey = !header.alg || header.alg.startsWith('HS') || !header.kid || !('crypto' in globalThis && 'subtle' in globalThis.crypto) ? null : yield this.fetchJwk(header.kid, (options === null || options === void 0 ? void 0 : options.keys) ? {\n              keys: options.keys\n            } : options === null || options === void 0 ? void 0 : options.jwks);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!signingKey) {\n              var _yield$this$getUser3 = yield this.getUser(token),\n                _error6 = _yield$this$getUser3.error;\n              if (_error6) {\n                throw _error6;\n              }\n              // getUser succeeds so the claims in the JWT can be trusted\n              return {\n                data: {\n                  claims: payload,\n                  header,\n                  signature\n                },\n                error: null\n              };\n            }\n            var algorithm = (0, helpers_1.getAlgorithm)(header.alg);\n            // Convert JWK to CryptoKey\n            var publicKey = yield crypto.subtle.importKey('jwk', signingKey, algorithm, true, ['verify']);\n            // Verify the signature\n            var isValid = yield crypto.subtle.verify(algorithm, publicKey, signature, (0, base64url_1.stringToUint8Array)(`${rawHeader}.${rawPayload}`));\n            if (!isValid) {\n              throw new errors_1.AuthInvalidJwtError('Invalid JWT signature');\n            }\n            // If verification succeeds, decode and return claims\n            return {\n              data: {\n                claims: payload,\n                header,\n                signature\n              },\n              error: null\n            };\n          } catch (error) {\n            if ((0, errors_1.isAuthError)(error)) {\n              return {\n                data: null,\n                error\n              };\n            }\n            throw error;\n          }\n        });\n        function getClaims(_x69) {\n          return _getClaims.apply(this, arguments);\n        }\n        return getClaims;\n      }())\n    }]);\n  }();\n  exports.default = GoTrueClient;\n  GoTrueClient.nextInstanceID = 0;\n});","lineCount":3655,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,1,13],[7,6,1,13,"_asyncToGenerator"],[7,23,1,13],[7,26,1,13,"require"],[7,33,1,13],[7,34,1,13,"_dependencyMap"],[7,48,1,13],[7,96,1,13,"default"],[7,103,1,13],[8,2,2,0],[8,6,2,4,"__importDefault"],[8,21,2,19],[8,24,2,23],[8,28,2,27],[8,32,2,31],[8,36,2,35],[8,37,2,36,"__importDefault"],[8,52,2,51],[8,56,2,56],[8,66,2,66,"mod"],[8,69,2,69],[8,71,2,71],[9,4,3,4],[9,11,3,12,"mod"],[9,14,3,15],[9,18,3,19,"mod"],[9,21,3,22],[9,22,3,23,"__esModule"],[9,32,3,33],[9,35,3,37,"mod"],[9,38,3,40],[9,41,3,43],[10,6,3,45],[10,15,3,54],[10,17,3,56,"mod"],[11,4,3,60],[11,5,3,61],[12,2,4,0],[12,3,4,1],[13,2,5,0,"Object"],[13,8,5,6],[13,9,5,7,"defineProperty"],[13,23,5,21],[13,24,5,22,"exports"],[13,31,5,29],[13,33,5,31],[13,45,5,43],[13,47,5,45],[14,4,5,47,"value"],[14,9,5,52],[14,11,5,54],[15,2,5,59],[15,3,5,60],[15,4,5,61],[16,2,6,0],[16,6,6,6,"GoTrueAdminApi_1"],[16,22,6,22],[16,25,6,25,"__importDefault"],[16,40,6,40],[16,41,6,41,"require"],[16,48,6,48],[16,49,6,48,"_dependencyMap"],[16,63,6,48],[16,86,6,67],[16,87,6,68],[16,88,6,69],[17,2,7,0],[17,6,7,6,"constants_1"],[17,17,7,17],[17,20,7,20,"require"],[17,27,7,27],[17,28,7,27,"_dependencyMap"],[17,42,7,27],[17,64,7,45],[17,65,7,46],[18,2,8,0],[18,6,8,6,"errors_1"],[18,14,8,14],[18,17,8,17,"require"],[18,24,8,24],[18,25,8,24,"_dependencyMap"],[18,39,8,24],[18,58,8,39],[18,59,8,40],[19,2,9,0],[19,6,9,6,"fetch_1"],[19,13,9,13],[19,16,9,16,"require"],[19,23,9,23],[19,24,9,23,"_dependencyMap"],[19,38,9,23],[19,56,9,37],[19,57,9,38],[20,2,10,0],[20,6,10,6,"helpers_1"],[20,15,10,15],[20,18,10,18,"require"],[20,25,10,25],[20,26,10,25,"_dependencyMap"],[20,40,10,25],[20,60,10,41],[20,61,10,42],[21,2,11,0],[21,6,11,6,"local_storage_1"],[21,21,11,21],[21,24,11,24,"require"],[21,31,11,31],[21,32,11,31,"_dependencyMap"],[21,46,11,31],[21,72,11,53],[21,73,11,54],[22,2,12,0],[22,6,12,6,"polyfills_1"],[22,17,12,17],[22,20,12,20,"require"],[22,27,12,27],[22,28,12,27,"_dependencyMap"],[22,42,12,27],[22,65,12,45],[22,66,12,46],[23,2,13,0],[23,6,13,6,"version_1"],[23,15,13,15],[23,18,13,18,"require"],[23,25,13,25],[23,26,13,25,"_dependencyMap"],[23,40,13,25],[23,61,13,41],[23,62,13,42],[24,2,14,0],[24,6,14,6,"locks_1"],[24,13,14,13],[24,16,14,16,"require"],[24,23,14,23],[24,24,14,23,"_dependencyMap"],[24,38,14,23],[24,57,14,37],[24,58,14,38],[25,2,15,0],[25,6,15,6,"base64url_1"],[25,17,15,17],[25,20,15,20,"require"],[25,27,15,27],[25,28,15,27,"_dependencyMap"],[25,42,15,27],[25,65,15,45],[25,66,15,46],[26,2,16,0],[26,6,16,6,"ethereum_1"],[26,16,16,16],[26,19,16,19,"require"],[26,26,16,26],[26,27,16,26,"_dependencyMap"],[26,41,16,26],[26,68,16,48],[26,69,16,49],[27,2,17,0],[27,3,17,1],[27,4,17,2],[27,6,17,4,"polyfills_1"],[27,17,17,15],[27,18,17,16,"polyfillGlobalThis"],[27,36,17,34],[27,38,17,36],[27,39,17,37],[27,40,17,38],[27,41,17,39],[28,2,18,0],[28,6,18,6,"DEFAULT_OPTIONS"],[28,21,18,21],[28,24,18,24],[29,4,19,4,"url"],[29,7,19,7],[29,9,19,9,"constants_1"],[29,20,19,20],[29,21,19,21,"GOTRUE_URL"],[29,31,19,31],[30,4,20,4,"storageKey"],[30,14,20,14],[30,16,20,16,"constants_1"],[30,27,20,27],[30,28,20,28,"STORAGE_KEY"],[30,39,20,39],[31,4,21,4,"autoRefreshToken"],[31,20,21,20],[31,22,21,22],[31,26,21,26],[32,4,22,4,"persistSession"],[32,18,22,18],[32,20,22,20],[32,24,22,24],[33,4,23,4,"detectSessionInUrl"],[33,22,23,22],[33,24,23,24],[33,28,23,28],[34,4,24,4,"headers"],[34,11,24,11],[34,13,24,13,"constants_1"],[34,24,24,24],[34,25,24,25,"DEFAULT_HEADERS"],[34,40,24,40],[35,4,25,4,"flowType"],[35,12,25,12],[35,14,25,14],[35,24,25,24],[36,4,26,4,"debug"],[36,9,26,9],[36,11,26,11],[36,16,26,16],[37,4,27,4,"hasCustomAuthorizationHeader"],[37,32,27,32],[37,34,27,34],[38,2,28,0],[38,3,28,1],[39,2,28,2],[39,11,29,15,"lockNoOp"],[39,19,29,23,"lockNoOp"],[39,20,29,23,"_x"],[39,22,29,23],[39,24,29,23,"_x2"],[39,27,29,23],[39,29,29,23,"_x3"],[39,32,29,23],[40,4,29,23],[40,11,29,23,"_lockNoOp"],[40,20,29,23],[40,21,29,23,"apply"],[40,26,29,23],[40,33,29,23,"arguments"],[40,42,29,23],[41,2,29,23],[42,2,32,0],[43,0,33,0],[44,0,34,0],[45,0,35,0],[46,0,36,0],[47,0,37,0],[48,0,38,0],[49,0,39,0],[50,2,32,0],[50,11,32,0,"_lockNoOp"],[50,21,32,0],[51,4,32,0,"_lockNoOp"],[51,13,32,0],[51,16,32,0,"_asyncToGenerator"],[51,33,32,0],[51,34,29,0],[51,45,29,24,"name"],[51,49,29,28],[51,51,29,30,"acquireTimeout"],[51,65,29,44],[51,67,29,46,"fn"],[51,69,29,48],[51,71,29,50],[52,6,30,4],[52,19,30,17,"fn"],[52,21,30,19],[52,22,30,20],[52,23,30,21],[53,4,31,0],[53,5,31,1],[54,4,31,1],[54,11,31,1,"_lockNoOp"],[54,20,31,1],[54,21,31,1,"apply"],[54,26,31,1],[54,33,31,1,"arguments"],[54,42,31,1],[55,2,31,1],[56,2,40,0],[56,6,40,6,"GLOBAL_JWKS"],[56,17,40,17],[56,20,40,20],[56,21,40,21],[56,22,40,22],[57,2,40,23],[57,6,41,6,"GoTrueClient"],[57,18,41,18],[58,4,42,4],[59,0,43,0],[60,0,44,0],[61,4,45,4],[61,13,45,4,"GoTrueClient"],[61,26,45,16,"options"],[61,33,45,23],[61,35,45,25],[62,6,45,25],[62,10,45,25,"_this"],[62,15,45,25],[63,6,45,25,"_classCallCheck"],[63,21,45,25],[63,28,45,25,"GoTrueClient"],[63,40,45,25],[64,6,46,8],[64,10,46,12,"_a"],[64,12,46,14],[64,14,46,16,"_b"],[64,16,46,18],[65,6,47,8],[66,0,48,0],[67,0,49,0],[68,6,50,8],[68,10,50,12],[68,11,50,13,"userStorage"],[68,22,50,24],[68,25,50,27],[68,29,50,31],[69,6,51,8],[69,10,51,12],[69,11,51,13,"memoryStorage"],[69,24,51,26],[69,27,51,29],[69,31,51,33],[70,6,52,8],[70,10,52,12],[70,11,52,13,"stateChangeEmitters"],[70,30,52,32],[70,33,52,35],[70,37,52,39,"Map"],[70,40,52,42],[70,41,52,43],[70,42,52,44],[71,6,53,8],[71,10,53,12],[71,11,53,13,"autoRefreshTicker"],[71,28,53,30],[71,31,53,33],[71,35,53,37],[72,6,54,8],[72,10,54,12],[72,11,54,13,"visibilityChangedCallback"],[72,36,54,38],[72,39,54,41],[72,43,54,45],[73,6,55,8],[73,10,55,12],[73,11,55,13,"refreshingDeferred"],[73,29,55,31],[73,32,55,34],[73,36,55,38],[74,6,56,8],[75,0,57,0],[76,0,58,0],[77,0,59,0],[78,0,60,0],[79,0,61,0],[80,6,62,8],[80,10,62,12],[80,11,62,13,"initializePromise"],[80,28,62,30],[80,31,62,33],[80,35,62,37],[81,6,63,8],[81,10,63,12],[81,11,63,13,"detectSessionInUrl"],[81,29,63,31],[81,32,63,34],[81,36,63,38],[82,6,64,8],[82,10,64,12],[82,11,64,13,"hasCustomAuthorizationHeader"],[82,39,64,41],[82,42,64,44],[82,47,64,49],[83,6,65,8],[83,10,65,12],[83,11,65,13,"suppressGetSessionWarning"],[83,36,65,38],[83,39,65,41],[83,44,65,46],[84,6,66,8],[84,10,66,12],[84,11,66,13,"lockAcquired"],[84,23,66,25],[84,26,66,28],[84,31,66,33],[85,6,67,8],[85,10,67,12],[85,11,67,13,"pendingInLock"],[85,24,67,26],[85,27,67,29],[85,29,67,31],[86,6,68,8],[87,0,69,0],[88,0,70,0],[89,6,71,8],[89,10,71,12],[89,11,71,13,"broadcastChannel"],[89,27,71,29],[89,30,71,32],[89,34,71,36],[90,6,72,8],[90,10,72,12],[90,11,72,13,"logger"],[90,17,72,19],[90,20,72,22,"console"],[90,27,72,29],[90,28,72,30,"log"],[90,31,72,33],[91,6,73,8],[91,10,73,12],[91,11,73,13,"instanceID"],[91,21,73,23],[91,24,73,26,"GoTrueClient"],[91,36,73,38],[91,37,73,39,"nextInstanceID"],[91,51,73,53],[92,6,74,8,"GoTrueClient"],[92,18,74,20],[92,19,74,21,"nextInstanceID"],[92,33,74,35],[92,37,74,39],[92,38,74,40],[93,6,75,8],[93,10,75,12],[93,14,75,16],[93,15,75,17,"instanceID"],[93,25,75,27],[93,28,75,30],[93,29,75,31],[93,33,75,35],[93,34,75,36],[93,35,75,37],[93,37,75,39,"helpers_1"],[93,46,75,48],[93,47,75,49,"isBrowser"],[93,56,75,58],[93,58,75,60],[93,59,75,61],[93,61,75,63],[94,8,76,12,"console"],[94,15,76,19],[94,16,76,20,"warn"],[94,20,76,24],[94,21,76,25],[94,227,76,231],[94,228,76,232],[95,6,77,8],[96,6,78,8],[96,10,78,14,"settings"],[96,18,78,22],[96,21,78,25,"Object"],[96,27,78,31],[96,28,78,32,"assign"],[96,34,78,38],[96,35,78,39,"Object"],[96,41,78,45],[96,42,78,46,"assign"],[96,48,78,52],[96,49,78,53],[96,50,78,54],[96,51,78,55],[96,53,78,57,"DEFAULT_OPTIONS"],[96,68,78,72],[96,69,78,73],[96,71,78,75,"options"],[96,78,78,82],[96,79,78,83],[97,6,79,8],[97,10,79,12],[97,11,79,13,"logDebugMessages"],[97,27,79,29],[97,30,79,32],[97,31,79,33],[97,32,79,34,"settings"],[97,40,79,42],[97,41,79,43,"debug"],[97,46,79,48],[98,6,80,8],[98,10,80,12],[98,17,80,19,"settings"],[98,25,80,27],[98,26,80,28,"debug"],[98,31,80,33],[98,36,80,38],[98,46,80,48],[98,48,80,50],[99,8,81,12],[99,12,81,16],[99,13,81,17,"logger"],[99,19,81,23],[99,22,81,26,"settings"],[99,30,81,34],[99,31,81,35,"debug"],[99,36,81,40],[100,6,82,8],[101,6,83,8],[101,10,83,12],[101,11,83,13,"persistSession"],[101,25,83,27],[101,28,83,30,"settings"],[101,36,83,38],[101,37,83,39,"persistSession"],[101,51,83,53],[102,6,84,8],[102,10,84,12],[102,11,84,13,"storageKey"],[102,21,84,23],[102,24,84,26,"settings"],[102,32,84,34],[102,33,84,35,"storageKey"],[102,43,84,45],[103,6,85,8],[103,10,85,12],[103,11,85,13,"autoRefreshToken"],[103,27,85,29],[103,30,85,32,"settings"],[103,38,85,40],[103,39,85,41,"autoRefreshToken"],[103,55,85,57],[104,6,86,8],[104,10,86,12],[104,11,86,13,"admin"],[104,16,86,18],[104,19,86,21],[104,23,86,25,"GoTrueAdminApi_1"],[104,39,86,41],[104,40,86,42,"default"],[104,47,86,49],[104,48,86,50],[105,8,87,12,"url"],[105,11,87,15],[105,13,87,17,"settings"],[105,21,87,25],[105,22,87,26,"url"],[105,25,87,29],[106,8,88,12,"headers"],[106,15,88,19],[106,17,88,21,"settings"],[106,25,88,29],[106,26,88,30,"headers"],[106,33,88,37],[107,8,89,12,"fetch"],[107,13,89,17],[107,15,89,19,"settings"],[107,23,89,27],[107,24,89,28,"fetch"],[108,6,90,8],[108,7,90,9],[108,8,90,10],[109,6,91,8],[109,10,91,12],[109,11,91,13,"url"],[109,14,91,16],[109,17,91,19,"settings"],[109,25,91,27],[109,26,91,28,"url"],[109,29,91,31],[110,6,92,8],[110,10,92,12],[110,11,92,13,"headers"],[110,18,92,20],[110,21,92,23,"settings"],[110,29,92,31],[110,30,92,32,"headers"],[110,37,92,39],[111,6,93,8],[111,10,93,12],[111,11,93,13,"fetch"],[111,16,93,18],[111,19,93,21],[111,20,93,22],[111,21,93,23],[111,23,93,25,"helpers_1"],[111,32,93,34],[111,33,93,35,"resolveFetch"],[111,45,93,47],[111,47,93,49,"settings"],[111,55,93,57],[111,56,93,58,"fetch"],[111,61,93,63],[111,62,93,64],[112,6,94,8],[112,10,94,12],[112,11,94,13,"lock"],[112,15,94,17],[112,18,94,20,"settings"],[112,26,94,28],[112,27,94,29,"lock"],[112,31,94,33],[112,35,94,37,"lockNoOp"],[112,43,94,45],[113,6,95,8],[113,10,95,12],[113,11,95,13,"detectSessionInUrl"],[113,29,95,31],[113,32,95,34,"settings"],[113,40,95,42],[113,41,95,43,"detectSessionInUrl"],[113,59,95,61],[114,6,96,8],[114,10,96,12],[114,11,96,13,"flowType"],[114,19,96,21],[114,22,96,24,"settings"],[114,30,96,32],[114,31,96,33,"flowType"],[114,39,96,41],[115,6,97,8],[115,10,97,12],[115,11,97,13,"hasCustomAuthorizationHeader"],[115,39,97,41],[115,42,97,44,"settings"],[115,50,97,52],[115,51,97,53,"hasCustomAuthorizationHeader"],[115,79,97,81],[116,6,98,8],[116,10,98,12,"settings"],[116,18,98,20],[116,19,98,21,"lock"],[116,23,98,25],[116,25,98,27],[117,8,99,12],[117,12,99,16],[117,13,99,17,"lock"],[117,17,99,21],[117,20,99,24,"settings"],[117,28,99,32],[117,29,99,33,"lock"],[117,33,99,37],[118,6,100,8],[118,7,100,9],[118,13,101,13],[118,17,101,17],[118,18,101,18],[118,19,101,19],[118,21,101,21,"helpers_1"],[118,30,101,30],[118,31,101,31,"isBrowser"],[118,40,101,40],[118,42,101,42],[118,43,101,43],[118,48,101,48],[118,49,101,49,"_a"],[118,51,101,51],[118,54,101,54,"globalThis"],[118,64,101,64],[118,69,101,69],[118,73,101,73],[118,77,101,77,"globalThis"],[118,87,101,87],[118,92,101,92],[118,97,101,97],[118,98,101,98],[118,101,101,101],[118,106,101,106],[118,107,101,107],[118,110,101,110,"globalThis"],[118,120,101,120],[118,121,101,121,"navigator"],[118,130,101,130],[118,136,101,136],[118,140,101,140],[118,144,101,144,"_a"],[118,146,101,146],[118,151,101,151],[118,156,101,156],[118,157,101,157],[118,160,101,160],[118,165,101,165],[118,166,101,166],[118,169,101,169,"_a"],[118,171,101,171],[118,172,101,172,"locks"],[118,177,101,177],[118,178,101,178],[118,180,101,180],[119,8,102,12],[119,12,102,16],[119,13,102,17,"lock"],[119,17,102,21],[119,20,102,24,"locks_1"],[119,27,102,31],[119,28,102,32,"navigatorLock"],[119,41,102,45],[120,6,103,8],[120,7,103,9],[120,13,104,13],[121,8,105,12],[121,12,105,16],[121,13,105,17,"lock"],[121,17,105,21],[121,20,105,24,"lockNoOp"],[121,28,105,32],[122,6,106,8],[123,6,107,8],[123,10,107,12],[123,11,107,13],[123,15,107,17],[123,16,107,18,"jwks"],[123,20,107,22],[123,22,107,24],[124,8,108,12],[124,12,108,16],[124,13,108,17,"jwks"],[124,17,108,21],[124,20,108,24],[125,10,108,26,"keys"],[125,14,108,30],[125,16,108,32],[126,8,108,35],[126,9,108,36],[127,8,109,12],[127,12,109,16],[127,13,109,17,"jwks_cached_at"],[127,27,109,31],[127,30,109,34,"Number"],[127,36,109,40],[127,37,109,41,"MIN_SAFE_INTEGER"],[127,53,109,57],[128,6,110,8],[129,6,111,8],[129,10,111,12],[129,11,111,13,"mfa"],[129,14,111,16],[129,17,111,19],[130,8,112,12,"verify"],[130,14,112,18],[130,16,112,20],[130,20,112,24],[130,21,112,25,"_verify"],[130,28,112,32],[130,29,112,33,"bind"],[130,33,112,37],[130,34,112,38],[130,38,112,42],[130,39,112,43],[131,8,113,12,"enroll"],[131,14,113,18],[131,16,113,20],[131,20,113,24],[131,21,113,25,"_enroll"],[131,28,113,32],[131,29,113,33,"bind"],[131,33,113,37],[131,34,113,38],[131,38,113,42],[131,39,113,43],[132,8,114,12,"unenroll"],[132,16,114,20],[132,18,114,22],[132,22,114,26],[132,23,114,27,"_unenroll"],[132,32,114,36],[132,33,114,37,"bind"],[132,37,114,41],[132,38,114,42],[132,42,114,46],[132,43,114,47],[133,8,115,12,"challenge"],[133,17,115,21],[133,19,115,23],[133,23,115,27],[133,24,115,28,"_challenge"],[133,34,115,38],[133,35,115,39,"bind"],[133,39,115,43],[133,40,115,44],[133,44,115,48],[133,45,115,49],[134,8,116,12,"listFactors"],[134,19,116,23],[134,21,116,25],[134,25,116,29],[134,26,116,30,"_listFactors"],[134,38,116,42],[134,39,116,43,"bind"],[134,43,116,47],[134,44,116,48],[134,48,116,52],[134,49,116,53],[135,8,117,12,"challengeAndVerify"],[135,26,117,30],[135,28,117,32],[135,32,117,36],[135,33,117,37,"_challengeAndVerify"],[135,52,117,56],[135,53,117,57,"bind"],[135,57,117,61],[135,58,117,62],[135,62,117,66],[135,63,117,67],[136,8,118,12,"getAuthenticatorAssuranceLevel"],[136,38,118,42],[136,40,118,44],[136,44,118,48],[136,45,118,49,"_getAuthenticatorAssuranceLevel"],[136,76,118,80],[136,77,118,81,"bind"],[136,81,118,85],[136,82,118,86],[136,86,118,90],[137,6,119,8],[137,7,119,9],[138,6,120,8],[138,10,120,12],[138,14,120,16],[138,15,120,17,"persistSession"],[138,29,120,31],[138,31,120,33],[139,8,121,12],[139,12,121,16,"settings"],[139,20,121,24],[139,21,121,25,"storage"],[139,28,121,32],[139,30,121,34],[140,10,122,16],[140,14,122,20],[140,15,122,21,"storage"],[140,22,122,28],[140,25,122,31,"settings"],[140,33,122,39],[140,34,122,40,"storage"],[140,41,122,47],[141,8,123,12],[141,9,123,13],[141,15,124,17],[142,10,125,16],[142,14,125,20],[142,15,125,21],[142,16,125,22],[142,18,125,24,"helpers_1"],[142,27,125,33],[142,28,125,34,"supportsLocalStorage"],[142,48,125,54],[142,50,125,56],[142,51,125,57],[142,53,125,59],[143,12,126,20],[143,16,126,24],[143,17,126,25,"storage"],[143,24,126,32],[143,27,126,35,"globalThis"],[143,37,126,45],[143,38,126,46,"localStorage"],[143,50,126,58],[144,10,127,16],[144,11,127,17],[144,17,128,21],[145,12,129,20],[145,16,129,24],[145,17,129,25,"memoryStorage"],[145,30,129,38],[145,33,129,41],[145,34,129,42],[145,35,129,43],[146,12,130,20],[146,16,130,24],[146,17,130,25,"storage"],[146,24,130,32],[146,27,130,35],[146,28,130,36],[146,29,130,37],[146,31,130,39,"local_storage_1"],[146,46,130,54],[146,47,130,55,"memoryLocalStorageAdapter"],[146,72,130,80],[146,74,130,82],[146,78,130,86],[146,79,130,87,"memoryStorage"],[146,92,130,100],[146,93,130,101],[147,10,131,16],[148,8,132,12],[149,8,133,12],[149,12,133,16,"settings"],[149,20,133,24],[149,21,133,25,"userStorage"],[149,32,133,36],[149,34,133,38],[150,10,134,16],[150,14,134,20],[150,15,134,21,"userStorage"],[150,26,134,32],[150,29,134,35,"settings"],[150,37,134,43],[150,38,134,44,"userStorage"],[150,49,134,55],[151,8,135,12],[152,6,136,8],[152,7,136,9],[152,13,137,13],[153,8,138,12],[153,12,138,16],[153,13,138,17,"memoryStorage"],[153,26,138,30],[153,29,138,33],[153,30,138,34],[153,31,138,35],[154,8,139,12],[154,12,139,16],[154,13,139,17,"storage"],[154,20,139,24],[154,23,139,27],[154,24,139,28],[154,25,139,29],[154,27,139,31,"local_storage_1"],[154,42,139,46],[154,43,139,47,"memoryLocalStorageAdapter"],[154,68,139,72],[154,70,139,74],[154,74,139,78],[154,75,139,79,"memoryStorage"],[154,88,139,92],[154,89,139,93],[155,6,140,8],[156,6,141,8],[156,10,141,12],[156,11,141,13],[156,12,141,14],[156,14,141,16,"helpers_1"],[156,23,141,25],[156,24,141,26,"isBrowser"],[156,33,141,35],[156,35,141,37],[156,36,141,38],[156,40,141,42,"globalThis"],[156,50,141,52],[156,51,141,53,"BroadcastChannel"],[156,67,141,69],[156,71,141,73],[156,75,141,77],[156,76,141,78,"persistSession"],[156,90,141,92],[156,94,141,96],[156,98,141,100],[156,99,141,101,"storageKey"],[156,109,141,111],[156,111,141,113],[157,8,142,12],[157,12,142,16],[158,10,143,16],[158,14,143,20],[158,15,143,21,"broadcastChannel"],[158,31,143,37],[158,34,143,40],[158,38,143,44,"globalThis"],[158,48,143,54],[158,49,143,55,"BroadcastChannel"],[158,65,143,71],[158,66,143,72],[158,70,143,76],[158,71,143,77,"storageKey"],[158,81,143,87],[158,82,143,88],[159,8,144,12],[159,9,144,13],[159,10,145,12],[159,17,145,19,"e"],[159,18,145,20],[159,20,145,22],[160,10,146,16,"console"],[160,17,146,23],[160,18,146,24,"error"],[160,23,146,29],[160,24,146,30],[160,112,146,118],[160,114,146,120,"e"],[160,115,146,121],[160,116,146,122],[161,8,147,12],[162,8,148,12],[162,9,148,13,"_b"],[162,11,148,15],[162,14,148,18],[162,18,148,22],[162,19,148,23,"broadcastChannel"],[162,35,148,39],[162,41,148,45],[162,45,148,49],[162,49,148,53,"_b"],[162,51,148,55],[162,56,148,60],[162,61,148,65],[162,62,148,66],[162,65,148,69],[162,70,148,74],[162,71,148,75],[162,74,148,78,"_b"],[162,76,148,80],[162,77,148,81,"addEventListener"],[162,93,148,97],[162,94,148,98],[162,103,148,107],[163,10,148,107],[163,14,148,107,"_ref"],[163,18,148,107],[163,21,148,107,"_asyncToGenerator"],[163,38,148,107],[163,39,148,109],[163,50,148,116,"event"],[163,55,148,121],[163,57,148,126],[164,12,149,16,"_this"],[164,17,149,20],[164,18,149,21,"_debug"],[164,24,149,27],[164,25,149,28],[164,83,149,86],[164,85,149,88,"event"],[164,90,149,93],[164,91,149,94],[165,12,150,16],[165,18,150,22,"_this"],[165,23,150,26],[165,24,150,27,"_notifyAllSubscribers"],[165,45,150,48],[165,46,150,49,"event"],[165,51,150,54],[165,52,150,55,"data"],[165,56,150,59],[165,57,150,60,"event"],[165,62,150,65],[165,64,150,67,"event"],[165,69,150,72],[165,70,150,73,"data"],[165,74,150,77],[165,75,150,78,"session"],[165,82,150,85],[165,84,150,87],[165,89,150,92],[165,90,150,93],[165,91,150,94],[165,92,150,95],[166,10,151,12],[166,11,151,13],[167,10,151,13],[167,27,151,13,"_x4"],[167,30,151,13],[168,12,151,13],[168,19,151,13,"_ref"],[168,23,151,13],[168,24,151,13,"apply"],[168,29,151,13],[168,36,151,13,"arguments"],[168,45,151,13],[169,10,151,13],[170,8,151,13],[170,12,151,14],[171,6,152,8],[172,6,153,8],[172,10,153,12],[172,11,153,13,"initialize"],[172,21,153,23],[172,22,153,24],[172,23,153,25],[173,4,154,4],[174,4,155,4],[175,0,156,0],[176,0,157,0],[177,4,155,4],[177,11,155,4,"_createClass"],[177,23,155,4],[177,24,155,4,"GoTrueClient"],[177,36,155,4],[178,6,155,4,"key"],[178,9,155,4],[179,6,155,4,"get"],[179,9,155,4],[179,11,158,4],[179,20,158,4,"get"],[179,21,158,4],[179,23,158,15],[180,8,159,8],[180,12,159,12,"_a"],[180,14,159,14],[180,16,159,16,"_b"],[180,18,159,18],[181,8,160,8],[181,15,160,15],[181,16,160,16,"_b"],[181,18,160,18],[181,21,160,21],[181,22,160,22,"_a"],[181,24,160,24],[181,27,160,27,"GLOBAL_JWKS"],[181,38,160,38],[181,39,160,39],[181,43,160,43],[181,44,160,44,"storageKey"],[181,54,160,54],[181,55,160,55],[181,61,160,61],[181,65,160,65],[181,69,160,69,"_a"],[181,71,160,71],[181,76,160,76],[181,81,160,81],[181,82,160,82],[181,85,160,85],[181,90,160,90],[181,91,160,91],[181,94,160,94,"_a"],[181,96,160,96],[181,97,160,97,"jwks"],[181,101,160,101],[181,107,160,107],[181,111,160,111],[181,115,160,115,"_b"],[181,117,160,117],[181,122,160,122],[181,127,160,127],[181,128,160,128],[181,131,160,131,"_b"],[181,133,160,133],[181,136,160,136],[182,10,160,138,"keys"],[182,14,160,142],[182,16,160,144],[183,8,160,147],[183,9,160,148],[184,6,161,4],[184,7,161,5],[185,6,161,5,"set"],[185,9,161,5],[185,11,162,4],[185,20,162,4,"set"],[185,21,162,13,"value"],[185,26,162,18],[185,28,162,20],[186,8,163,8,"GLOBAL_JWKS"],[186,19,163,19],[186,20,163,20],[186,24,163,24],[186,25,163,25,"storageKey"],[186,35,163,35],[186,36,163,36],[186,39,163,39,"Object"],[186,45,163,45],[186,46,163,46,"assign"],[186,52,163,52],[186,53,163,53,"Object"],[186,59,163,59],[186,60,163,60,"assign"],[186,66,163,66],[186,67,163,67],[186,68,163,68],[186,69,163,69],[186,71,163,71,"GLOBAL_JWKS"],[186,82,163,82],[186,83,163,83],[186,87,163,87],[186,88,163,88,"storageKey"],[186,98,163,98],[186,99,163,99],[186,100,163,100],[186,102,163,102],[187,10,163,104,"jwks"],[187,14,163,108],[187,16,163,110,"value"],[188,8,163,116],[188,9,163,117],[188,10,163,118],[189,6,164,4],[190,4,164,5],[191,6,164,5,"key"],[191,9,164,5],[192,6,164,5,"get"],[192,9,164,5],[192,11,165,4],[192,20,165,4,"get"],[192,21,165,4],[192,23,165,25],[193,8,166,8],[193,12,166,12,"_a"],[193,14,166,14],[193,16,166,16,"_b"],[193,18,166,18],[194,8,167,8],[194,15,167,15],[194,16,167,16,"_b"],[194,18,167,18],[194,21,167,21],[194,22,167,22,"_a"],[194,24,167,24],[194,27,167,27,"GLOBAL_JWKS"],[194,38,167,38],[194,39,167,39],[194,43,167,43],[194,44,167,44,"storageKey"],[194,54,167,54],[194,55,167,55],[194,61,167,61],[194,65,167,65],[194,69,167,69,"_a"],[194,71,167,71],[194,76,167,76],[194,81,167,81],[194,82,167,82],[194,85,167,85],[194,90,167,90],[194,91,167,91],[194,94,167,94,"_a"],[194,96,167,96],[194,97,167,97,"cachedAt"],[194,105,167,105],[194,111,167,111],[194,115,167,115],[194,119,167,119,"_b"],[194,121,167,121],[194,126,167,126],[194,131,167,131],[194,132,167,132],[194,135,167,135,"_b"],[194,137,167,137],[194,140,167,140,"Number"],[194,146,167,146],[194,147,167,147,"MIN_SAFE_INTEGER"],[194,163,167,163],[195,6,168,4],[195,7,168,5],[196,6,168,5,"set"],[196,9,168,5],[196,11,169,4],[196,20,169,4,"set"],[196,21,169,23,"value"],[196,26,169,28],[196,28,169,30],[197,8,170,8,"GLOBAL_JWKS"],[197,19,170,19],[197,20,170,20],[197,24,170,24],[197,25,170,25,"storageKey"],[197,35,170,35],[197,36,170,36],[197,39,170,39,"Object"],[197,45,170,45],[197,46,170,46,"assign"],[197,52,170,52],[197,53,170,53,"Object"],[197,59,170,59],[197,60,170,60,"assign"],[197,66,170,66],[197,67,170,67],[197,68,170,68],[197,69,170,69],[197,71,170,71,"GLOBAL_JWKS"],[197,82,170,82],[197,83,170,83],[197,87,170,87],[197,88,170,88,"storageKey"],[197,98,170,98],[197,99,170,99],[197,100,170,100],[197,102,170,102],[198,10,170,104,"cachedAt"],[198,18,170,112],[198,20,170,114,"value"],[199,8,170,120],[199,9,170,121],[199,10,170,122],[200,6,171,4],[201,4,171,5],[202,6,171,5,"key"],[202,9,171,5],[203,6,171,5,"value"],[203,11,171,5],[203,13,172,4],[203,22,172,4,"_debug"],[203,28,172,10,"_debug"],[203,29,172,10],[203,31,172,20],[204,8,173,8],[204,12,173,12],[204,16,173,16],[204,17,173,17,"logDebugMessages"],[204,33,173,33],[204,35,173,35],[205,10,173,35],[205,19,173,35,"_len"],[205,23,173,35],[205,26,173,35,"arguments"],[205,35,173,35],[205,36,173,35,"length"],[205,42,173,35],[205,44,172,14,"args"],[205,48,172,18],[205,55,172,18,"Array"],[205,60,172,18],[205,61,172,18,"_len"],[205,65,172,18],[205,68,172,18,"_key"],[205,72,172,18],[205,78,172,18,"_key"],[205,82,172,18],[205,85,172,18,"_len"],[205,89,172,18],[205,91,172,18,"_key"],[205,95,172,18],[206,12,172,14,"args"],[206,16,172,18],[206,17,172,18,"_key"],[206,21,172,18],[206,25,172,18,"arguments"],[206,34,172,18],[206,35,172,18,"_key"],[206,39,172,18],[207,10,172,18],[208,10,174,12],[208,14,174,16],[208,15,174,17,"logger"],[208,21,174,23],[208,22,174,24],[208,38,174,40],[208,42,174,44],[208,43,174,45,"instanceID"],[208,53,174,55],[208,58,174,60,"version_1"],[208,67,174,69],[208,68,174,70,"version"],[208,75,174,77],[208,80,174,82],[208,84,174,86,"Date"],[208,88,174,90],[208,89,174,91],[208,90,174,92],[208,91,174,93,"toISOString"],[208,102,174,104],[208,103,174,105],[208,104,174,106],[208,106,174,108],[208,108,174,110],[208,111,174,113,"args"],[208,115,174,117],[208,116,174,118],[209,8,175,8],[210,8,176,8],[210,15,176,15],[210,19,176,19],[211,6,177,4],[212,6,178,4],[213,0,179,0],[214,0,180,0],[215,0,181,0],[216,0,182,0],[217,4,178,4],[218,6,178,4,"key"],[218,9,178,4],[219,6,178,4,"value"],[219,11,178,4],[220,8,178,4],[220,12,178,4,"_initialize2"],[220,24,178,4],[220,27,178,4,"_asyncToGenerator"],[220,44,178,4],[220,45,183,4],[220,58,183,23],[221,10,183,23],[221,14,183,23,"_this2"],[221,20,183,23],[222,10,184,8],[222,14,184,12],[222,18,184,16],[222,19,184,17,"initializePromise"],[222,36,184,34],[222,38,184,36],[223,12,185,12],[223,25,185,25],[223,29,185,29],[223,30,185,30,"initializePromise"],[223,47,185,47],[224,10,186,8],[225,10,187,8],[225,14,187,12],[225,15,187,13,"initializePromise"],[225,32,187,30],[225,35,187,33,"_asyncToGenerator"],[225,52,187,33],[225,53,187,34],[225,66,187,46],[226,12,188,12],[226,25,188,25,"_this2"],[226,31,188,29],[226,32,188,30,"_acquireLock"],[226,44,188,42],[226,45,188,43],[226,46,188,44],[226,47,188,45],[226,62,188,45,"_asyncToGenerator"],[226,79,188,45],[226,80,188,47],[226,93,188,59],[227,14,189,16],[227,27,189,29,"_this2"],[227,33,189,33],[227,34,189,34,"_initialize"],[227,45,189,45],[227,46,189,46],[227,47,189,47],[228,12,190,12],[228,13,190,13],[228,15,190,14],[229,10,191,8],[229,11,191,9],[229,13,191,11],[229,14,191,12],[230,10,192,8],[230,23,192,21],[230,27,192,25],[230,28,192,26,"initializePromise"],[230,45,192,43],[231,8,193,4],[231,9,193,5],[232,8,193,5],[232,17,183,10,"initialize"],[232,27,183,20,"initialize"],[232,28,183,20],[233,10,183,20],[233,17,183,20,"_initialize2"],[233,29,183,20],[233,30,183,20,"apply"],[233,35,183,20],[233,42,183,20,"arguments"],[233,51,183,20],[234,8,183,20],[235,8,183,20],[235,15,183,10,"initialize"],[235,25,183,20],[236,6,183,20],[237,6,194,4],[238,0,195,0],[239,0,196,0],[240,0,197,0],[241,0,198,0],[242,0,199,0],[243,6,194,4],[244,4,194,4],[245,6,194,4,"key"],[245,9,194,4],[246,6,194,4,"value"],[246,11,194,4],[247,8,194,4],[247,12,194,4,"_initialize3"],[247,24,194,4],[247,27,194,4,"_asyncToGenerator"],[247,44,194,4],[247,45,200,4],[247,58,200,24],[248,10,200,24],[248,14,200,24,"_this3"],[248,20,200,24],[249,10,201,8],[249,14,201,12,"_a"],[249,16,201,14],[250,10,202,8],[250,14,202,12],[251,12,203,12],[251,16,203,18,"params"],[251,22,203,24],[251,25,203,27],[251,26,203,28],[251,27,203,29],[251,29,203,31,"helpers_1"],[251,38,203,40],[251,39,203,41,"parseParametersFromURL"],[251,61,203,63],[251,63,203,65,"window"],[251,69,203,71],[251,70,203,72,"location"],[251,78,203,80],[251,79,203,81,"href"],[251,83,203,85],[251,84,203,86],[252,12,204,12],[252,16,204,16,"callbackUrlType"],[252,31,204,31],[252,34,204,34],[252,40,204,40],[253,12,205,12],[253,16,205,16],[253,20,205,20],[253,21,205,21,"_isImplicitGrantCallback"],[253,45,205,45],[253,46,205,46,"params"],[253,52,205,52],[253,53,205,53],[253,55,205,55],[254,14,206,16,"callbackUrlType"],[254,29,206,31],[254,32,206,34],[254,42,206,44],[255,12,207,12],[255,13,207,13],[255,19,208,17],[255,29,208,27],[255,33,208,31],[255,34,208,32,"_isPKCECallback"],[255,49,208,47],[255,50,208,48,"params"],[255,56,208,54],[255,57,208,55],[255,59,208,57],[256,14,209,16,"callbackUrlType"],[256,29,209,31],[256,32,209,34],[256,38,209,40],[257,12,210,12],[258,12,211,12],[259,0,212,0],[260,0,213,0],[261,0,214,0],[262,0,215,0],[263,0,216,0],[264,12,217,12],[264,16,217,16],[264,17,217,17],[264,18,217,18],[264,20,217,20,"helpers_1"],[264,29,217,29],[264,30,217,30,"isBrowser"],[264,39,217,39],[264,41,217,41],[264,42,217,42],[264,46,217,46],[264,50,217,50],[264,51,217,51,"detectSessionInUrl"],[264,69,217,69],[264,73,217,73,"callbackUrlType"],[264,88,217,88],[264,93,217,93],[264,99,217,99],[264,101,217,101],[265,14,218,16],[265,18,218,16,"_yield$this$_getSessi"],[265,39,218,16],[265,48,218,46],[265,52,218,50],[265,53,218,51,"_getSessionFromURL"],[265,71,218,69],[265,72,218,70,"params"],[265,78,218,76],[265,80,218,78,"callbackUrlType"],[265,95,218,93],[265,96,218,94],[266,16,218,24,"data"],[266,20,218,28],[266,23,218,28,"_yield$this$_getSessi"],[266,44,218,28],[266,45,218,24,"data"],[266,49,218,28],[267,16,218,30,"error"],[267,21,218,35],[267,24,218,35,"_yield$this$_getSessi"],[267,45,218,35],[267,46,218,30,"error"],[267,51,218,35],[268,14,219,16],[268,18,219,20,"error"],[268,23,219,25],[268,25,219,27],[269,16,220,20],[269,20,220,24],[269,21,220,25,"_debug"],[269,27,220,31],[269,28,220,32],[269,44,220,48],[269,46,220,50],[269,80,220,84],[269,82,220,86,"error"],[269,87,220,91],[269,88,220,92],[270,16,221,20],[270,20,221,24],[270,21,221,25],[270,22,221,26],[270,24,221,28,"errors_1"],[270,32,221,36],[270,33,221,37,"isAuthImplicitGrantRedirectError"],[270,65,221,69],[270,67,221,71,"error"],[270,72,221,76],[270,73,221,77],[270,75,221,79],[271,18,222,24],[271,22,222,30,"errorCode"],[271,31,222,39],[271,34,222,42],[271,35,222,43,"_a"],[271,37,222,45],[271,40,222,48,"error"],[271,45,222,53],[271,46,222,54,"details"],[271,53,222,61],[271,59,222,67],[271,63,222,71],[271,67,222,75,"_a"],[271,69,222,77],[271,74,222,82],[271,79,222,87],[271,80,222,88],[271,83,222,91],[271,88,222,96],[271,89,222,97],[271,92,222,100,"_a"],[271,94,222,102],[271,95,222,103,"code"],[271,99,222,107],[272,18,223,24],[272,22,223,28,"errorCode"],[272,31,223,37],[272,36,223,42],[272,61,223,67],[272,65,224,28,"errorCode"],[272,74,224,37],[272,79,224,42],[272,99,224,62],[272,103,225,28,"errorCode"],[272,112,225,37],[272,117,225,42],[272,148,225,73],[272,150,225,75],[273,20,226,28],[273,27,226,35],[274,22,226,37,"error"],[275,20,226,43],[275,21,226,44],[276,18,227,24],[277,16,228,20],[278,16,229,20],[279,16,230,20],[280,16,231,20],[280,22,231,26],[280,26,231,30],[280,27,231,31,"_removeSession"],[280,41,231,45],[280,42,231,46],[280,43,231,47],[281,16,232,20],[281,23,232,27],[282,18,232,29,"error"],[283,16,232,35],[283,17,232,36],[284,14,233,16],[285,14,234,16],[285,18,234,24,"session"],[285,25,234,31],[285,28,234,50,"data"],[285,32,234,54],[285,33,234,24,"session"],[285,40,234,31],[286,16,234,33,"redirectType"],[286,28,234,45],[286,31,234,50,"data"],[286,35,234,54],[286,36,234,33,"redirectType"],[286,48,234,45],[287,14,235,16],[287,18,235,20],[287,19,235,21,"_debug"],[287,25,235,27],[287,26,235,28],[287,42,235,44],[287,44,235,46],[287,69,235,71],[287,71,235,73,"session"],[287,78,235,80],[287,80,235,82],[287,95,235,97],[287,97,235,99,"redirectType"],[287,109,235,111],[287,110,235,112],[288,14,236,16],[288,20,236,22],[288,24,236,26],[288,25,236,27,"_saveSession"],[288,37,236,39],[288,38,236,40,"session"],[288,45,236,47],[288,46,236,48],[289,14,237,16,"setTimeout"],[289,24,237,26],[289,38,237,26,"_asyncToGenerator"],[289,55,237,26],[289,56,237,27],[289,69,237,39],[290,16,238,20],[290,20,238,24,"redirectType"],[290,32,238,36],[290,37,238,41],[290,47,238,51],[290,49,238,53],[291,18,239,24],[291,24,239,30,"_this3"],[291,30,239,34],[291,31,239,35,"_notifyAllSubscribers"],[291,52,239,56],[291,53,239,57],[291,72,239,76],[291,74,239,78,"session"],[291,81,239,85],[291,82,239,86],[292,16,240,20],[292,17,240,21],[292,23,241,25],[293,18,242,24],[293,24,242,30,"_this3"],[293,30,242,34],[293,31,242,35,"_notifyAllSubscribers"],[293,52,242,56],[293,53,242,57],[293,64,242,68],[293,66,242,70,"session"],[293,73,242,77],[293,74,242,78],[294,16,243,20],[295,14,244,16],[295,15,244,17],[295,18,244,19],[295,19,244,20],[295,20,244,21],[296,14,245,16],[296,21,245,23],[297,16,245,25,"error"],[297,21,245,30],[297,23,245,32],[298,14,245,37],[298,15,245,38],[299,12,246,12],[300,12,247,12],[301,12,248,12],[301,18,248,18],[301,22,248,22],[301,23,248,23,"_recoverAndRefresh"],[301,41,248,41],[301,42,248,42],[301,43,248,43],[302,12,249,12],[302,19,249,19],[303,14,249,21,"error"],[303,19,249,26],[303,21,249,28],[304,12,249,33],[304,13,249,34],[305,10,250,8],[305,11,250,9],[305,12,251,8],[305,19,251,15,"error"],[305,24,251,20],[305,26,251,22],[306,12,252,12],[306,16,252,16],[306,17,252,17],[306,18,252,18],[306,20,252,20,"errors_1"],[306,28,252,28],[306,29,252,29,"isAuthError"],[306,40,252,40],[306,42,252,42,"error"],[306,47,252,47],[306,48,252,48],[306,50,252,50],[307,14,253,16],[307,21,253,23],[308,16,253,25,"error"],[309,14,253,31],[309,15,253,32],[310,12,254,12],[311,12,255,12],[311,19,255,19],[312,14,256,16,"error"],[312,19,256,21],[312,21,256,23],[312,25,256,27,"errors_1"],[312,33,256,35],[312,34,256,36,"AuthUnknownError"],[312,50,256,52],[312,51,256,53],[312,91,256,93],[312,93,256,95,"error"],[312,98,256,100],[313,12,257,12],[313,13,257,13],[314,10,258,8],[314,11,258,9],[314,20,259,16],[315,12,260,12],[315,18,260,18],[315,22,260,22],[315,23,260,23,"_handleVisibilityChange"],[315,46,260,46],[315,47,260,47],[315,48,260,48],[316,12,261,12],[316,16,261,16],[316,17,261,17,"_debug"],[316,23,261,23],[316,24,261,24],[316,40,261,40],[316,42,261,42],[316,47,261,47],[316,48,261,48],[317,10,262,8],[318,8,263,4],[318,9,263,5],[319,8,263,5],[319,17,200,10,"_initialize"],[319,28,200,21,"_initialize"],[319,29,200,21],[320,10,200,21],[320,17,200,21,"_initialize3"],[320,29,200,21],[320,30,200,21,"apply"],[320,35,200,21],[320,42,200,21,"arguments"],[320,51,200,21],[321,8,200,21],[322,8,200,21],[322,15,200,10,"_initialize"],[322,26,200,21],[323,6,200,21],[324,6,264,4],[325,0,265,0],[326,0,266,0],[327,0,267,0],[328,0,268,0],[329,6,264,4],[330,4,264,4],[331,6,264,4,"key"],[331,9,264,4],[332,6,264,4,"value"],[332,11,264,4],[333,8,264,4],[333,12,264,4,"_signInAnonymously"],[333,30,264,4],[333,33,264,4,"_asyncToGenerator"],[333,50,264,4],[333,51,269,4],[333,62,269,28,"credentials"],[333,73,269,39],[333,75,269,41],[334,10,270,8],[334,14,270,12,"_a"],[334,16,270,14],[334,18,270,16,"_b"],[334,20,270,18],[334,22,270,20,"_c"],[334,24,270,22],[335,10,271,8],[335,14,271,12],[336,12,272,12],[336,16,272,18,"res"],[336,19,272,21],[336,28,272,30],[336,29,272,31],[336,30,272,32],[336,32,272,34,"fetch_1"],[336,39,272,41],[336,40,272,42,"_request"],[336,48,272,50],[336,50,272,52],[336,54,272,56],[336,55,272,57,"fetch"],[336,60,272,62],[336,62,272,64],[336,68,272,70],[336,70,272,72],[336,73,272,75],[336,77,272,79],[336,78,272,80,"url"],[336,81,272,83],[336,90,272,92],[336,92,272,94],[337,14,273,16,"headers"],[337,21,273,23],[337,23,273,25],[337,27,273,29],[337,28,273,30,"headers"],[337,35,273,37],[338,14,274,16,"body"],[338,18,274,20],[338,20,274,22],[339,16,275,20,"data"],[339,20,275,24],[339,22,275,26],[339,23,275,27,"_b"],[339,25,275,29],[339,28,275,32],[339,29,275,33,"_a"],[339,31,275,35],[339,34,275,38,"credentials"],[339,45,275,49],[339,50,275,54],[339,54,275,58],[339,58,275,62,"credentials"],[339,69,275,73],[339,74,275,78],[339,79,275,83],[339,80,275,84],[339,83,275,87],[339,88,275,92],[339,89,275,93],[339,92,275,96,"credentials"],[339,103,275,107],[339,104,275,108,"options"],[339,111,275,115],[339,117,275,121],[339,121,275,125],[339,125,275,129,"_a"],[339,127,275,131],[339,132,275,136],[339,137,275,141],[339,138,275,142],[339,141,275,145],[339,146,275,150],[339,147,275,151],[339,150,275,154,"_a"],[339,152,275,156],[339,153,275,157,"data"],[339,157,275,161],[339,163,275,167],[339,167,275,171],[339,171,275,175,"_b"],[339,173,275,177],[339,178,275,182],[339,183,275,187],[339,184,275,188],[339,187,275,191,"_b"],[339,189,275,193],[339,192,275,196],[339,193,275,197],[339,194,275,198],[340,16,276,20,"gotrue_meta_security"],[340,36,276,40],[340,38,276,42],[341,18,276,44,"captcha_token"],[341,31,276,57],[341,33,276,59],[341,34,276,60,"_c"],[341,36,276,62],[341,39,276,65,"credentials"],[341,50,276,76],[341,55,276,81],[341,59,276,85],[341,63,276,89,"credentials"],[341,74,276,100],[341,79,276,105],[341,84,276,110],[341,85,276,111],[341,88,276,114],[341,93,276,119],[341,94,276,120],[341,97,276,123,"credentials"],[341,108,276,134],[341,109,276,135,"options"],[341,116,276,142],[341,122,276,148],[341,126,276,152],[341,130,276,156,"_c"],[341,132,276,158],[341,137,276,163],[341,142,276,168],[341,143,276,169],[341,146,276,172],[341,151,276,177],[341,152,276,178],[341,155,276,181,"_c"],[341,157,276,183],[341,158,276,184,"captchaToken"],[342,16,276,197],[343,14,277,16],[343,15,277,17],[344,14,278,16,"xform"],[344,19,278,21],[344,21,278,23,"fetch_1"],[344,28,278,30],[344,29,278,31,"_sessionResponse"],[345,12,279,12],[345,13,279,13],[345,14,279,14],[346,12,280,12],[346,16,280,20,"data"],[346,20,280,24],[346,23,280,36,"res"],[346,26,280,39],[346,27,280,20,"data"],[346,31,280,24],[347,14,280,26,"error"],[347,19,280,31],[347,22,280,36,"res"],[347,25,280,39],[347,26,280,26,"error"],[347,31,280,31],[348,12,281,12],[348,16,281,16,"error"],[348,21,281,21],[348,25,281,25],[348,26,281,26,"data"],[348,30,281,30],[348,32,281,32],[349,14,282,16],[349,21,282,23],[350,16,282,25,"data"],[350,20,282,29],[350,22,282,31],[351,18,282,33,"user"],[351,22,282,37],[351,24,282,39],[351,28,282,43],[352,18,282,45,"session"],[352,25,282,52],[352,27,282,54],[353,16,282,59],[353,17,282,60],[354,16,282,62,"error"],[354,21,282,67],[354,23,282,69,"error"],[355,14,282,75],[355,15,282,76],[356,12,283,12],[357,12,284,12],[357,16,284,18,"session"],[357,23,284,25],[357,26,284,28,"data"],[357,30,284,32],[357,31,284,33,"session"],[357,38,284,40],[358,12,285,12],[358,16,285,18,"user"],[358,20,285,22],[358,23,285,25,"data"],[358,27,285,29],[358,28,285,30,"user"],[358,32,285,34],[359,12,286,12],[359,16,286,16,"data"],[359,20,286,20],[359,21,286,21,"session"],[359,28,286,28],[359,30,286,30],[360,14,287,16],[360,20,287,22],[360,24,287,26],[360,25,287,27,"_saveSession"],[360,37,287,39],[360,38,287,40,"data"],[360,42,287,44],[360,43,287,45,"session"],[360,50,287,52],[360,51,287,53],[361,14,288,16],[361,20,288,22],[361,24,288,26],[361,25,288,27,"_notifyAllSubscribers"],[361,46,288,48],[361,47,288,49],[361,58,288,60],[361,60,288,62,"session"],[361,67,288,69],[361,68,288,70],[362,12,289,12],[363,12,290,12],[363,19,290,19],[364,14,290,21,"data"],[364,18,290,25],[364,20,290,27],[365,16,290,29,"user"],[365,20,290,33],[366,16,290,35,"session"],[367,14,290,43],[367,15,290,44],[368,14,290,46,"error"],[368,19,290,51],[368,21,290,53],[369,12,290,58],[369,13,290,59],[370,10,291,8],[370,11,291,9],[370,12,292,8],[370,19,292,15,"error"],[370,24,292,20],[370,26,292,22],[371,12,293,12],[371,16,293,16],[371,17,293,17],[371,18,293,18],[371,20,293,20,"errors_1"],[371,28,293,28],[371,29,293,29,"isAuthError"],[371,40,293,40],[371,42,293,42,"error"],[371,47,293,47],[371,48,293,48],[371,50,293,50],[372,14,294,16],[372,21,294,23],[373,16,294,25,"data"],[373,20,294,29],[373,22,294,31],[374,18,294,33,"user"],[374,22,294,37],[374,24,294,39],[374,28,294,43],[375,18,294,45,"session"],[375,25,294,52],[375,27,294,54],[376,16,294,59],[376,17,294,60],[377,16,294,62,"error"],[378,14,294,68],[378,15,294,69],[379,12,295,12],[380,12,296,12],[380,18,296,18,"error"],[380,23,296,23],[381,10,297,8],[382,8,298,4],[382,9,298,5],[383,8,298,5],[383,17,269,10,"signInAnonymously"],[383,34,269,27,"signInAnonymously"],[383,35,269,27,"_x5"],[383,38,269,27],[384,10,269,27],[384,17,269,27,"_signInAnonymously"],[384,35,269,27],[384,36,269,27,"apply"],[384,41,269,27],[384,48,269,27,"arguments"],[384,57,269,27],[385,8,269,27],[386,8,269,27],[386,15,269,10,"signInAnonymously"],[386,32,269,27],[387,6,269,27],[388,6,299,4],[389,0,300,0],[390,0,301,0],[391,0,302,0],[392,0,303,0],[393,0,304,0],[394,0,305,0],[395,0,306,0],[396,0,307,0],[397,0,308,0],[398,6,299,4],[399,4,299,4],[400,6,299,4,"key"],[400,9,299,4],[401,6,299,4,"value"],[401,11,299,4],[402,8,299,4],[402,12,299,4,"_signUp"],[402,19,299,4],[402,22,299,4,"_asyncToGenerator"],[402,39,299,4],[402,40,309,4],[402,51,309,17,"credentials"],[402,62,309,28],[402,64,309,30],[403,10,310,8],[403,14,310,12,"_a"],[403,16,310,14],[403,18,310,16,"_b"],[403,20,310,18],[403,22,310,20,"_c"],[403,24,310,22],[404,10,311,8],[404,14,311,12],[405,12,312,12],[405,16,312,16,"res"],[405,19,312,19],[406,12,313,12],[406,16,313,16],[406,23,313,23],[406,27,313,27,"credentials"],[406,38,313,38],[406,40,313,40],[407,14,314,16],[407,18,314,24,"email"],[407,23,314,29],[407,26,314,53,"credentials"],[407,37,314,64],[407,38,314,24,"email"],[407,43,314,29],[408,16,314,31,"password"],[408,24,314,39],[408,27,314,53,"credentials"],[408,38,314,64],[408,39,314,31,"password"],[408,47,314,39],[409,16,314,41,"options"],[409,23,314,48],[409,26,314,53,"credentials"],[409,37,314,64],[409,38,314,41,"options"],[409,45,314,48],[410,14,315,16],[410,18,315,20,"codeChallenge"],[410,31,315,33],[410,34,315,36],[410,38,315,40],[411,14,316,16],[411,18,316,20,"codeChallengeMethod"],[411,37,316,39],[411,40,316,42],[411,44,316,46],[412,14,317,16],[412,18,317,20],[412,22,317,24],[412,23,317,25,"flowType"],[412,31,317,33],[412,36,317,38],[412,42,317,44],[412,44,317,46],[413,16,318,20],[414,16,318,21],[414,20,318,21,"_yield"],[414,26,318,21],[414,35,319,65],[414,36,319,66],[414,37,319,67],[414,39,319,69,"helpers_1"],[414,48,319,78],[414,49,319,79,"getCodeChallengeAndMethod"],[414,74,319,104],[414,76,319,106],[414,80,319,110],[414,81,319,111,"storage"],[414,88,319,118],[414,90,319,120],[414,94,319,124],[414,95,319,125,"storageKey"],[414,105,319,135],[414,106,319,136],[415,16,319,136],[415,20,319,136,"_yield2"],[415,27,319,136],[415,30,319,136,"_slicedToArray"],[415,44,319,136],[415,45,319,136,"_yield"],[415,51,319,136],[416,16,319,21,"codeChallenge"],[416,29,319,34],[416,32,319,34,"_yield2"],[416,39,319,34],[417,16,319,36,"codeChallengeMethod"],[417,35,319,55],[417,38,319,55,"_yield2"],[417,45,319,55],[418,14,320,16],[419,14,321,16,"res"],[419,17,321,19],[419,26,321,28],[419,27,321,29],[419,28,321,30],[419,30,321,32,"fetch_1"],[419,37,321,39],[419,38,321,40,"_request"],[419,46,321,48],[419,48,321,50],[419,52,321,54],[419,53,321,55,"fetch"],[419,58,321,60],[419,60,321,62],[419,66,321,68],[419,68,321,70],[419,71,321,73],[419,75,321,77],[419,76,321,78,"url"],[419,79,321,81],[419,88,321,90],[419,90,321,92],[420,16,322,20,"headers"],[420,23,322,27],[420,25,322,29],[420,29,322,33],[420,30,322,34,"headers"],[420,37,322,41],[421,16,323,20,"redirectTo"],[421,26,323,30],[421,28,323,32,"options"],[421,35,323,39],[421,40,323,44],[421,44,323,48],[421,48,323,52,"options"],[421,55,323,59],[421,60,323,64],[421,65,323,69],[421,66,323,70],[421,69,323,73],[421,74,323,78],[421,75,323,79],[421,78,323,82,"options"],[421,85,323,89],[421,86,323,90,"emailRedirectTo"],[421,101,323,105],[422,16,324,20,"body"],[422,20,324,24],[422,22,324,26],[423,18,325,24,"email"],[423,23,325,29],[424,18,326,24,"password"],[424,26,326,32],[425,18,327,24,"data"],[425,22,327,28],[425,24,327,30],[425,25,327,31,"_a"],[425,27,327,33],[425,30,327,36,"options"],[425,37,327,43],[425,42,327,48],[425,46,327,52],[425,50,327,56,"options"],[425,57,327,63],[425,62,327,68],[425,67,327,73],[425,68,327,74],[425,71,327,77],[425,76,327,82],[425,77,327,83],[425,80,327,86,"options"],[425,87,327,93],[425,88,327,94,"data"],[425,92,327,98],[425,98,327,104],[425,102,327,108],[425,106,327,112,"_a"],[425,108,327,114],[425,113,327,119],[425,118,327,124],[425,119,327,125],[425,122,327,128,"_a"],[425,124,327,130],[425,127,327,133],[425,128,327,134],[425,129,327,135],[426,18,328,24,"gotrue_meta_security"],[426,38,328,44],[426,40,328,46],[427,20,328,48,"captcha_token"],[427,33,328,61],[427,35,328,63,"options"],[427,42,328,70],[427,47,328,75],[427,51,328,79],[427,55,328,83,"options"],[427,62,328,90],[427,67,328,95],[427,72,328,100],[427,73,328,101],[427,76,328,104],[427,81,328,109],[427,82,328,110],[427,85,328,113,"options"],[427,92,328,120],[427,93,328,121,"captchaToken"],[428,18,328,134],[428,19,328,135],[429,18,329,24,"code_challenge"],[429,32,329,38],[429,34,329,40,"codeChallenge"],[429,47,329,53],[430,18,330,24,"code_challenge_method"],[430,39,330,45],[430,41,330,47,"codeChallengeMethod"],[431,16,331,20],[431,17,331,21],[432,16,332,20,"xform"],[432,21,332,25],[432,23,332,27,"fetch_1"],[432,30,332,34],[432,31,332,35,"_sessionResponse"],[433,14,333,16],[433,15,333,17],[433,16,333,18],[434,12,334,12],[434,13,334,13],[434,19,335,17],[434,23,335,21],[434,30,335,28],[434,34,335,32,"credentials"],[434,45,335,43],[434,47,335,45],[435,14,336,16],[435,18,336,24,"phone"],[435,23,336,29],[435,26,336,53,"credentials"],[435,37,336,64],[435,38,336,24,"phone"],[435,43,336,29],[436,16,336,31,"password"],[436,25,336,39],[436,28,336,53,"credentials"],[436,39,336,64],[436,40,336,31,"password"],[436,48,336,39],[437,16,336,41,"options"],[437,24,336,48],[437,27,336,53,"credentials"],[437,38,336,64],[437,39,336,41,"options"],[437,46,336,48],[438,14,337,16,"res"],[438,17,337,19],[438,26,337,28],[438,27,337,29],[438,28,337,30],[438,30,337,32,"fetch_1"],[438,37,337,39],[438,38,337,40,"_request"],[438,46,337,48],[438,48,337,50],[438,52,337,54],[438,53,337,55,"fetch"],[438,58,337,60],[438,60,337,62],[438,66,337,68],[438,68,337,70],[438,71,337,73],[438,75,337,77],[438,76,337,78,"url"],[438,79,337,81],[438,88,337,90],[438,90,337,92],[439,16,338,20,"headers"],[439,23,338,27],[439,25,338,29],[439,29,338,33],[439,30,338,34,"headers"],[439,37,338,41],[440,16,339,20,"body"],[440,20,339,24],[440,22,339,26],[441,18,340,24,"phone"],[441,23,340,29],[442,18,341,24,"password"],[442,26,341,32],[442,28,341,24,"password"],[442,37,341,32],[443,18,342,24,"data"],[443,22,342,28],[443,24,342,30],[443,25,342,31,"_b"],[443,27,342,33],[443,30,342,36,"options"],[443,38,342,43],[443,43,342,48],[443,47,342,52],[443,51,342,56,"options"],[443,59,342,63],[443,64,342,68],[443,69,342,73],[443,70,342,74],[443,73,342,77],[443,78,342,82],[443,79,342,83],[443,82,342,86,"options"],[443,90,342,93],[443,91,342,94,"data"],[443,95,342,98],[443,101,342,104],[443,105,342,108],[443,109,342,112,"_b"],[443,111,342,114],[443,116,342,119],[443,121,342,124],[443,122,342,125],[443,125,342,128,"_b"],[443,127,342,130],[443,130,342,133],[443,131,342,134],[443,132,342,135],[444,18,343,24,"channel"],[444,25,343,31],[444,27,343,33],[444,28,343,34,"_c"],[444,30,343,36],[444,33,343,39,"options"],[444,41,343,46],[444,46,343,51],[444,50,343,55],[444,54,343,59,"options"],[444,62,343,66],[444,67,343,71],[444,72,343,76],[444,73,343,77],[444,76,343,80],[444,81,343,85],[444,82,343,86],[444,85,343,89,"options"],[444,93,343,96],[444,94,343,97,"channel"],[444,101,343,104],[444,107,343,110],[444,111,343,114],[444,115,343,118,"_c"],[444,117,343,120],[444,122,343,125],[444,127,343,130],[444,128,343,131],[444,131,343,134,"_c"],[444,133,343,136],[444,136,343,139],[444,141,343,144],[445,18,344,24,"gotrue_meta_security"],[445,38,344,44],[445,40,344,46],[446,20,344,48,"captcha_token"],[446,33,344,61],[446,35,344,63,"options"],[446,43,344,70],[446,48,344,75],[446,52,344,79],[446,56,344,83,"options"],[446,64,344,90],[446,69,344,95],[446,74,344,100],[446,75,344,101],[446,78,344,104],[446,83,344,109],[446,84,344,110],[446,87,344,113,"options"],[446,95,344,120],[446,96,344,121,"captchaToken"],[447,18,344,134],[448,16,345,20],[448,17,345,21],[449,16,346,20,"xform"],[449,21,346,25],[449,23,346,27,"fetch_1"],[449,30,346,34],[449,31,346,35,"_sessionResponse"],[450,14,347,16],[450,15,347,17],[450,16,347,18],[451,12,348,12],[451,13,348,13],[451,19,349,17],[452,14,350,16],[452,20,350,22],[452,24,350,26,"errors_1"],[452,32,350,34],[452,33,350,35,"AuthInvalidCredentialsError"],[452,60,350,62],[452,61,350,63],[452,126,350,128],[452,127,350,129],[453,12,351,12],[454,12,352,12],[454,16,352,12,"_res"],[454,20,352,12],[454,23,352,36,"res"],[454,26,352,39],[455,14,352,20,"data"],[455,18,352,24],[455,21,352,24,"_res"],[455,25,352,24],[455,26,352,20,"data"],[455,30,352,24],[456,14,352,26,"error"],[456,19,352,31],[456,22,352,31,"_res"],[456,26,352,31],[456,27,352,26,"error"],[456,32,352,31],[457,12,353,12],[457,16,353,16,"error"],[457,21,353,21],[457,25,353,25],[457,26,353,26,"data"],[457,30,353,30],[457,32,353,32],[458,14,354,16],[458,21,354,23],[459,16,354,25,"data"],[459,20,354,29],[459,22,354,31],[460,18,354,33,"user"],[460,22,354,37],[460,24,354,39],[460,28,354,43],[461,18,354,45,"session"],[461,25,354,52],[461,27,354,54],[462,16,354,59],[462,17,354,60],[463,16,354,62,"error"],[463,21,354,67],[463,23,354,69,"error"],[464,14,354,75],[464,15,354,76],[465,12,355,12],[466,12,356,12],[466,16,356,18,"session"],[466,23,356,25],[466,26,356,28,"data"],[466,30,356,32],[466,31,356,33,"session"],[466,38,356,40],[467,12,357,12],[467,16,357,18,"user"],[467,20,357,22],[467,23,357,25,"data"],[467,27,357,29],[467,28,357,30,"user"],[467,32,357,34],[468,12,358,12],[468,16,358,16,"data"],[468,20,358,20],[468,21,358,21,"session"],[468,28,358,28],[468,30,358,30],[469,14,359,16],[469,20,359,22],[469,24,359,26],[469,25,359,27,"_saveSession"],[469,37,359,39],[469,38,359,40,"data"],[469,42,359,44],[469,43,359,45,"session"],[469,50,359,52],[469,51,359,53],[470,14,360,16],[470,20,360,22],[470,24,360,26],[470,25,360,27,"_notifyAllSubscribers"],[470,46,360,48],[470,47,360,49],[470,58,360,60],[470,60,360,62,"session"],[470,67,360,69],[470,68,360,70],[471,12,361,12],[472,12,362,12],[472,19,362,19],[473,14,362,21,"data"],[473,18,362,25],[473,20,362,27],[474,16,362,29,"user"],[474,20,362,33],[475,16,362,35,"session"],[476,14,362,43],[476,15,362,44],[477,14,362,46,"error"],[477,19,362,51],[477,21,362,53],[478,12,362,58],[478,13,362,59],[479,10,363,8],[479,11,363,9],[479,12,364,8],[479,19,364,15,"error"],[479,24,364,20],[479,26,364,22],[480,12,365,12],[480,16,365,16],[480,17,365,17],[480,18,365,18],[480,20,365,20,"errors_1"],[480,28,365,28],[480,29,365,29,"isAuthError"],[480,40,365,40],[480,42,365,42,"error"],[480,47,365,47],[480,48,365,48],[480,50,365,50],[481,14,366,16],[481,21,366,23],[482,16,366,25,"data"],[482,20,366,29],[482,22,366,31],[483,18,366,33,"user"],[483,22,366,37],[483,24,366,39],[483,28,366,43],[484,18,366,45,"session"],[484,25,366,52],[484,27,366,54],[485,16,366,59],[485,17,366,60],[486,16,366,62,"error"],[487,14,366,68],[487,15,366,69],[488,12,367,12],[489,12,368,12],[489,18,368,18,"error"],[489,23,368,23],[490,10,369,8],[491,8,370,4],[491,9,370,5],[492,8,370,5],[492,17,309,10,"signUp"],[492,23,309,16,"signUp"],[492,24,309,16,"_x6"],[492,27,309,16],[493,10,309,16],[493,17,309,16,"_signUp"],[493,24,309,16],[493,25,309,16,"apply"],[493,30,309,16],[493,37,309,16,"arguments"],[493,46,309,16],[494,8,309,16],[495,8,309,16],[495,15,309,10,"signUp"],[495,21,309,16],[496,6,309,16],[497,6,371,4],[498,0,372,0],[499,0,373,0],[500,0,374,0],[501,0,375,0],[502,0,376,0],[503,0,377,0],[504,0,378,0],[505,6,371,4],[506,4,371,4],[507,6,371,4,"key"],[507,9,371,4],[508,6,371,4,"value"],[508,11,371,4],[509,8,371,4],[509,12,371,4,"_signInWithPassword"],[509,31,371,4],[509,34,371,4,"_asyncToGenerator"],[509,51,371,4],[509,52,379,4],[509,63,379,29,"credentials"],[509,74,379,40],[509,76,379,42],[510,10,380,8],[510,14,380,12],[511,12,381,12],[511,16,381,16,"res"],[511,19,381,19],[512,12,382,12],[512,16,382,16],[512,23,382,23],[512,27,382,27,"credentials"],[512,38,382,38],[512,40,382,40],[513,14,383,16],[513,18,383,24,"email"],[513,23,383,29],[513,26,383,53,"credentials"],[513,37,383,64],[513,38,383,24,"email"],[513,43,383,29],[514,16,383,31,"password"],[514,24,383,39],[514,27,383,53,"credentials"],[514,38,383,64],[514,39,383,31,"password"],[514,47,383,39],[515,16,383,41,"options"],[515,23,383,48],[515,26,383,53,"credentials"],[515,37,383,64],[515,38,383,41,"options"],[515,45,383,48],[516,14,384,16,"res"],[516,17,384,19],[516,26,384,28],[516,27,384,29],[516,28,384,30],[516,30,384,32,"fetch_1"],[516,37,384,39],[516,38,384,40,"_request"],[516,46,384,48],[516,48,384,50],[516,52,384,54],[516,53,384,55,"fetch"],[516,58,384,60],[516,60,384,62],[516,66,384,68],[516,68,384,70],[516,71,384,73],[516,75,384,77],[516,76,384,78,"url"],[516,79,384,81],[516,107,384,109],[516,109,384,111],[517,16,385,20,"headers"],[517,23,385,27],[517,25,385,29],[517,29,385,33],[517,30,385,34,"headers"],[517,37,385,41],[518,16,386,20,"body"],[518,20,386,24],[518,22,386,26],[519,18,387,24,"email"],[519,23,387,29],[520,18,388,24,"password"],[520,26,388,32],[521,18,389,24,"gotrue_meta_security"],[521,38,389,44],[521,40,389,46],[522,20,389,48,"captcha_token"],[522,33,389,61],[522,35,389,63,"options"],[522,42,389,70],[522,47,389,75],[522,51,389,79],[522,55,389,83,"options"],[522,62,389,90],[522,67,389,95],[522,72,389,100],[522,73,389,101],[522,76,389,104],[522,81,389,109],[522,82,389,110],[522,85,389,113,"options"],[522,92,389,120],[522,93,389,121,"captchaToken"],[523,18,389,134],[524,16,390,20],[524,17,390,21],[525,16,391,20,"xform"],[525,21,391,25],[525,23,391,27,"fetch_1"],[525,30,391,34],[525,31,391,35,"_sessionResponsePassword"],[526,14,392,16],[526,15,392,17],[526,16,392,18],[527,12,393,12],[527,13,393,13],[527,19,394,17],[527,23,394,21],[527,30,394,28],[527,34,394,32,"credentials"],[527,45,394,43],[527,47,394,45],[528,14,395,16],[528,18,395,24,"phone"],[528,23,395,29],[528,26,395,53,"credentials"],[528,37,395,64],[528,38,395,24,"phone"],[528,43,395,29],[529,16,395,31,"password"],[529,26,395,39],[529,29,395,53,"credentials"],[529,40,395,64],[529,41,395,31,"password"],[529,49,395,39],[530,16,395,41,"options"],[530,25,395,48],[530,28,395,53,"credentials"],[530,39,395,64],[530,40,395,41,"options"],[530,47,395,48],[531,14,396,16,"res"],[531,17,396,19],[531,26,396,28],[531,27,396,29],[531,28,396,30],[531,30,396,32,"fetch_1"],[531,37,396,39],[531,38,396,40,"_request"],[531,46,396,48],[531,48,396,50],[531,52,396,54],[531,53,396,55,"fetch"],[531,58,396,60],[531,60,396,62],[531,66,396,68],[531,68,396,70],[531,71,396,73],[531,75,396,77],[531,76,396,78,"url"],[531,79,396,81],[531,107,396,109],[531,109,396,111],[532,16,397,20,"headers"],[532,23,397,27],[532,25,397,29],[532,29,397,33],[532,30,397,34,"headers"],[532,37,397,41],[533,16,398,20,"body"],[533,20,398,24],[533,22,398,26],[534,18,399,24,"phone"],[534,23,399,29],[535,18,400,24,"password"],[535,26,400,32],[535,28,400,24,"password"],[535,38,400,32],[536,18,401,24,"gotrue_meta_security"],[536,38,401,44],[536,40,401,46],[537,20,401,48,"captcha_token"],[537,33,401,61],[537,35,401,63,"options"],[537,44,401,70],[537,49,401,75],[537,53,401,79],[537,57,401,83,"options"],[537,66,401,90],[537,71,401,95],[537,76,401,100],[537,77,401,101],[537,80,401,104],[537,85,401,109],[537,86,401,110],[537,89,401,113,"options"],[537,98,401,120],[537,99,401,121,"captchaToken"],[538,18,401,134],[539,16,402,20],[539,17,402,21],[540,16,403,20,"xform"],[540,21,403,25],[540,23,403,27,"fetch_1"],[540,30,403,34],[540,31,403,35,"_sessionResponsePassword"],[541,14,404,16],[541,15,404,17],[541,16,404,18],[542,12,405,12],[542,13,405,13],[542,19,406,17],[543,14,407,16],[543,20,407,22],[543,24,407,26,"errors_1"],[543,32,407,34],[543,33,407,35,"AuthInvalidCredentialsError"],[543,60,407,62],[543,61,407,63],[543,126,407,128],[543,127,407,129],[544,12,408,12],[545,12,409,12],[545,16,409,12,"_res2"],[545,21,409,12],[545,24,409,36,"res"],[545,27,409,39],[546,14,409,20,"data"],[546,18,409,24],[546,21,409,24,"_res2"],[546,26,409,24],[546,27,409,20,"data"],[546,31,409,24],[547,14,409,26,"error"],[547,19,409,31],[547,22,409,31,"_res2"],[547,27,409,31],[547,28,409,26,"error"],[547,33,409,31],[548,12,410,12],[548,16,410,16,"error"],[548,21,410,21],[548,23,410,23],[549,14,411,16],[549,21,411,23],[550,16,411,25,"data"],[550,20,411,29],[550,22,411,31],[551,18,411,33,"user"],[551,22,411,37],[551,24,411,39],[551,28,411,43],[552,18,411,45,"session"],[552,25,411,52],[552,27,411,54],[553,16,411,59],[553,17,411,60],[554,16,411,62,"error"],[555,14,411,68],[555,15,411,69],[556,12,412,12],[556,13,412,13],[556,19,413,17],[556,23,413,21],[556,24,413,22,"data"],[556,28,413,26],[556,32,413,30],[556,33,413,31,"data"],[556,37,413,35],[556,38,413,36,"session"],[556,45,413,43],[556,49,413,47],[556,50,413,48,"data"],[556,54,413,52],[556,55,413,53,"user"],[556,59,413,57],[556,61,413,59],[557,14,414,16],[557,21,414,23],[558,16,414,25,"data"],[558,20,414,29],[558,22,414,31],[559,18,414,33,"user"],[559,22,414,37],[559,24,414,39],[559,28,414,43],[560,18,414,45,"session"],[560,25,414,52],[560,27,414,54],[561,16,414,59],[561,17,414,60],[562,16,414,62,"error"],[562,21,414,67],[562,23,414,69],[562,27,414,73,"errors_1"],[562,35,414,81],[562,36,414,82,"AuthInvalidTokenResponseError"],[562,65,414,111],[562,66,414,112],[563,14,414,114],[563,15,414,115],[564,12,415,12],[565,12,416,12],[565,16,416,16,"data"],[565,20,416,20],[565,21,416,21,"session"],[565,28,416,28],[565,30,416,30],[566,14,417,16],[566,20,417,22],[566,24,417,26],[566,25,417,27,"_saveSession"],[566,37,417,39],[566,38,417,40,"data"],[566,42,417,44],[566,43,417,45,"session"],[566,50,417,52],[566,51,417,53],[567,14,418,16],[567,20,418,22],[567,24,418,26],[567,25,418,27,"_notifyAllSubscribers"],[567,46,418,48],[567,47,418,49],[567,58,418,60],[567,60,418,62,"data"],[567,64,418,66],[567,65,418,67,"session"],[567,72,418,74],[567,73,418,75],[568,12,419,12],[569,12,420,12],[569,19,420,19],[570,14,421,16,"data"],[570,18,421,20],[570,20,421,22,"Object"],[570,26,421,28],[570,27,421,29,"assign"],[570,33,421,35],[570,34,421,36],[571,16,421,38,"user"],[571,20,421,42],[571,22,421,44,"data"],[571,26,421,48],[571,27,421,49,"user"],[571,31,421,53],[572,16,421,55,"session"],[572,23,421,62],[572,25,421,64,"data"],[572,29,421,68],[572,30,421,69,"session"],[573,14,421,77],[573,15,421,78],[573,17,421,81,"data"],[573,21,421,85],[573,22,421,86,"weak_password"],[573,35,421,99],[573,38,421,102],[574,16,421,104,"weakPassword"],[574,28,421,116],[574,30,421,118,"data"],[574,34,421,122],[574,35,421,123,"weak_password"],[575,14,421,137],[575,15,421,138],[575,18,421,141],[575,22,421,146],[575,23,421,147],[576,14,422,16,"error"],[577,12,423,12],[577,13,423,13],[578,10,424,8],[578,11,424,9],[578,12,425,8],[578,19,425,15,"error"],[578,24,425,20],[578,26,425,22],[579,12,426,12],[579,16,426,16],[579,17,426,17],[579,18,426,18],[579,20,426,20,"errors_1"],[579,28,426,28],[579,29,426,29,"isAuthError"],[579,40,426,40],[579,42,426,42,"error"],[579,47,426,47],[579,48,426,48],[579,50,426,50],[580,14,427,16],[580,21,427,23],[581,16,427,25,"data"],[581,20,427,29],[581,22,427,31],[582,18,427,33,"user"],[582,22,427,37],[582,24,427,39],[582,28,427,43],[583,18,427,45,"session"],[583,25,427,52],[583,27,427,54],[584,16,427,59],[584,17,427,60],[585,16,427,62,"error"],[586,14,427,68],[586,15,427,69],[587,12,428,12],[588,12,429,12],[588,18,429,18,"error"],[588,23,429,23],[589,10,430,8],[590,8,431,4],[590,9,431,5],[591,8,431,5],[591,17,379,10,"signInWithPassword"],[591,35,379,28,"signInWithPassword"],[591,36,379,28,"_x7"],[591,39,379,28],[592,10,379,28],[592,17,379,28,"_signInWithPassword"],[592,36,379,28],[592,37,379,28,"apply"],[592,42,379,28],[592,49,379,28,"arguments"],[592,58,379,28],[593,8,379,28],[594,8,379,28],[594,15,379,10,"signInWithPassword"],[594,33,379,28],[595,6,379,28],[596,6,432,4],[597,0,433,0],[598,0,434,0],[599,0,435,0],[600,6,432,4],[601,4,432,4],[602,6,432,4,"key"],[602,9,432,4],[603,6,432,4,"value"],[603,11,432,4],[604,8,432,4],[604,12,432,4,"_signInWithOAuth"],[604,28,432,4],[604,31,432,4,"_asyncToGenerator"],[604,48,432,4],[604,49,436,4],[604,60,436,26,"credentials"],[604,71,436,37],[604,73,436,39],[605,10,437,8],[605,14,437,12,"_a"],[605,16,437,14],[605,18,437,16,"_b"],[605,20,437,18],[605,22,437,20,"_c"],[605,24,437,22],[605,26,437,24,"_d"],[605,28,437,26],[606,10,438,8],[606,23,438,21],[606,27,438,25],[606,28,438,26,"_handleProviderSignIn"],[606,49,438,47],[606,50,438,48,"credentials"],[606,61,438,59],[606,62,438,60,"provider"],[606,70,438,68],[606,72,438,70],[607,12,439,12,"redirectTo"],[607,22,439,22],[607,24,439,24],[607,25,439,25,"_a"],[607,27,439,27],[607,30,439,30,"credentials"],[607,41,439,41],[607,42,439,42,"options"],[607,49,439,49],[607,55,439,55],[607,59,439,59],[607,63,439,63,"_a"],[607,65,439,65],[607,70,439,70],[607,75,439,75],[607,76,439,76],[607,79,439,79],[607,84,439,84],[607,85,439,85],[607,88,439,88,"_a"],[607,90,439,90],[607,91,439,91,"redirectTo"],[607,101,439,101],[608,12,440,12,"scopes"],[608,18,440,18],[608,20,440,20],[608,21,440,21,"_b"],[608,23,440,23],[608,26,440,26,"credentials"],[608,37,440,37],[608,38,440,38,"options"],[608,45,440,45],[608,51,440,51],[608,55,440,55],[608,59,440,59,"_b"],[608,61,440,61],[608,66,440,66],[608,71,440,71],[608,72,440,72],[608,75,440,75],[608,80,440,80],[608,81,440,81],[608,84,440,84,"_b"],[608,86,440,86],[608,87,440,87,"scopes"],[608,93,440,93],[609,12,441,12,"queryParams"],[609,23,441,23],[609,25,441,25],[609,26,441,26,"_c"],[609,28,441,28],[609,31,441,31,"credentials"],[609,42,441,42],[609,43,441,43,"options"],[609,50,441,50],[609,56,441,56],[609,60,441,60],[609,64,441,64,"_c"],[609,66,441,66],[609,71,441,71],[609,76,441,76],[609,77,441,77],[609,80,441,80],[609,85,441,85],[609,86,441,86],[609,89,441,89,"_c"],[609,91,441,91],[609,92,441,92,"queryParams"],[609,103,441,103],[610,12,442,12,"skipBrowserRedirect"],[610,31,442,31],[610,33,442,33],[610,34,442,34,"_d"],[610,36,442,36],[610,39,442,39,"credentials"],[610,50,442,50],[610,51,442,51,"options"],[610,58,442,58],[610,64,442,64],[610,68,442,68],[610,72,442,72,"_d"],[610,74,442,74],[610,79,442,79],[610,84,442,84],[610,85,442,85],[610,88,442,88],[610,93,442,93],[610,94,442,94],[610,97,442,97,"_d"],[610,99,442,99],[610,100,442,100,"skipBrowserRedirect"],[611,10,443,8],[611,11,443,9],[611,12,443,10],[612,8,444,4],[612,9,444,5],[613,8,444,5],[613,17,436,10,"signInWithOAuth"],[613,32,436,25,"signInWithOAuth"],[613,33,436,25,"_x8"],[613,36,436,25],[614,10,436,25],[614,17,436,25,"_signInWithOAuth"],[614,33,436,25],[614,34,436,25,"apply"],[614,39,436,25],[614,46,436,25,"arguments"],[614,55,436,25],[615,8,436,25],[616,8,436,25],[616,15,436,10,"signInWithOAuth"],[616,30,436,25],[617,6,436,25],[618,6,445,4],[619,0,446,0],[620,0,447,0],[621,6,445,4],[622,4,445,4],[623,6,445,4,"key"],[623,9,445,4],[624,6,445,4,"value"],[624,11,445,4],[625,8,445,4],[625,12,445,4,"_exchangeCodeForSession2"],[625,36,445,4],[625,39,445,4,"_asyncToGenerator"],[625,56,445,4],[625,57,448,4],[625,68,448,33,"authCode"],[625,76,448,41],[625,78,448,43],[626,10,448,43],[626,14,448,43,"_this4"],[626,20,448,43],[627,10,449,8],[627,16,449,14],[627,20,449,18],[627,21,449,19,"initializePromise"],[627,38,449,36],[628,10,450,8],[628,17,450,15],[628,21,450,19],[628,22,450,20,"_acquireLock"],[628,34,450,32],[628,35,450,33],[628,36,450,34],[628,37,450,35],[628,52,450,35,"_asyncToGenerator"],[628,69,450,35],[628,70,450,37],[628,83,450,49],[629,12,451,12],[629,19,451,19,"_this4"],[629,25,451,23],[629,26,451,24,"_exchangeCodeForSession"],[629,49,451,47],[629,50,451,48,"authCode"],[629,58,451,56],[629,59,451,57],[630,10,452,8],[630,11,452,9],[630,13,452,10],[631,8,453,4],[631,9,453,5],[632,8,453,5],[632,17,448,10,"exchangeCodeForSession"],[632,39,448,32,"exchangeCodeForSession"],[632,40,448,32,"_x9"],[632,43,448,32],[633,10,448,32],[633,17,448,32,"_exchangeCodeForSession2"],[633,41,448,32],[633,42,448,32,"apply"],[633,47,448,32],[633,54,448,32,"arguments"],[633,63,448,32],[634,8,448,32],[635,8,448,32],[635,15,448,10,"exchangeCodeForSession"],[635,37,448,32],[636,6,448,32],[637,6,454,4],[638,0,455,0],[639,0,456,0],[640,0,457,0],[641,0,458,0],[642,0,459,0],[643,0,460,0],[644,6,454,4],[645,4,454,4],[646,6,454,4,"key"],[646,9,454,4],[647,6,454,4,"value"],[647,11,454,4],[648,8,454,4],[648,12,454,4,"_signInWithWeb"],[648,26,454,4],[648,29,454,4,"_asyncToGenerator"],[648,46,454,4],[648,47,461,4],[648,58,461,25,"credentials"],[648,69,461,36],[648,71,461,38],[649,10,462,8],[649,14,462,16,"chain"],[649,19,462,21],[649,22,462,26,"credentials"],[649,33,462,37],[649,34,462,16,"chain"],[649,39,462,21],[650,10,463,8],[650,18,463,16,"chain"],[650,23,463,21],[651,12,464,12],[651,17,464,17],[651,27,464,27],[652,14,465,16],[652,27,465,29],[652,31,465,33],[652,32,465,34,"signInWithEthereum"],[652,50,465,52],[652,51,465,53,"credentials"],[652,62,465,64],[652,63,465,65],[653,12,466,12],[653,17,466,17],[653,25,466,25],[654,14,467,16],[654,27,467,29],[654,31,467,33],[654,32,467,34,"signInWithSolana"],[654,48,467,50],[654,49,467,51,"credentials"],[654,60,467,62],[654,61,467,63],[655,12,468,12],[656,14,469,16],[656,20,469,22],[656,24,469,26,"Error"],[656,29,469,31],[656,30,469,32],[656,71,469,73,"chain"],[656,76,469,78],[656,79,469,81],[656,80,469,82],[657,10,470,8],[658,8,471,4],[658,9,471,5],[659,8,471,5],[659,17,461,10,"signInWithWeb3"],[659,31,461,24,"signInWithWeb3"],[659,32,461,24,"_x0"],[659,35,461,24],[660,10,461,24],[660,17,461,24,"_signInWithWeb"],[660,31,461,24],[660,32,461,24,"apply"],[660,37,461,24],[660,44,461,24,"arguments"],[660,53,461,24],[661,8,461,24],[662,8,461,24],[662,15,461,10,"signInWithWeb3"],[662,29,461,24],[663,6,461,24],[664,4,461,24],[665,6,461,24,"key"],[665,9,461,24],[666,6,461,24,"value"],[666,11,461,24],[667,8,461,24],[667,12,461,24,"_signInWithEthereum"],[667,31,461,24],[667,34,461,24,"_asyncToGenerator"],[667,51,461,24],[667,52,472,4],[667,63,472,29,"credentials"],[667,74,472,40],[667,76,472,42],[668,10,473,8],[668,14,473,12,"_a"],[668,16,473,14],[668,18,473,16,"_b"],[668,20,473,18],[668,22,473,20,"_c"],[668,24,473,22],[668,26,473,24,"_d"],[668,28,473,26],[668,30,473,28,"_e"],[668,32,473,30],[668,34,473,32,"_f"],[668,36,473,34],[668,38,473,36,"_g"],[668,40,473,38],[668,42,473,40,"_h"],[668,44,473,42],[668,46,473,44,"_j"],[668,48,473,46],[668,50,473,48,"_k"],[668,52,473,50],[668,54,473,52,"_l"],[668,56,473,54],[669,10,474,8],[670,10,475,8],[670,14,475,12,"message"],[670,21,475,19],[671,10,476,8],[671,14,476,12,"signature"],[671,23,476,21],[672,10,477,8],[672,14,477,12],[672,23,477,21],[672,27,477,25,"credentials"],[672,38,477,36],[672,40,477,38],[673,12,478,12,"message"],[673,19,478,19],[673,22,478,22,"credentials"],[673,33,478,33],[673,34,478,34,"message"],[673,41,478,41],[674,12,479,12,"signature"],[674,21,479,21],[674,24,479,24,"credentials"],[674,35,479,35],[674,36,479,36,"signature"],[674,45,479,45],[675,10,480,8],[675,11,480,9],[675,17,481,13],[676,12,482,12],[676,16,482,20,"chain"],[676,21,482,25],[676,24,482,58,"credentials"],[676,35,482,69],[676,36,482,20,"chain"],[676,41,482,25],[677,14,482,27,"wallet"],[677,20,482,33],[677,23,482,58,"credentials"],[677,34,482,69],[677,35,482,27,"wallet"],[677,41,482,33],[678,14,482,35,"statement"],[678,23,482,44],[678,26,482,58,"credentials"],[678,37,482,69],[678,38,482,35,"statement"],[678,47,482,44],[679,14,482,46,"options"],[679,21,482,53],[679,24,482,58,"credentials"],[679,35,482,69],[679,36,482,46,"options"],[679,43,482,53],[680,12,483,12],[680,16,483,16,"resolvedWallet"],[680,30,483,30],[681,12,484,12],[681,16,484,16],[681,17,484,17],[681,18,484,18],[681,19,484,19],[681,21,484,21,"helpers_1"],[681,30,484,30],[681,31,484,31,"isBrowser"],[681,40,484,40],[681,42,484,42],[681,43,484,43],[681,45,484,45],[682,14,485,16],[682,18,485,20],[682,25,485,27,"wallet"],[682,31,485,33],[682,36,485,38],[682,44,485,46],[682,48,485,50],[682,50,485,52,"options"],[682,57,485,59],[682,62,485,64],[682,66,485,68],[682,70,485,72,"options"],[682,77,485,79],[682,82,485,84],[682,87,485,89],[682,88,485,90],[682,91,485,93],[682,96,485,98],[682,97,485,99],[682,100,485,102,"options"],[682,107,485,109],[682,108,485,110,"url"],[682,111,485,113],[682,112,485,114],[682,114,485,116],[683,16,486,20],[683,22,486,26],[683,26,486,30,"Error"],[683,31,486,35],[683,32,486,36],[683,119,486,123],[683,120,486,124],[684,14,487,16],[685,14,488,16,"resolvedWallet"],[685,28,488,30],[685,31,488,33,"wallet"],[685,37,488,39],[686,12,489,12],[686,13,489,13],[686,19,490,17],[686,23,490,21],[686,30,490,28,"wallet"],[686,36,490,34],[686,41,490,39],[686,49,490,47],[686,51,490,49],[687,14,491,16,"resolvedWallet"],[687,28,491,30],[687,31,491,33,"wallet"],[687,37,491,39],[688,12,492,12],[688,13,492,13],[688,19,493,17],[689,14,494,16],[689,18,494,22,"windowAny"],[689,27,494,31],[689,30,494,34,"window"],[689,36,494,40],[690,14,495,16],[690,18,495,20],[690,28,495,30],[690,32,495,34,"windowAny"],[690,41,495,43],[690,45,496,20],[690,52,496,27,"windowAny"],[690,61,496,36],[690,62,496,37,"ethereum"],[690,70,496,45],[690,75,496,50],[690,83,496,58],[690,87,497,20],[690,96,497,29],[690,100,497,33,"windowAny"],[690,109,497,42],[690,110,497,43,"ethereum"],[690,118,497,51],[690,122,498,20],[690,129,498,27,"windowAny"],[690,138,498,36],[690,139,498,37,"ethereum"],[690,147,498,45],[690,148,498,46,"request"],[690,155,498,53],[690,160,498,58],[690,170,498,68],[690,172,498,70],[691,16,499,20,"resolvedWallet"],[691,30,499,34],[691,33,499,37,"windowAny"],[691,42,499,46],[691,43,499,47,"ethereum"],[691,51,499,55],[692,14,500,16],[692,15,500,17],[692,21,501,21],[693,16,502,20],[693,22,502,26],[693,26,502,30,"Error"],[693,31,502,35],[693,32,502,36],[693,349,502,353],[693,350,502,354],[694,14,503,16],[695,12,504,12],[696,12,505,12],[696,16,505,18,"url"],[696,19,505,21],[696,22,505,24],[696,26,505,28,"URL"],[696,29,505,31],[696,30,505,32],[696,31,505,33,"_a"],[696,33,505,35],[696,36,505,38,"options"],[696,43,505,45],[696,48,505,50],[696,52,505,54],[696,56,505,58,"options"],[696,63,505,65],[696,68,505,70],[696,73,505,75],[696,74,505,76],[696,77,505,79],[696,82,505,84],[696,83,505,85],[696,86,505,88,"options"],[696,93,505,95],[696,94,505,96,"url"],[696,97,505,99],[696,103,505,105],[696,107,505,109],[696,111,505,113,"_a"],[696,113,505,115],[696,118,505,120],[696,123,505,125],[696,124,505,126],[696,127,505,129,"_a"],[696,129,505,131],[696,132,505,134,"window"],[696,138,505,140],[696,139,505,141,"location"],[696,147,505,149],[696,148,505,150,"href"],[696,152,505,154],[696,153,505,155],[697,12,506,12],[697,16,506,18,"accounts"],[697,24,506,26],[697,33,506,35,"resolvedWallet"],[697,47,506,49],[697,48,507,17,"request"],[697,55,507,24],[697,56,507,25],[698,14,508,16,"method"],[698,20,508,22],[698,22,508,24],[699,12,509,12],[699,13,509,13],[699,14,509,14],[699,15,510,17,"then"],[699,19,510,21],[699,20,510,23,"accs"],[699,24,510,27],[699,28,510,32,"accs"],[699,32,510,36],[699,33,510,37],[699,34,511,17,"catch"],[699,39,511,22],[699,40,511,23],[699,46,511,29],[700,14,512,16],[700,20,512,22],[700,24,512,26,"Error"],[700,29,512,31],[700,30,512,32],[700,106,512,108],[700,107,512,109],[701,12,513,12],[701,13,513,13],[701,14,513,14],[702,12,514,12],[702,16,514,16],[702,17,514,17,"accounts"],[702,25,514,25],[702,29,514,29,"accounts"],[702,37,514,37],[702,38,514,38,"length"],[702,44,514,44],[702,49,514,49],[702,50,514,50],[702,52,514,52],[703,14,515,16],[703,20,515,22],[703,24,515,26,"Error"],[703,29,515,31],[703,30,515,32],[703,112,515,114],[703,113,515,115],[704,12,516,12],[705,12,517,12],[705,16,517,18,"address"],[705,23,517,25],[705,26,517,28],[705,27,517,29],[705,28,517,30],[705,30,517,32,"ethereum_1"],[705,40,517,42],[705,41,517,43,"getAddress"],[705,51,517,53],[705,53,517,55,"accounts"],[705,61,517,63],[705,62,517,64],[705,63,517,65],[705,64,517,66],[705,65,517,67],[706,12,518,12],[706,16,518,16,"chainId"],[706,23,518,23],[706,26,518,26],[706,27,518,27,"_b"],[706,29,518,29],[706,32,518,32,"options"],[706,39,518,39],[706,44,518,44],[706,48,518,48],[706,52,518,52,"options"],[706,59,518,59],[706,64,518,64],[706,69,518,69],[706,70,518,70],[706,73,518,73],[706,78,518,78],[706,79,518,79],[706,82,518,82,"options"],[706,89,518,89],[706,90,518,90,"signInWithEthereum"],[706,108,518,108],[706,114,518,114],[706,118,518,118],[706,122,518,122,"_b"],[706,124,518,124],[706,129,518,129],[706,134,518,134],[706,135,518,135],[706,138,518,138],[706,143,518,143],[706,144,518,144],[706,147,518,147,"_b"],[706,149,518,149],[706,150,518,150,"chainId"],[706,157,518,157],[707,12,519,12],[707,16,519,16],[707,17,519,17,"chainId"],[707,24,519,24],[707,26,519,26],[708,14,520,16],[708,18,520,22,"chainIdHex"],[708,28,520,32],[708,37,520,41,"resolvedWallet"],[708,51,520,55],[708,52,520,56,"request"],[708,59,520,63],[708,60,520,64],[709,16,521,20,"method"],[709,22,521,26],[709,24,521,28],[710,14,522,16],[710,15,522,17],[710,16,522,18],[711,14,523,16,"chainId"],[711,21,523,23],[711,24,523,26],[711,25,523,27],[711,26,523,28],[711,28,523,30,"ethereum_1"],[711,38,523,40],[711,39,523,41,"fromHex"],[711,46,523,48],[711,48,523,50,"chainIdHex"],[711,58,523,60],[711,59,523,61],[712,12,524,12],[713,12,525,12],[713,16,525,18,"siweMessage"],[713,27,525,29],[713,30,525,32],[714,14,526,16,"domain"],[714,20,526,22],[714,22,526,24,"url"],[714,25,526,27],[714,26,526,28,"host"],[714,30,526,32],[715,14,527,16,"address"],[715,21,527,23],[715,23,527,25,"address"],[715,30,527,32],[716,14,528,16,"statement"],[716,23,528,25],[716,25,528,27,"statement"],[716,34,528,36],[717,14,529,16,"uri"],[717,17,529,19],[717,19,529,21,"url"],[717,22,529,24],[717,23,529,25,"href"],[717,27,529,29],[718,14,530,16,"version"],[718,21,530,23],[718,23,530,25],[718,26,530,28],[719,14,531,16,"chainId"],[719,21,531,23],[719,23,531,25,"chainId"],[719,30,531,32],[720,14,532,16,"nonce"],[720,19,532,21],[720,21,532,23],[720,22,532,24,"_c"],[720,24,532,26],[720,27,532,29,"options"],[720,34,532,36],[720,39,532,41],[720,43,532,45],[720,47,532,49,"options"],[720,54,532,56],[720,59,532,61],[720,64,532,66],[720,65,532,67],[720,68,532,70],[720,73,532,75],[720,74,532,76],[720,77,532,79,"options"],[720,84,532,86],[720,85,532,87,"signInWithEthereum"],[720,103,532,105],[720,109,532,111],[720,113,532,115],[720,117,532,119,"_c"],[720,119,532,121],[720,124,532,126],[720,129,532,131],[720,130,532,132],[720,133,532,135],[720,138,532,140],[720,139,532,141],[720,142,532,144,"_c"],[720,144,532,146],[720,145,532,147,"nonce"],[720,150,532,152],[721,14,533,16,"issuedAt"],[721,22,533,24],[721,24,533,26],[721,25,533,27,"_e"],[721,27,533,29],[721,30,533,32],[721,31,533,33,"_d"],[721,33,533,35],[721,36,533,38,"options"],[721,43,533,45],[721,48,533,50],[721,52,533,54],[721,56,533,58,"options"],[721,63,533,65],[721,68,533,70],[721,73,533,75],[721,74,533,76],[721,77,533,79],[721,82,533,84],[721,83,533,85],[721,86,533,88,"options"],[721,93,533,95],[721,94,533,96,"signInWithEthereum"],[721,112,533,114],[721,118,533,120],[721,122,533,124],[721,126,533,128,"_d"],[721,128,533,130],[721,133,533,135],[721,138,533,140],[721,139,533,141],[721,142,533,144],[721,147,533,149],[721,148,533,150],[721,151,533,153,"_d"],[721,153,533,155],[721,154,533,156,"issuedAt"],[721,162,533,164],[721,168,533,170],[721,172,533,174],[721,176,533,178,"_e"],[721,178,533,180],[721,183,533,185],[721,188,533,190],[721,189,533,191],[721,192,533,194,"_e"],[721,194,533,196],[721,197,533,199],[721,201,533,203,"Date"],[721,205,533,207],[721,206,533,208],[721,207,533,209],[722,14,534,16,"expirationTime"],[722,28,534,30],[722,30,534,32],[722,31,534,33,"_f"],[722,33,534,35],[722,36,534,38,"options"],[722,43,534,45],[722,48,534,50],[722,52,534,54],[722,56,534,58,"options"],[722,63,534,65],[722,68,534,70],[722,73,534,75],[722,74,534,76],[722,77,534,79],[722,82,534,84],[722,83,534,85],[722,86,534,88,"options"],[722,93,534,95],[722,94,534,96,"signInWithEthereum"],[722,112,534,114],[722,118,534,120],[722,122,534,124],[722,126,534,128,"_f"],[722,128,534,130],[722,133,534,135],[722,138,534,140],[722,139,534,141],[722,142,534,144],[722,147,534,149],[722,148,534,150],[722,151,534,153,"_f"],[722,153,534,155],[722,154,534,156,"expirationTime"],[722,168,534,170],[723,14,535,16,"notBefore"],[723,23,535,25],[723,25,535,27],[723,26,535,28,"_g"],[723,28,535,30],[723,31,535,33,"options"],[723,38,535,40],[723,43,535,45],[723,47,535,49],[723,51,535,53,"options"],[723,58,535,60],[723,63,535,65],[723,68,535,70],[723,69,535,71],[723,72,535,74],[723,77,535,79],[723,78,535,80],[723,81,535,83,"options"],[723,88,535,90],[723,89,535,91,"signInWithEthereum"],[723,107,535,109],[723,113,535,115],[723,117,535,119],[723,121,535,123,"_g"],[723,123,535,125],[723,128,535,130],[723,133,535,135],[723,134,535,136],[723,137,535,139],[723,142,535,144],[723,143,535,145],[723,146,535,148,"_g"],[723,148,535,150],[723,149,535,151,"notBefore"],[723,158,535,160],[724,14,536,16,"requestId"],[724,23,536,25],[724,25,536,27],[724,26,536,28,"_h"],[724,28,536,30],[724,31,536,33,"options"],[724,38,536,40],[724,43,536,45],[724,47,536,49],[724,51,536,53,"options"],[724,58,536,60],[724,63,536,65],[724,68,536,70],[724,69,536,71],[724,72,536,74],[724,77,536,79],[724,78,536,80],[724,81,536,83,"options"],[724,88,536,90],[724,89,536,91,"signInWithEthereum"],[724,107,536,109],[724,113,536,115],[724,117,536,119],[724,121,536,123,"_h"],[724,123,536,125],[724,128,536,130],[724,133,536,135],[724,134,536,136],[724,137,536,139],[724,142,536,144],[724,143,536,145],[724,146,536,148,"_h"],[724,148,536,150],[724,149,536,151,"requestId"],[724,158,536,160],[725,14,537,16,"resources"],[725,23,537,25],[725,25,537,27],[725,26,537,28,"_j"],[725,28,537,30],[725,31,537,33,"options"],[725,38,537,40],[725,43,537,45],[725,47,537,49],[725,51,537,53,"options"],[725,58,537,60],[725,63,537,65],[725,68,537,70],[725,69,537,71],[725,72,537,74],[725,77,537,79],[725,78,537,80],[725,81,537,83,"options"],[725,88,537,90],[725,89,537,91,"signInWithEthereum"],[725,107,537,109],[725,113,537,115],[725,117,537,119],[725,121,537,123,"_j"],[725,123,537,125],[725,128,537,130],[725,133,537,135],[725,134,537,136],[725,137,537,139],[725,142,537,144],[725,143,537,145],[725,146,537,148,"_j"],[725,148,537,150],[725,149,537,151,"resources"],[726,12,538,12],[726,13,538,13],[727,12,539,12,"message"],[727,19,539,19],[727,22,539,22],[727,23,539,23],[727,24,539,24],[727,26,539,26,"ethereum_1"],[727,36,539,36],[727,37,539,37,"createSiweMessage"],[727,54,539,54],[727,56,539,56,"siweMessage"],[727,67,539,67],[727,68,539,68],[728,12,540,12],[729,12,541,12,"signature"],[729,21,541,21],[729,30,541,31,"resolvedWallet"],[729,44,541,45],[729,45,541,46,"request"],[729,52,541,53],[729,53,541,54],[730,14,542,16,"method"],[730,20,542,22],[730,22,542,24],[730,37,542,39],[731,14,543,16,"params"],[731,20,543,22],[731,22,543,24],[731,23,543,25],[731,24,543,26],[731,25,543,27],[731,27,543,29,"ethereum_1"],[731,37,543,39],[731,38,543,40,"toHex"],[731,43,543,45],[731,45,543,47,"message"],[731,52,543,54],[731,53,543,55],[731,55,543,57,"address"],[731,62,543,64],[732,12,544,12],[732,13,544,13],[732,14,544,15],[733,10,545,8],[734,10,546,8],[734,14,546,12],[735,12,547,12],[735,16,547,12,"_yield3"],[735,23,547,12],[735,32,547,42],[735,33,547,43],[735,34,547,44],[735,36,547,46,"fetch_1"],[735,43,547,53],[735,44,547,54,"_request"],[735,52,547,62],[735,54,547,64],[735,58,547,68],[735,59,547,69,"fetch"],[735,64,547,74],[735,66,547,76],[735,72,547,82],[735,74,547,84],[735,77,547,87],[735,81,547,91],[735,82,547,92,"url"],[735,85,547,95],[735,109,547,119],[735,111,547,121],[736,16,548,16,"headers"],[736,23,548,23],[736,25,548,25],[736,29,548,29],[736,30,548,30,"headers"],[736,37,548,37],[737,16,549,16,"body"],[737,20,549,20],[737,22,549,22,"Object"],[737,28,549,28],[737,29,549,29,"assign"],[737,35,549,35],[737,36,549,36],[738,18,549,38,"chain"],[738,23,549,43],[738,25,549,45],[738,35,549,55],[739,18,549,57,"message"],[739,25,549,64],[740,18,550,20,"signature"],[741,16,550,30],[741,17,550,31],[741,19,550,34],[741,20,550,35],[741,21,550,36,"_k"],[741,23,550,38],[741,26,550,41,"credentials"],[741,37,550,52],[741,38,550,53,"options"],[741,45,550,60],[741,51,550,66],[741,55,550,70],[741,59,550,74,"_k"],[741,61,550,76],[741,66,550,81],[741,71,550,86],[741,72,550,87],[741,75,550,90],[741,80,550,95],[741,81,550,96],[741,84,550,99,"_k"],[741,86,550,101],[741,87,550,102,"captchaToken"],[741,99,550,114],[741,103,551,22],[742,18,551,24,"gotrue_meta_security"],[742,38,551,44],[742,40,551,46],[743,20,551,48,"captcha_token"],[743,33,551,61],[743,35,551,63],[743,36,551,64,"_l"],[743,38,551,66],[743,41,551,69,"credentials"],[743,52,551,80],[743,53,551,81,"options"],[743,60,551,88],[743,66,551,94],[743,70,551,98],[743,74,551,102,"_l"],[743,76,551,104],[743,81,551,109],[743,86,551,114],[743,87,551,115],[743,90,551,118],[743,95,551,123],[743,96,551,124],[743,99,551,127,"_l"],[743,101,551,129],[743,102,551,130,"captchaToken"],[744,18,551,143],[745,16,551,145],[745,17,551,146],[745,20,552,22],[745,24,552,27],[745,25,552,28],[746,16,553,16,"xform"],[746,21,553,21],[746,23,553,23,"fetch_1"],[746,30,553,30],[746,31,553,31,"_sessionResponse"],[747,14,554,12],[747,15,554,13],[747,16,554,14],[748,14,547,20,"data"],[748,18,547,24],[748,21,547,24,"_yield3"],[748,28,547,24],[748,29,547,20,"data"],[748,33,547,24],[749,14,547,26,"error"],[749,19,547,31],[749,22,547,31,"_yield3"],[749,29,547,31],[749,30,547,26,"error"],[749,35,547,31],[750,12,555,12],[750,16,555,16,"error"],[750,21,555,21],[750,23,555,23],[751,14,556,16],[751,20,556,22,"error"],[751,25,556,27],[752,12,557,12],[753,12,558,12],[753,16,558,16],[753,17,558,17,"data"],[753,21,558,21],[753,25,558,25],[753,26,558,26,"data"],[753,30,558,30],[753,31,558,31,"session"],[753,38,558,38],[753,42,558,42],[753,43,558,43,"data"],[753,47,558,47],[753,48,558,48,"user"],[753,52,558,52],[753,54,558,54],[754,14,559,16],[754,21,559,23],[755,16,560,20,"data"],[755,20,560,24],[755,22,560,26],[756,18,560,28,"user"],[756,22,560,32],[756,24,560,34],[756,28,560,38],[757,18,560,40,"session"],[757,25,560,47],[757,27,560,49],[758,16,560,54],[758,17,560,55],[759,16,561,20,"error"],[759,21,561,25],[759,23,561,27],[759,27,561,31,"errors_1"],[759,35,561,39],[759,36,561,40,"AuthInvalidTokenResponseError"],[759,65,561,69],[759,66,561,70],[760,14,562,16],[760,15,562,17],[761,12,563,12],[762,12,564,12],[762,16,564,16,"data"],[762,20,564,20],[762,21,564,21,"session"],[762,28,564,28],[762,30,564,30],[763,14,565,16],[763,20,565,22],[763,24,565,26],[763,25,565,27,"_saveSession"],[763,37,565,39],[763,38,565,40,"data"],[763,42,565,44],[763,43,565,45,"session"],[763,50,565,52],[763,51,565,53],[764,14,566,16],[764,20,566,22],[764,24,566,26],[764,25,566,27,"_notifyAllSubscribers"],[764,46,566,48],[764,47,566,49],[764,58,566,60],[764,60,566,62,"data"],[764,64,566,66],[764,65,566,67,"session"],[764,72,566,74],[764,73,566,75],[765,12,567,12],[766,12,568,12],[766,19,568,19],[767,14,568,21,"data"],[767,18,568,25],[767,20,568,27,"Object"],[767,26,568,33],[767,27,568,34,"assign"],[767,33,568,40],[767,34,568,41],[767,35,568,42],[767,36,568,43],[767,38,568,45,"data"],[767,42,568,49],[767,43,568,50],[768,14,568,52,"error"],[769,12,568,58],[769,13,568,59],[770,10,569,8],[770,11,569,9],[770,12,570,8],[770,19,570,15,"error"],[770,24,570,20],[770,26,570,22],[771,12,571,12],[771,16,571,16],[771,17,571,17],[771,18,571,18],[771,20,571,20,"errors_1"],[771,28,571,28],[771,29,571,29,"isAuthError"],[771,40,571,40],[771,42,571,42,"error"],[771,47,571,47],[771,48,571,48],[771,50,571,50],[772,14,572,16],[772,21,572,23],[773,16,572,25,"data"],[773,20,572,29],[773,22,572,31],[774,18,572,33,"user"],[774,22,572,37],[774,24,572,39],[774,28,572,43],[775,18,572,45,"session"],[775,25,572,52],[775,27,572,54],[776,16,572,59],[776,17,572,60],[777,16,572,62,"error"],[778,14,572,68],[778,15,572,69],[779,12,573,12],[780,12,574,12],[780,18,574,18,"error"],[780,23,574,23],[781,10,575,8],[782,8,576,4],[782,9,576,5],[783,8,576,5],[783,17,472,10,"signInWithEthereum"],[783,35,472,28,"signInWithEthereum"],[783,36,472,28,"_x1"],[783,39,472,28],[784,10,472,28],[784,17,472,28,"_signInWithEthereum"],[784,36,472,28],[784,37,472,28,"apply"],[784,42,472,28],[784,49,472,28,"arguments"],[784,58,472,28],[785,8,472,28],[786,8,472,28],[786,15,472,10,"signInWithEthereum"],[786,33,472,28],[787,6,472,28],[788,4,472,28],[789,6,472,28,"key"],[789,9,472,28],[790,6,472,28,"value"],[790,11,472,28],[791,8,472,28],[791,12,472,28,"_signInWithSolana"],[791,29,472,28],[791,32,472,28,"_asyncToGenerator"],[791,49,472,28],[791,50,577,4],[791,61,577,27,"credentials"],[791,72,577,38],[791,74,577,40],[792,10,578,8],[792,14,578,12,"_a"],[792,16,578,14],[792,18,578,16,"_b"],[792,20,578,18],[792,22,578,20,"_c"],[792,24,578,22],[792,26,578,24,"_d"],[792,28,578,26],[792,30,578,28,"_e"],[792,32,578,30],[792,34,578,32,"_f"],[792,36,578,34],[792,38,578,36,"_g"],[792,40,578,38],[792,42,578,40,"_h"],[792,44,578,42],[792,46,578,44,"_j"],[792,48,578,46],[792,50,578,48,"_k"],[792,52,578,50],[792,54,578,52,"_l"],[792,56,578,54],[792,58,578,56,"_m"],[792,60,578,58],[793,10,579,8],[793,14,579,12,"message"],[793,21,579,19],[794,10,580,8],[794,14,580,12,"signature"],[794,23,580,21],[795,10,581,8],[795,14,581,12],[795,23,581,21],[795,27,581,25,"credentials"],[795,38,581,36],[795,40,581,38],[796,12,582,12,"message"],[796,19,582,19],[796,22,582,22,"credentials"],[796,33,582,33],[796,34,582,34,"message"],[796,41,582,41],[797,12,583,12,"signature"],[797,21,583,21],[797,24,583,24,"credentials"],[797,35,583,35],[797,36,583,36,"signature"],[797,45,583,45],[798,10,584,8],[798,11,584,9],[798,17,585,13],[799,12,586,12],[799,16,586,20,"chain"],[799,21,586,25],[799,24,586,58,"credentials"],[799,35,586,69],[799,36,586,20,"chain"],[799,41,586,25],[800,14,586,27,"wallet"],[800,20,586,33],[800,23,586,58,"credentials"],[800,34,586,69],[800,35,586,27,"wallet"],[800,41,586,33],[801,14,586,35,"statement"],[801,23,586,44],[801,26,586,58,"credentials"],[801,37,586,69],[801,38,586,35,"statement"],[801,47,586,44],[802,14,586,46,"options"],[802,21,586,53],[802,24,586,58,"credentials"],[802,35,586,69],[802,36,586,46,"options"],[802,43,586,53],[803,12,587,12],[803,16,587,16,"resolvedWallet"],[803,30,587,30],[804,12,588,12],[804,16,588,16],[804,17,588,17],[804,18,588,18],[804,19,588,19],[804,21,588,21,"helpers_1"],[804,30,588,30],[804,31,588,31,"isBrowser"],[804,40,588,40],[804,42,588,42],[804,43,588,43],[804,45,588,45],[805,14,589,16],[805,18,589,20],[805,25,589,27,"wallet"],[805,31,589,33],[805,36,589,38],[805,44,589,46],[805,48,589,50],[805,50,589,52,"options"],[805,57,589,59],[805,62,589,64],[805,66,589,68],[805,70,589,72,"options"],[805,77,589,79],[805,82,589,84],[805,87,589,89],[805,88,589,90],[805,91,589,93],[805,96,589,98],[805,97,589,99],[805,100,589,102,"options"],[805,107,589,109],[805,108,589,110,"url"],[805,111,589,113],[805,112,589,114],[805,114,589,116],[806,16,590,20],[806,22,590,26],[806,26,590,30,"Error"],[806,31,590,35],[806,32,590,36],[806,119,590,123],[806,120,590,124],[807,14,591,16],[808,14,592,16,"resolvedWallet"],[808,28,592,30],[808,31,592,33,"wallet"],[808,37,592,39],[809,12,593,12],[809,13,593,13],[809,19,594,17],[809,23,594,21],[809,30,594,28,"wallet"],[809,36,594,34],[809,41,594,39],[809,49,594,47],[809,51,594,49],[810,14,595,16,"resolvedWallet"],[810,28,595,30],[810,31,595,33,"wallet"],[810,37,595,39],[811,12,596,12],[811,13,596,13],[811,19,597,17],[812,14,598,16],[812,18,598,22,"windowAny"],[812,27,598,31],[812,30,598,34,"window"],[812,36,598,40],[813,14,599,16],[813,18,599,20],[813,26,599,28],[813,30,599,32,"windowAny"],[813,39,599,41],[813,43,600,20],[813,50,600,27,"windowAny"],[813,59,600,36],[813,60,600,37,"solana"],[813,66,600,43],[813,71,600,48],[813,79,600,56],[813,84,601,22],[813,92,601,30],[813,96,601,34,"windowAny"],[813,105,601,43],[813,106,601,44,"solana"],[813,112,601,50],[813,116,601,54],[813,123,601,61,"windowAny"],[813,132,601,70],[813,133,601,71,"solana"],[813,139,601,77],[813,140,601,78,"signIn"],[813,146,601,84],[813,151,601,89],[813,161,601,99],[813,165,602,25],[813,178,602,38],[813,182,602,42,"windowAny"],[813,191,602,51],[813,192,602,52,"solana"],[813,198,602,58],[813,202,603,28],[813,209,603,35,"windowAny"],[813,218,603,44],[813,219,603,45,"solana"],[813,225,603,51],[813,226,603,52,"signMessage"],[813,237,603,63],[813,242,603,68],[813,252,603,79],[813,253,603,80],[813,255,603,82],[814,16,604,20,"resolvedWallet"],[814,30,604,34],[814,33,604,37,"windowAny"],[814,42,604,46],[814,43,604,47,"solana"],[814,49,604,53],[815,14,605,16],[815,15,605,17],[815,21,606,21],[816,16,607,20],[816,22,607,26],[816,26,607,30,"Error"],[816,31,607,35],[816,32,607,36],[816,343,607,347],[816,344,607,348],[817,14,608,16],[818,12,609,12],[819,12,610,12],[819,16,610,18,"url"],[819,19,610,21],[819,22,610,24],[819,26,610,28,"URL"],[819,29,610,31],[819,30,610,32],[819,31,610,33,"_a"],[819,33,610,35],[819,36,610,38,"options"],[819,43,610,45],[819,48,610,50],[819,52,610,54],[819,56,610,58,"options"],[819,63,610,65],[819,68,610,70],[819,73,610,75],[819,74,610,76],[819,77,610,79],[819,82,610,84],[819,83,610,85],[819,86,610,88,"options"],[819,93,610,95],[819,94,610,96,"url"],[819,97,610,99],[819,103,610,105],[819,107,610,109],[819,111,610,113,"_a"],[819,113,610,115],[819,118,610,120],[819,123,610,125],[819,124,610,126],[819,127,610,129,"_a"],[819,129,610,131],[819,132,610,134,"window"],[819,138,610,140],[819,139,610,141,"location"],[819,147,610,149],[819,148,610,150,"href"],[819,152,610,154],[819,153,610,155],[820,12,611,12],[820,16,611,16],[820,24,611,24],[820,28,611,28,"resolvedWallet"],[820,42,611,42],[820,46,611,46,"resolvedWallet"],[820,60,611,60],[820,61,611,61,"signIn"],[820,67,611,67],[820,69,611,69],[821,14,612,16],[821,18,612,22,"output"],[821,24,612,28],[821,33,612,37,"resolvedWallet"],[821,47,612,51],[821,48,612,52,"signIn"],[821,54,612,58],[821,55,612,59,"Object"],[821,61,612,65],[821,62,612,66,"assign"],[821,68,612,72],[821,69,612,73,"Object"],[821,75,612,79],[821,76,612,80,"assign"],[821,82,612,86],[821,83,612,87,"Object"],[821,89,612,93],[821,90,612,94,"assign"],[821,96,612,100],[821,97,612,101],[822,16,612,103,"issuedAt"],[822,24,612,111],[822,26,612,113],[822,30,612,117,"Date"],[822,34,612,121],[822,35,612,122],[822,36,612,123],[822,37,612,124,"toISOString"],[822,48,612,135],[822,49,612,136],[823,14,612,138],[823,15,612,139],[823,17,612,141,"options"],[823,24,612,148],[823,29,612,153],[823,33,612,157],[823,37,612,161,"options"],[823,44,612,168],[823,49,612,173],[823,54,612,178],[823,55,612,179],[823,58,612,182],[823,63,612,187],[823,64,612,188],[823,67,612,191,"options"],[823,74,612,198],[823,75,612,199,"signInWithSolana"],[823,91,612,215],[823,92,612,216],[823,94,612,218],[824,16,613,20],[825,16,614,20,"version"],[825,23,614,27],[825,25,614,29],[825,28,614,32],[826,16,614,34,"domain"],[826,22,614,40],[826,24,614,42,"url"],[826,27,614,45],[826,28,614,46,"host"],[826,32,614,50],[827,16,614,52,"uri"],[827,19,614,55],[827,21,614,57,"url"],[827,24,614,60],[827,25,614,61,"href"],[828,14,614,66],[828,15,614,67],[828,16,614,68],[828,18,614,71,"statement"],[828,27,614,80],[828,30,614,83],[829,16,614,85,"statement"],[830,14,614,95],[830,15,614,96],[830,18,614,99],[830,22,614,104],[830,23,614,105],[830,24,614,106],[831,14,615,16],[831,18,615,20,"outputToProcess"],[831,33,615,35],[832,14,616,16],[832,18,616,20,"Array"],[832,23,616,25],[832,24,616,26,"isArray"],[832,31,616,33],[832,32,616,34,"output"],[832,38,616,40],[832,39,616,41],[832,43,616,45,"output"],[832,49,616,51],[832,50,616,52],[832,51,616,53],[832,52,616,54],[832,56,616,58],[832,63,616,65,"output"],[832,69,616,71],[832,70,616,72],[832,71,616,73],[832,72,616,74],[832,77,616,79],[832,85,616,87],[832,87,616,89],[833,16,617,20,"outputToProcess"],[833,31,617,35],[833,34,617,38,"output"],[833,40,617,44],[833,41,617,45],[833,42,617,46],[833,43,617,47],[834,14,618,16],[834,15,618,17],[834,21,619,21],[834,25,619,25,"output"],[834,31,619,31],[834,35,620,20],[834,42,620,27,"output"],[834,48,620,33],[834,53,620,38],[834,61,620,46],[834,65,621,20],[834,80,621,35],[834,84,621,39,"output"],[834,90,621,45],[834,94,622,20],[834,105,622,31],[834,109,622,35,"output"],[834,115,622,41],[834,117,622,43],[835,16,623,20,"outputToProcess"],[835,31,623,35],[835,34,623,38,"output"],[835,40,623,44],[836,14,624,16],[836,15,624,17],[836,21,625,21],[837,16,626,20],[837,22,626,26],[837,26,626,30,"Error"],[837,31,626,35],[837,32,626,36],[837,103,626,107],[837,104,626,108],[838,14,627,16],[839,14,628,16],[839,18,628,20],[839,33,628,35],[839,37,628,39,"outputToProcess"],[839,52,628,54],[839,56,629,20],[839,67,629,31],[839,71,629,35,"outputToProcess"],[839,86,629,50],[839,91,630,21],[839,98,630,28,"outputToProcess"],[839,113,630,43],[839,114,630,44,"signedMessage"],[839,127,630,57],[839,132,630,62],[839,140,630,70],[839,144,631,24,"outputToProcess"],[839,159,631,39],[839,160,631,40,"signedMessage"],[839,173,631,53],[839,185,631,65,"Uint8Array"],[839,195,631,75],[839,196,631,76],[839,200,632,20,"outputToProcess"],[839,215,632,35],[839,216,632,36,"signature"],[839,225,632,45],[839,237,632,57,"Uint8Array"],[839,247,632,67],[839,249,632,69],[840,16,633,20,"message"],[840,23,633,27],[840,26,634,24],[840,33,634,31,"outputToProcess"],[840,48,634,46],[840,49,634,47,"signedMessage"],[840,62,634,60],[840,67,634,65],[840,75,634,73],[840,78,635,30,"outputToProcess"],[840,93,635,45],[840,94,635,46,"signedMessage"],[840,107,635,59],[840,110,636,30],[840,114,636,34,"TextDecoder"],[840,125,636,45],[840,126,636,46],[840,127,636,47],[840,128,636,48,"decode"],[840,134,636,54],[840,135,636,55,"outputToProcess"],[840,150,636,70],[840,151,636,71,"signedMessage"],[840,164,636,84],[840,165,636,85],[841,16,637,20,"signature"],[841,25,637,29],[841,28,637,32,"outputToProcess"],[841,43,637,47],[841,44,637,48,"signature"],[841,53,637,57],[842,14,638,16],[842,15,638,17],[842,21,639,21],[843,16,640,20],[843,22,640,26],[843,26,640,30,"Error"],[843,31,640,35],[843,32,640,36],[843,138,640,142],[843,139,640,143],[844,14,641,16],[845,12,642,12],[845,13,642,13],[845,19,643,17],[846,14,644,16],[846,18,644,20],[846,20,644,22],[846,33,644,35],[846,37,644,39,"resolvedWallet"],[846,51,644,53],[846,52,644,54],[846,56,645,20],[846,63,645,27,"resolvedWallet"],[846,77,645,41],[846,78,645,42,"signMessage"],[846,89,645,53],[846,94,645,58],[846,104,645,68],[846,108,646,20],[846,110,646,22],[846,121,646,33],[846,125,646,37,"resolvedWallet"],[846,139,646,51],[846,140,646,52],[846,144,647,20],[846,151,647,27,"resolvedWallet"],[846,165,647,41],[846,170,647,46],[846,178,647,54],[846,182,648,20],[846,183,648,21,"resolvedWallet"],[846,197,648,35],[846,198,648,36,"publicKey"],[846,207,648,45],[846,211,649,20],[846,213,649,22],[846,223,649,32],[846,227,649,36,"resolvedWallet"],[846,241,649,50],[846,242,649,51,"publicKey"],[846,251,649,60],[846,252,649,61],[846,256,650,20],[846,263,650,27,"resolvedWallet"],[846,277,650,41],[846,278,650,42,"publicKey"],[846,287,650,51],[846,288,650,52,"toBase58"],[846,296,650,60],[846,301,650,65],[846,311,650,75],[846,313,650,77],[847,16,651,20],[847,22,651,26],[847,26,651,30,"Error"],[847,31,651,35],[847,32,651,36],[847,129,651,133],[847,130,651,134],[848,14,652,16],[849,14,653,16,"message"],[849,21,653,23],[849,24,653,26],[849,25,654,20],[849,28,654,23,"url"],[849,31,654,26],[849,32,654,27,"host"],[849,36,654,31],[849,85,654,80],[849,87,655,20,"resolvedWallet"],[849,101,655,34],[849,102,655,35,"publicKey"],[849,111,655,44],[849,112,655,45,"toBase58"],[849,120,655,53],[849,121,655,54],[849,122,655,55],[849,124,656,20],[849,128,656,24,"statement"],[849,137,656,33],[849,140,656,36],[849,141,656,37],[849,143,656,39],[849,145,656,41,"statement"],[849,154,656,50],[849,156,656,52],[849,158,656,54],[849,159,656,55],[849,162,656,58],[849,163,656,59],[849,165,656,61],[849,166,656,62],[849,167,656,63],[849,169,657,20],[849,181,657,32],[849,183,658,20],[849,191,658,28,"url"],[849,194,658,31],[849,195,658,32,"href"],[849,199,658,36],[849,201,658,38],[849,203,659,20],[849,217,659,34],[849,218,659,35,"_c"],[849,220,659,37],[849,223,659,40],[849,224,659,41,"_b"],[849,226,659,43],[849,229,659,46,"options"],[849,236,659,53],[849,241,659,58],[849,245,659,62],[849,249,659,66,"options"],[849,256,659,73],[849,261,659,78],[849,266,659,83],[849,267,659,84],[849,270,659,87],[849,275,659,92],[849,276,659,93],[849,279,659,96,"options"],[849,286,659,103],[849,287,659,104,"signInWithSolana"],[849,303,659,120],[849,309,659,126],[849,313,659,130],[849,317,659,134,"_b"],[849,319,659,136],[849,324,659,141],[849,329,659,146],[849,330,659,147],[849,333,659,150],[849,338,659,155],[849,339,659,156],[849,342,659,159,"_b"],[849,344,659,161],[849,345,659,162,"issuedAt"],[849,353,659,170],[849,359,659,176],[849,363,659,180],[849,367,659,184,"_c"],[849,369,659,186],[849,374,659,191],[849,379,659,196],[849,380,659,197],[849,383,659,200,"_c"],[849,385,659,202],[849,388,659,205],[849,392,659,209,"Date"],[849,396,659,213],[849,397,659,214],[849,398,659,215],[849,399,659,216,"toISOString"],[849,410,659,227],[849,411,659,228],[849,412,659,229],[849,414,659,231],[849,416,660,20],[849,420,660,24],[849,421,660,25],[849,422,660,26,"_d"],[849,424,660,28],[849,427,660,31,"options"],[849,434,660,38],[849,439,660,43],[849,443,660,47],[849,447,660,51,"options"],[849,454,660,58],[849,459,660,63],[849,464,660,68],[849,465,660,69],[849,468,660,72],[849,473,660,77],[849,474,660,78],[849,477,660,81,"options"],[849,484,660,88],[849,485,660,89,"signInWithSolana"],[849,501,660,105],[849,507,660,111],[849,511,660,115],[849,515,660,119,"_d"],[849,517,660,121],[849,522,660,126],[849,527,660,131],[849,528,660,132],[849,531,660,135],[849,536,660,140],[849,537,660,141],[849,540,660,144,"_d"],[849,542,660,146],[849,543,660,147,"notBefore"],[849,552,660,156],[849,556,661,26],[849,557,661,27],[849,572,661,42,"options"],[849,579,661,49],[849,580,661,50,"signInWithSolana"],[849,596,661,66],[849,597,661,67,"notBefore"],[849,606,661,76],[849,608,661,78],[849,609,661,79],[849,612,662,26],[849,614,662,28],[849,615,662,29],[849,617,663,20],[849,621,663,24],[849,622,663,25],[849,623,663,26,"_e"],[849,625,663,28],[849,628,663,31,"options"],[849,635,663,38],[849,640,663,43],[849,644,663,47],[849,648,663,51,"options"],[849,655,663,58],[849,660,663,63],[849,665,663,68],[849,666,663,69],[849,669,663,72],[849,674,663,77],[849,675,663,78],[849,678,663,81,"options"],[849,685,663,88],[849,686,663,89,"signInWithSolana"],[849,702,663,105],[849,708,663,111],[849,712,663,115],[849,716,663,119,"_e"],[849,718,663,121],[849,723,663,126],[849,728,663,131],[849,729,663,132],[849,732,663,135],[849,737,663,140],[849,738,663,141],[849,741,663,144,"_e"],[849,743,663,146],[849,744,663,147,"expirationTime"],[849,758,663,161],[849,762,664,26],[849,763,664,27],[849,783,664,47,"options"],[849,790,664,54],[849,791,664,55,"signInWithSolana"],[849,807,664,71],[849,808,664,72,"expirationTime"],[849,822,664,86],[849,824,664,88],[849,825,664,89],[849,828,665,26],[849,830,665,28],[849,831,665,29],[849,833,666,20],[849,837,666,24],[849,838,666,25],[849,839,666,26,"_f"],[849,841,666,28],[849,844,666,31,"options"],[849,851,666,38],[849,856,666,43],[849,860,666,47],[849,864,666,51,"options"],[849,871,666,58],[849,876,666,63],[849,881,666,68],[849,882,666,69],[849,885,666,72],[849,890,666,77],[849,891,666,78],[849,894,666,81,"options"],[849,901,666,88],[849,902,666,89,"signInWithSolana"],[849,918,666,105],[849,924,666,111],[849,928,666,115],[849,932,666,119,"_f"],[849,934,666,121],[849,939,666,126],[849,944,666,131],[849,945,666,132],[849,948,666,135],[849,953,666,140],[849,954,666,141],[849,957,666,144,"_f"],[849,959,666,146],[849,960,666,147,"chainId"],[849,967,666,154],[849,971,667,26],[849,972,667,27],[849,985,667,40,"options"],[849,992,667,47],[849,993,667,48,"signInWithSolana"],[849,1009,667,64],[849,1010,667,65,"chainId"],[849,1017,667,72],[849,1019,667,74],[849,1020,667,75],[849,1023,668,26],[849,1025,668,28],[849,1026,668,29],[849,1028,669,20],[849,1032,669,24],[849,1033,669,25],[849,1034,669,26,"_g"],[849,1036,669,28],[849,1039,669,31,"options"],[849,1046,669,38],[849,1051,669,43],[849,1055,669,47],[849,1059,669,51,"options"],[849,1066,669,58],[849,1071,669,63],[849,1076,669,68],[849,1077,669,69],[849,1080,669,72],[849,1085,669,77],[849,1086,669,78],[849,1089,669,81,"options"],[849,1096,669,88],[849,1097,669,89,"signInWithSolana"],[849,1113,669,105],[849,1119,669,111],[849,1123,669,115],[849,1127,669,119,"_g"],[849,1129,669,121],[849,1134,669,126],[849,1139,669,131],[849,1140,669,132],[849,1143,669,135],[849,1148,669,140],[849,1149,669,141],[849,1152,669,144,"_g"],[849,1154,669,146],[849,1155,669,147,"nonce"],[849,1160,669,152],[849,1164,669,156],[849,1165,669,157],[849,1175,669,167,"options"],[849,1182,669,174],[849,1183,669,175,"signInWithSolana"],[849,1199,669,191],[849,1200,669,192,"nonce"],[849,1205,669,197],[849,1207,669,199],[849,1208,669,200],[849,1211,669,203],[849,1213,669,205],[849,1214,669,206],[849,1216,670,20],[849,1220,670,24],[849,1221,670,25],[849,1222,670,26,"_h"],[849,1224,670,28],[849,1227,670,31,"options"],[849,1234,670,38],[849,1239,670,43],[849,1243,670,47],[849,1247,670,51,"options"],[849,1254,670,58],[849,1259,670,63],[849,1264,670,68],[849,1265,670,69],[849,1268,670,72],[849,1273,670,77],[849,1274,670,78],[849,1277,670,81,"options"],[849,1284,670,88],[849,1285,670,89,"signInWithSolana"],[849,1301,670,105],[849,1307,670,111],[849,1311,670,115],[849,1315,670,119,"_h"],[849,1317,670,121],[849,1322,670,126],[849,1327,670,131],[849,1328,670,132],[849,1331,670,135],[849,1336,670,140],[849,1337,670,141],[849,1340,670,144,"_h"],[849,1342,670,146],[849,1343,670,147,"requestId"],[849,1352,670,156],[849,1356,671,26],[849,1357,671,27],[849,1372,671,42,"options"],[849,1379,671,49],[849,1380,671,50,"signInWithSolana"],[849,1396,671,66],[849,1397,671,67,"requestId"],[849,1406,671,76],[849,1408,671,78],[849,1409,671,79],[849,1412,672,26],[849,1414,672,28],[849,1415,672,29],[849,1417,673,20],[849,1421,673,24],[849,1422,673,25],[849,1423,673,26,"_k"],[849,1425,673,28],[849,1428,673,31],[849,1429,673,32,"_j"],[849,1431,673,34],[849,1434,673,37,"options"],[849,1441,673,44],[849,1446,673,49],[849,1450,673,53],[849,1454,673,57,"options"],[849,1461,673,64],[849,1466,673,69],[849,1471,673,74],[849,1472,673,75],[849,1475,673,78],[849,1480,673,83],[849,1481,673,84],[849,1484,673,87,"options"],[849,1491,673,94],[849,1492,673,95,"signInWithSolana"],[849,1508,673,111],[849,1514,673,117],[849,1518,673,121],[849,1522,673,125,"_j"],[849,1524,673,127],[849,1529,673,132],[849,1534,673,137],[849,1535,673,138],[849,1538,673,141],[849,1543,673,146],[849,1544,673,147],[849,1547,673,150,"_j"],[849,1549,673,152],[849,1550,673,153,"resources"],[849,1559,673,162],[849,1565,673,168],[849,1569,673,172],[849,1573,673,176,"_k"],[849,1575,673,178],[849,1580,673,183],[849,1585,673,188],[849,1586,673,189],[849,1589,673,192],[849,1594,673,197],[849,1595,673,198],[849,1598,673,201,"_k"],[849,1600,673,203],[849,1601,673,204,"length"],[849,1607,673,210],[849,1611,674,26],[849,1612,675,28],[849,1623,675,39],[849,1625,676,28],[849,1628,676,31,"options"],[849,1635,676,38],[849,1636,676,39,"signInWithSolana"],[849,1652,676,55],[849,1653,676,56,"resources"],[849,1662,676,65],[849,1663,676,66,"map"],[849,1666,676,69],[849,1667,676,71,"resource"],[849,1675,676,79],[849,1679,676,84],[849,1684,676,89,"resource"],[849,1692,676,97],[849,1694,676,99],[849,1695,676,100],[849,1696,677,25],[849,1699,678,26],[849,1701,678,28],[849,1702,678,29],[849,1703,679,17],[849,1704,679,18,"join"],[849,1708,679,22],[849,1709,679,23],[849,1713,679,27],[849,1714,679,28],[850,14,680,16],[850,18,680,22,"maybeSignature"],[850,32,680,36],[850,41,680,45,"resolvedWallet"],[850,55,680,59],[850,56,680,60,"signMessage"],[850,67,680,71],[850,68,680,72],[850,72,680,76,"TextEncoder"],[850,83,680,87],[850,84,680,88],[850,85,680,89],[850,86,680,90,"encode"],[850,92,680,96],[850,93,680,97,"message"],[850,100,680,104],[850,101,680,105],[850,103,680,107],[850,109,680,113],[850,110,680,114],[851,14,681,16],[851,18,681,20],[851,19,681,21,"maybeSignature"],[851,33,681,35],[851,37,681,39],[851,39,681,41,"maybeSignature"],[851,53,681,55],[851,65,681,67,"Uint8Array"],[851,75,681,77],[851,76,681,78],[851,78,681,80],[852,16,682,20],[852,22,682,26],[852,26,682,30,"Error"],[852,31,682,35],[852,32,682,36],[852,106,682,110],[852,107,682,111],[853,14,683,16],[854,14,684,16,"signature"],[854,23,684,25],[854,26,684,28,"maybeSignature"],[854,40,684,42],[855,12,685,12],[856,10,686,8],[857,10,687,8],[857,14,687,12],[858,12,688,12],[858,16,688,12,"_yield4"],[858,23,688,12],[858,32,688,42],[858,33,688,43],[858,34,688,44],[858,36,688,46,"fetch_1"],[858,43,688,53],[858,44,688,54,"_request"],[858,52,688,62],[858,54,688,64],[858,58,688,68],[858,59,688,69,"fetch"],[858,64,688,74],[858,66,688,76],[858,72,688,82],[858,74,688,84],[858,77,688,87],[858,81,688,91],[858,82,688,92,"url"],[858,85,688,95],[858,109,688,119],[858,111,688,121],[859,16,689,16,"headers"],[859,23,689,23],[859,25,689,25],[859,29,689,29],[859,30,689,30,"headers"],[859,37,689,37],[860,16,690,16,"body"],[860,20,690,20],[860,22,690,22,"Object"],[860,28,690,28],[860,29,690,29,"assign"],[860,35,690,35],[860,36,690,36],[861,18,690,38,"chain"],[861,23,690,43],[861,25,690,45],[861,33,690,53],[862,18,690,55,"message"],[862,25,690,62],[863,18,690,64,"signature"],[863,27,690,73],[863,29,690,75],[863,30,690,76],[863,31,690,77],[863,33,690,79,"base64url_1"],[863,44,690,90],[863,45,690,91,"bytesToBase64URL"],[863,61,690,107],[863,63,690,109,"signature"],[863,72,690,118],[864,16,690,120],[864,17,690,121],[864,19,690,124],[864,20,690,125],[864,21,690,126,"_l"],[864,23,690,128],[864,26,690,131,"credentials"],[864,37,690,142],[864,38,690,143,"options"],[864,45,690,150],[864,51,690,156],[864,55,690,160],[864,59,690,164,"_l"],[864,61,690,166],[864,66,690,171],[864,71,690,176],[864,72,690,177],[864,75,690,180],[864,80,690,185],[864,81,690,186],[864,84,690,189,"_l"],[864,86,690,191],[864,87,690,192,"captchaToken"],[864,99,690,204],[864,103,691,22],[865,18,691,24,"gotrue_meta_security"],[865,38,691,44],[865,40,691,46],[866,20,691,48,"captcha_token"],[866,33,691,61],[866,35,691,63],[866,36,691,64,"_m"],[866,38,691,66],[866,41,691,69,"credentials"],[866,52,691,80],[866,53,691,81,"options"],[866,60,691,88],[866,66,691,94],[866,70,691,98],[866,74,691,102,"_m"],[866,76,691,104],[866,81,691,109],[866,86,691,114],[866,87,691,115],[866,90,691,118],[866,95,691,123],[866,96,691,124],[866,99,691,127,"_m"],[866,101,691,129],[866,102,691,130,"captchaToken"],[867,18,691,143],[868,16,691,145],[868,17,691,146],[868,20,692,22],[868,24,692,27],[868,25,692,28],[869,16,693,16,"xform"],[869,21,693,21],[869,23,693,23,"fetch_1"],[869,30,693,30],[869,31,693,31,"_sessionResponse"],[870,14,694,12],[870,15,694,13],[870,16,694,14],[871,14,688,20,"data"],[871,18,688,24],[871,21,688,24,"_yield4"],[871,28,688,24],[871,29,688,20,"data"],[871,33,688,24],[872,14,688,26,"error"],[872,19,688,31],[872,22,688,31,"_yield4"],[872,29,688,31],[872,30,688,26,"error"],[872,35,688,31],[873,12,695,12],[873,16,695,16,"error"],[873,21,695,21],[873,23,695,23],[874,14,696,16],[874,20,696,22,"error"],[874,25,696,27],[875,12,697,12],[876,12,698,12],[876,16,698,16],[876,17,698,17,"data"],[876,21,698,21],[876,25,698,25],[876,26,698,26,"data"],[876,30,698,30],[876,31,698,31,"session"],[876,38,698,38],[876,42,698,42],[876,43,698,43,"data"],[876,47,698,47],[876,48,698,48,"user"],[876,52,698,52],[876,54,698,54],[877,14,699,16],[877,21,699,23],[878,16,700,20,"data"],[878,20,700,24],[878,22,700,26],[879,18,700,28,"user"],[879,22,700,32],[879,24,700,34],[879,28,700,38],[880,18,700,40,"session"],[880,25,700,47],[880,27,700,49],[881,16,700,54],[881,17,700,55],[882,16,701,20,"error"],[882,21,701,25],[882,23,701,27],[882,27,701,31,"errors_1"],[882,35,701,39],[882,36,701,40,"AuthInvalidTokenResponseError"],[882,65,701,69],[882,66,701,70],[883,14,702,16],[883,15,702,17],[884,12,703,12],[885,12,704,12],[885,16,704,16,"data"],[885,20,704,20],[885,21,704,21,"session"],[885,28,704,28],[885,30,704,30],[886,14,705,16],[886,20,705,22],[886,24,705,26],[886,25,705,27,"_saveSession"],[886,37,705,39],[886,38,705,40,"data"],[886,42,705,44],[886,43,705,45,"session"],[886,50,705,52],[886,51,705,53],[887,14,706,16],[887,20,706,22],[887,24,706,26],[887,25,706,27,"_notifyAllSubscribers"],[887,46,706,48],[887,47,706,49],[887,58,706,60],[887,60,706,62,"data"],[887,64,706,66],[887,65,706,67,"session"],[887,72,706,74],[887,73,706,75],[888,12,707,12],[889,12,708,12],[889,19,708,19],[890,14,708,21,"data"],[890,18,708,25],[890,20,708,27,"Object"],[890,26,708,33],[890,27,708,34,"assign"],[890,33,708,40],[890,34,708,41],[890,35,708,42],[890,36,708,43],[890,38,708,45,"data"],[890,42,708,49],[890,43,708,50],[891,14,708,52,"error"],[892,12,708,58],[892,13,708,59],[893,10,709,8],[893,11,709,9],[893,12,710,8],[893,19,710,15,"error"],[893,24,710,20],[893,26,710,22],[894,12,711,12],[894,16,711,16],[894,17,711,17],[894,18,711,18],[894,20,711,20,"errors_1"],[894,28,711,28],[894,29,711,29,"isAuthError"],[894,40,711,40],[894,42,711,42,"error"],[894,47,711,47],[894,48,711,48],[894,50,711,50],[895,14,712,16],[895,21,712,23],[896,16,712,25,"data"],[896,20,712,29],[896,22,712,31],[897,18,712,33,"user"],[897,22,712,37],[897,24,712,39],[897,28,712,43],[898,18,712,45,"session"],[898,25,712,52],[898,27,712,54],[899,16,712,59],[899,17,712,60],[900,16,712,62,"error"],[901,14,712,68],[901,15,712,69],[902,12,713,12],[903,12,714,12],[903,18,714,18,"error"],[903,23,714,23],[904,10,715,8],[905,8,716,4],[905,9,716,5],[906,8,716,5],[906,17,577,10,"signInWithSolana"],[906,33,577,26,"signInWithSolana"],[906,34,577,26,"_x10"],[906,38,577,26],[907,10,577,26],[907,17,577,26,"_signInWithSolana"],[907,34,577,26],[907,35,577,26,"apply"],[907,40,577,26],[907,47,577,26,"arguments"],[907,56,577,26],[908,8,577,26],[909,8,577,26],[909,15,577,10,"signInWithSolana"],[909,31,577,26],[910,6,577,26],[911,4,577,26],[912,6,577,26,"key"],[912,9,577,26],[913,6,577,26,"value"],[913,11,577,26],[914,8,577,26],[914,12,577,26,"_exchangeCodeForSession3"],[914,36,577,26],[914,39,577,26,"_asyncToGenerator"],[914,56,577,26],[914,57,717,4],[914,68,717,34,"authCode"],[914,76,717,42],[914,78,717,44],[915,10,718,8],[915,14,718,14,"storageItem"],[915,25,718,25],[915,34,718,34],[915,35,718,35],[915,36,718,36],[915,38,718,38,"helpers_1"],[915,47,718,47],[915,48,718,48,"getItemAsync"],[915,60,718,60],[915,62,718,62],[915,66,718,66],[915,67,718,67,"storage"],[915,74,718,74],[915,76,718,76],[915,79,718,79],[915,83,718,83],[915,84,718,84,"storageKey"],[915,94,718,94],[915,110,718,110],[915,111,718,111],[916,10,719,8],[916,14,719,8,"_split"],[916,20,719,8],[916,23,719,45],[916,24,719,46,"storageItem"],[916,35,719,57],[916,40,719,62],[916,44,719,66],[916,48,719,70,"storageItem"],[916,59,719,81],[916,64,719,86],[916,69,719,91],[916,70,719,92],[916,73,719,95,"storageItem"],[916,84,719,106],[916,87,719,109],[916,89,719,111],[916,91,719,113,"split"],[916,96,719,118],[916,97,719,119],[916,100,719,122],[916,101,719,123],[917,12,719,123,"_split2"],[917,19,719,123],[917,22,719,123,"_slicedToArray"],[917,36,719,123],[917,37,719,123,"_split"],[917,43,719,123],[918,12,719,15,"codeVerifier"],[918,24,719,27],[918,27,719,27,"_split2"],[918,34,719,27],[919,12,719,29,"redirectType"],[919,24,719,41],[919,27,719,41,"_split2"],[919,34,719,41],[920,10,720,8],[920,14,720,12],[921,12,721,12],[921,16,721,12,"_yield5"],[921,23,721,12],[921,32,721,42],[921,33,721,43],[921,34,721,44],[921,36,721,46,"fetch_1"],[921,43,721,53],[921,44,721,54,"_request"],[921,52,721,62],[921,54,721,64],[921,58,721,68],[921,59,721,69,"fetch"],[921,64,721,74],[921,66,721,76],[921,72,721,82],[921,74,721,84],[921,77,721,87],[921,81,721,91],[921,82,721,92,"url"],[921,85,721,95],[921,109,721,119],[921,111,721,121],[922,16,722,16,"headers"],[922,23,722,23],[922,25,722,25],[922,29,722,29],[922,30,722,30,"headers"],[922,37,722,37],[923,16,723,16,"body"],[923,20,723,20],[923,22,723,22],[924,18,724,20,"auth_code"],[924,27,724,29],[924,29,724,31,"authCode"],[924,37,724,39],[925,18,725,20,"code_verifier"],[925,31,725,33],[925,33,725,35,"codeVerifier"],[926,16,726,16],[926,17,726,17],[927,16,727,16,"xform"],[927,21,727,21],[927,23,727,23,"fetch_1"],[927,30,727,30],[927,31,727,31,"_sessionResponse"],[928,14,728,12],[928,15,728,13],[928,16,728,14],[929,14,721,20,"data"],[929,18,721,24],[929,21,721,24,"_yield5"],[929,28,721,24],[929,29,721,20,"data"],[929,33,721,24],[930,14,721,26,"error"],[930,19,721,31],[930,22,721,31,"_yield5"],[930,29,721,31],[930,30,721,26,"error"],[930,35,721,31],[931,12,729,12],[931,18,729,18],[931,19,729,19],[931,20,729,20],[931,22,729,22,"helpers_1"],[931,31,729,31],[931,32,729,32,"removeItemAsync"],[931,47,729,47],[931,49,729,49],[931,53,729,53],[931,54,729,54,"storage"],[931,61,729,61],[931,63,729,63],[931,66,729,66],[931,70,729,70],[931,71,729,71,"storageKey"],[931,81,729,81],[931,97,729,97],[931,98,729,98],[932,12,730,12],[932,16,730,16,"error"],[932,21,730,21],[932,23,730,23],[933,14,731,16],[933,20,731,22,"error"],[933,25,731,27],[934,12,732,12],[935,12,733,12],[935,16,733,16],[935,17,733,17,"data"],[935,21,733,21],[935,25,733,25],[935,26,733,26,"data"],[935,30,733,30],[935,31,733,31,"session"],[935,38,733,38],[935,42,733,42],[935,43,733,43,"data"],[935,47,733,47],[935,48,733,48,"user"],[935,52,733,52],[935,54,733,54],[936,14,734,16],[936,21,734,23],[937,16,735,20,"data"],[937,20,735,24],[937,22,735,26],[938,18,735,28,"user"],[938,22,735,32],[938,24,735,34],[938,28,735,38],[939,18,735,40,"session"],[939,25,735,47],[939,27,735,49],[939,31,735,53],[940,18,735,55,"redirectType"],[940,30,735,67],[940,32,735,69],[941,16,735,74],[941,17,735,75],[942,16,736,20,"error"],[942,21,736,25],[942,23,736,27],[942,27,736,31,"errors_1"],[942,35,736,39],[942,36,736,40,"AuthInvalidTokenResponseError"],[942,65,736,69],[942,66,736,70],[943,14,737,16],[943,15,737,17],[944,12,738,12],[945,12,739,12],[945,16,739,16,"data"],[945,20,739,20],[945,21,739,21,"session"],[945,28,739,28],[945,30,739,30],[946,14,740,16],[946,20,740,22],[946,24,740,26],[946,25,740,27,"_saveSession"],[946,37,740,39],[946,38,740,40,"data"],[946,42,740,44],[946,43,740,45,"session"],[946,50,740,52],[946,51,740,53],[947,14,741,16],[947,20,741,22],[947,24,741,26],[947,25,741,27,"_notifyAllSubscribers"],[947,46,741,48],[947,47,741,49],[947,58,741,60],[947,60,741,62,"data"],[947,64,741,66],[947,65,741,67,"session"],[947,72,741,74],[947,73,741,75],[948,12,742,12],[949,12,743,12],[949,19,743,19],[950,14,743,21,"data"],[950,18,743,25],[950,20,743,27,"Object"],[950,26,743,33],[950,27,743,34,"assign"],[950,33,743,40],[950,34,743,41,"Object"],[950,40,743,47],[950,41,743,48,"assign"],[950,47,743,54],[950,48,743,55],[950,49,743,56],[950,50,743,57],[950,52,743,59,"data"],[950,56,743,63],[950,57,743,64],[950,59,743,66],[951,16,743,68,"redirectType"],[951,28,743,80],[951,30,743,82,"redirectType"],[951,42,743,94],[951,47,743,99],[951,51,743,103],[951,55,743,107,"redirectType"],[951,67,743,119],[951,72,743,124],[951,77,743,129],[951,78,743,130],[951,81,743,133,"redirectType"],[951,93,743,145],[951,96,743,148],[952,14,743,153],[952,15,743,154],[952,16,743,155],[953,14,743,157,"error"],[954,12,743,163],[954,13,743,164],[955,10,744,8],[955,11,744,9],[955,12,745,8],[955,19,745,15,"error"],[955,24,745,20],[955,26,745,22],[956,12,746,12],[956,16,746,16],[956,17,746,17],[956,18,746,18],[956,20,746,20,"errors_1"],[956,28,746,28],[956,29,746,29,"isAuthError"],[956,40,746,40],[956,42,746,42,"error"],[956,47,746,47],[956,48,746,48],[956,50,746,50],[957,14,747,16],[957,21,747,23],[958,16,747,25,"data"],[958,20,747,29],[958,22,747,31],[959,18,747,33,"user"],[959,22,747,37],[959,24,747,39],[959,28,747,43],[960,18,747,45,"session"],[960,25,747,52],[960,27,747,54],[960,31,747,58],[961,18,747,60,"redirectType"],[961,30,747,72],[961,32,747,74],[962,16,747,79],[962,17,747,80],[963,16,747,82,"error"],[964,14,747,88],[964,15,747,89],[965,12,748,12],[966,12,749,12],[966,18,749,18,"error"],[966,23,749,23],[967,10,750,8],[968,8,751,4],[968,9,751,5],[969,8,751,5],[969,17,717,10,"_exchangeCodeForSession"],[969,40,717,33,"_exchangeCodeForSession"],[969,41,717,33,"_x11"],[969,45,717,33],[970,10,717,33],[970,17,717,33,"_exchangeCodeForSession3"],[970,41,717,33],[970,42,717,33,"apply"],[970,47,717,33],[970,54,717,33,"arguments"],[970,63,717,33],[971,8,717,33],[972,8,717,33],[972,15,717,10,"_exchangeCodeForSession"],[972,38,717,33],[973,6,717,33],[974,6,752,4],[975,0,753,0],[976,0,754,0],[977,0,755,0],[978,4,752,4],[979,6,752,4,"key"],[979,9,752,4],[980,6,752,4,"value"],[980,11,752,4],[981,8,752,4],[981,12,752,4,"_signInWithIdToken"],[981,30,752,4],[981,33,752,4,"_asyncToGenerator"],[981,50,752,4],[981,51,756,4],[981,62,756,28,"credentials"],[981,73,756,39],[981,75,756,41],[982,10,757,8],[982,14,757,12],[983,12,758,12],[983,16,758,20,"options"],[983,23,758,27],[983,26,758,70,"credentials"],[983,37,758,81],[983,38,758,20,"options"],[983,45,758,27],[984,14,758,29,"provider"],[984,22,758,37],[984,25,758,70,"credentials"],[984,36,758,81],[984,37,758,29,"provider"],[984,45,758,37],[985,14,758,39,"token"],[985,19,758,44],[985,22,758,70,"credentials"],[985,33,758,81],[985,34,758,39,"token"],[985,39,758,44],[986,14,758,46,"access_token"],[986,26,758,58],[986,29,758,70,"credentials"],[986,40,758,81],[986,41,758,46,"access_token"],[986,53,758,58],[987,14,758,60,"nonce"],[987,19,758,65],[987,22,758,70,"credentials"],[987,33,758,81],[987,34,758,60,"nonce"],[987,39,758,65],[988,12,759,12],[988,16,759,18,"res"],[988,19,759,21],[988,28,759,30],[988,29,759,31],[988,30,759,32],[988,32,759,34,"fetch_1"],[988,39,759,41],[988,40,759,42,"_request"],[988,48,759,50],[988,50,759,52],[988,54,759,56],[988,55,759,57,"fetch"],[988,60,759,62],[988,62,759,64],[988,68,759,70],[988,70,759,72],[988,73,759,75],[988,77,759,79],[988,78,759,80,"url"],[988,81,759,83],[988,109,759,111],[988,111,759,113],[989,14,760,16,"headers"],[989,21,760,23],[989,23,760,25],[989,27,760,29],[989,28,760,30,"headers"],[989,35,760,37],[990,14,761,16,"body"],[990,18,761,20],[990,20,761,22],[991,16,762,20,"provider"],[991,24,762,28],[992,16,763,20,"id_token"],[992,24,763,28],[992,26,763,30,"token"],[992,31,763,35],[993,16,764,20,"access_token"],[993,28,764,32],[994,16,765,20,"nonce"],[994,21,765,25],[995,16,766,20,"gotrue_meta_security"],[995,36,766,40],[995,38,766,42],[996,18,766,44,"captcha_token"],[996,31,766,57],[996,33,766,59,"options"],[996,40,766,66],[996,45,766,71],[996,49,766,75],[996,53,766,79,"options"],[996,60,766,86],[996,65,766,91],[996,70,766,96],[996,71,766,97],[996,74,766,100],[996,79,766,105],[996,80,766,106],[996,83,766,109,"options"],[996,90,766,116],[996,91,766,117,"captchaToken"],[997,16,766,130],[998,14,767,16],[998,15,767,17],[999,14,768,16,"xform"],[999,19,768,21],[999,21,768,23,"fetch_1"],[999,28,768,30],[999,29,768,31,"_sessionResponse"],[1000,12,769,12],[1000,13,769,13],[1000,14,769,14],[1001,12,770,12],[1001,16,770,20,"data"],[1001,20,770,24],[1001,23,770,36,"res"],[1001,26,770,39],[1001,27,770,20,"data"],[1001,31,770,24],[1002,14,770,26,"error"],[1002,19,770,31],[1002,22,770,36,"res"],[1002,25,770,39],[1002,26,770,26,"error"],[1002,31,770,31],[1003,12,771,12],[1003,16,771,16,"error"],[1003,21,771,21],[1003,23,771,23],[1004,14,772,16],[1004,21,772,23],[1005,16,772,25,"data"],[1005,20,772,29],[1005,22,772,31],[1006,18,772,33,"user"],[1006,22,772,37],[1006,24,772,39],[1006,28,772,43],[1007,18,772,45,"session"],[1007,25,772,52],[1007,27,772,54],[1008,16,772,59],[1008,17,772,60],[1009,16,772,62,"error"],[1010,14,772,68],[1010,15,772,69],[1011,12,773,12],[1011,13,773,13],[1011,19,774,17],[1011,23,774,21],[1011,24,774,22,"data"],[1011,28,774,26],[1011,32,774,30],[1011,33,774,31,"data"],[1011,37,774,35],[1011,38,774,36,"session"],[1011,45,774,43],[1011,49,774,47],[1011,50,774,48,"data"],[1011,54,774,52],[1011,55,774,53,"user"],[1011,59,774,57],[1011,61,774,59],[1012,14,775,16],[1012,21,775,23],[1013,16,776,20,"data"],[1013,20,776,24],[1013,22,776,26],[1014,18,776,28,"user"],[1014,22,776,32],[1014,24,776,34],[1014,28,776,38],[1015,18,776,40,"session"],[1015,25,776,47],[1015,27,776,49],[1016,16,776,54],[1016,17,776,55],[1017,16,777,20,"error"],[1017,21,777,25],[1017,23,777,27],[1017,27,777,31,"errors_1"],[1017,35,777,39],[1017,36,777,40,"AuthInvalidTokenResponseError"],[1017,65,777,69],[1017,66,777,70],[1018,14,778,16],[1018,15,778,17],[1019,12,779,12],[1020,12,780,12],[1020,16,780,16,"data"],[1020,20,780,20],[1020,21,780,21,"session"],[1020,28,780,28],[1020,30,780,30],[1021,14,781,16],[1021,20,781,22],[1021,24,781,26],[1021,25,781,27,"_saveSession"],[1021,37,781,39],[1021,38,781,40,"data"],[1021,42,781,44],[1021,43,781,45,"session"],[1021,50,781,52],[1021,51,781,53],[1022,14,782,16],[1022,20,782,22],[1022,24,782,26],[1022,25,782,27,"_notifyAllSubscribers"],[1022,46,782,48],[1022,47,782,49],[1022,58,782,60],[1022,60,782,62,"data"],[1022,64,782,66],[1022,65,782,67,"session"],[1022,72,782,74],[1022,73,782,75],[1023,12,783,12],[1024,12,784,12],[1024,19,784,19],[1025,14,784,21,"data"],[1025,18,784,25],[1026,14,784,27,"error"],[1027,12,784,33],[1027,13,784,34],[1028,10,785,8],[1028,11,785,9],[1028,12,786,8],[1028,19,786,15,"error"],[1028,24,786,20],[1028,26,786,22],[1029,12,787,12],[1029,16,787,16],[1029,17,787,17],[1029,18,787,18],[1029,20,787,20,"errors_1"],[1029,28,787,28],[1029,29,787,29,"isAuthError"],[1029,40,787,40],[1029,42,787,42,"error"],[1029,47,787,47],[1029,48,787,48],[1029,50,787,50],[1030,14,788,16],[1030,21,788,23],[1031,16,788,25,"data"],[1031,20,788,29],[1031,22,788,31],[1032,18,788,33,"user"],[1032,22,788,37],[1032,24,788,39],[1032,28,788,43],[1033,18,788,45,"session"],[1033,25,788,52],[1033,27,788,54],[1034,16,788,59],[1034,17,788,60],[1035,16,788,62,"error"],[1036,14,788,68],[1036,15,788,69],[1037,12,789,12],[1038,12,790,12],[1038,18,790,18,"error"],[1038,23,790,23],[1039,10,791,8],[1040,8,792,4],[1040,9,792,5],[1041,8,792,5],[1041,17,756,10,"signInWithIdToken"],[1041,34,756,27,"signInWithIdToken"],[1041,35,756,27,"_x12"],[1041,39,756,27],[1042,10,756,27],[1042,17,756,27,"_signInWithIdToken"],[1042,35,756,27],[1042,36,756,27,"apply"],[1042,41,756,27],[1042,48,756,27,"arguments"],[1042,57,756,27],[1043,8,756,27],[1044,8,756,27],[1044,15,756,10,"signInWithIdToken"],[1044,32,756,27],[1045,6,756,27],[1046,6,793,4],[1047,0,794,0],[1048,0,795,0],[1049,0,796,0],[1050,0,797,0],[1051,0,798,0],[1052,0,799,0],[1053,0,800,0],[1054,0,801,0],[1055,0,802,0],[1056,0,803,0],[1057,0,804,0],[1058,0,805,0],[1059,0,806,0],[1060,0,807,0],[1061,0,808,0],[1062,0,809,0],[1063,6,793,4],[1064,4,793,4],[1065,6,793,4,"key"],[1065,9,793,4],[1066,6,793,4,"value"],[1066,11,793,4],[1067,8,793,4],[1067,12,793,4,"_signInWithOtp"],[1067,26,793,4],[1067,29,793,4,"_asyncToGenerator"],[1067,46,793,4],[1067,47,810,4],[1067,58,810,24,"credentials"],[1067,69,810,35],[1067,71,810,37],[1068,10,811,8],[1068,14,811,12,"_a"],[1068,16,811,14],[1068,18,811,16,"_b"],[1068,20,811,18],[1068,22,811,20,"_c"],[1068,24,811,22],[1068,26,811,24,"_d"],[1068,28,811,26],[1068,30,811,28,"_e"],[1068,32,811,30],[1069,10,812,8],[1069,14,812,12],[1070,12,813,12],[1070,16,813,16],[1070,23,813,23],[1070,27,813,27,"credentials"],[1070,38,813,38],[1070,40,813,40],[1071,14,814,16],[1071,18,814,24,"email"],[1071,23,814,29],[1071,26,814,43,"credentials"],[1071,37,814,54],[1071,38,814,24,"email"],[1071,43,814,29],[1072,16,814,31,"options"],[1072,23,814,38],[1072,26,814,43,"credentials"],[1072,37,814,54],[1072,38,814,31,"options"],[1072,45,814,38],[1073,14,815,16],[1073,18,815,20,"codeChallenge"],[1073,31,815,33],[1073,34,815,36],[1073,38,815,40],[1074,14,816,16],[1074,18,816,20,"codeChallengeMethod"],[1074,37,816,39],[1074,40,816,42],[1074,44,816,46],[1075,14,817,16],[1075,18,817,20],[1075,22,817,24],[1075,23,817,25,"flowType"],[1075,31,817,33],[1075,36,817,38],[1075,42,817,44],[1075,44,817,46],[1076,16,818,20],[1077,16,818,21],[1077,20,818,21,"_yield6"],[1077,27,818,21],[1077,36,819,65],[1077,37,819,66],[1077,38,819,67],[1077,40,819,69,"helpers_1"],[1077,49,819,78],[1077,50,819,79,"getCodeChallengeAndMethod"],[1077,75,819,104],[1077,77,819,106],[1077,81,819,110],[1077,82,819,111,"storage"],[1077,89,819,118],[1077,91,819,120],[1077,95,819,124],[1077,96,819,125,"storageKey"],[1077,106,819,135],[1077,107,819,136],[1078,16,819,136],[1078,20,819,136,"_yield7"],[1078,27,819,136],[1078,30,819,136,"_slicedToArray"],[1078,44,819,136],[1078,45,819,136,"_yield6"],[1078,52,819,136],[1079,16,819,21,"codeChallenge"],[1079,29,819,34],[1079,32,819,34,"_yield7"],[1079,39,819,34],[1080,16,819,36,"codeChallengeMethod"],[1080,35,819,55],[1080,38,819,55,"_yield7"],[1080,45,819,55],[1081,14,820,16],[1082,14,821,16],[1082,18,821,16,"_yield8"],[1082,25,821,16],[1082,34,821,40],[1082,35,821,41],[1082,36,821,42],[1082,38,821,44,"fetch_1"],[1082,45,821,51],[1082,46,821,52,"_request"],[1082,54,821,60],[1082,56,821,62],[1082,60,821,66],[1082,61,821,67,"fetch"],[1082,66,821,72],[1082,68,821,74],[1082,74,821,80],[1082,76,821,82],[1082,79,821,85],[1082,83,821,89],[1082,84,821,90,"url"],[1082,87,821,93],[1082,93,821,99],[1082,95,821,101],[1083,18,822,20,"headers"],[1083,25,822,27],[1083,27,822,29],[1083,31,822,33],[1083,32,822,34,"headers"],[1083,39,822,41],[1084,18,823,20,"body"],[1084,22,823,24],[1084,24,823,26],[1085,20,824,24,"email"],[1085,25,824,29],[1086,20,825,24,"data"],[1086,24,825,28],[1086,26,825,30],[1086,27,825,31,"_a"],[1086,29,825,33],[1086,32,825,36,"options"],[1086,39,825,43],[1086,44,825,48],[1086,48,825,52],[1086,52,825,56,"options"],[1086,59,825,63],[1086,64,825,68],[1086,69,825,73],[1086,70,825,74],[1086,73,825,77],[1086,78,825,82],[1086,79,825,83],[1086,82,825,86,"options"],[1086,89,825,93],[1086,90,825,94,"data"],[1086,94,825,98],[1086,100,825,104],[1086,104,825,108],[1086,108,825,112,"_a"],[1086,110,825,114],[1086,115,825,119],[1086,120,825,124],[1086,121,825,125],[1086,124,825,128,"_a"],[1086,126,825,130],[1086,129,825,133],[1086,130,825,134],[1086,131,825,135],[1087,20,826,24,"create_user"],[1087,31,826,35],[1087,33,826,37],[1087,34,826,38,"_b"],[1087,36,826,40],[1087,39,826,43,"options"],[1087,46,826,50],[1087,51,826,55],[1087,55,826,59],[1087,59,826,63,"options"],[1087,66,826,70],[1087,71,826,75],[1087,76,826,80],[1087,77,826,81],[1087,80,826,84],[1087,85,826,89],[1087,86,826,90],[1087,89,826,93,"options"],[1087,96,826,100],[1087,97,826,101,"shouldCreateUser"],[1087,113,826,117],[1087,119,826,123],[1087,123,826,127],[1087,127,826,131,"_b"],[1087,129,826,133],[1087,134,826,138],[1087,139,826,143],[1087,140,826,144],[1087,143,826,147,"_b"],[1087,145,826,149],[1087,148,826,152],[1087,152,826,156],[1088,20,827,24,"gotrue_meta_security"],[1088,40,827,44],[1088,42,827,46],[1089,22,827,48,"captcha_token"],[1089,35,827,61],[1089,37,827,63,"options"],[1089,44,827,70],[1089,49,827,75],[1089,53,827,79],[1089,57,827,83,"options"],[1089,64,827,90],[1089,69,827,95],[1089,74,827,100],[1089,75,827,101],[1089,78,827,104],[1089,83,827,109],[1089,84,827,110],[1089,87,827,113,"options"],[1089,94,827,120],[1089,95,827,121,"captchaToken"],[1090,20,827,134],[1090,21,827,135],[1091,20,828,24,"code_challenge"],[1091,34,828,38],[1091,36,828,40,"codeChallenge"],[1091,49,828,53],[1092,20,829,24,"code_challenge_method"],[1092,41,829,45],[1092,43,829,47,"codeChallengeMethod"],[1093,18,830,20],[1093,19,830,21],[1094,18,831,20,"redirectTo"],[1094,28,831,30],[1094,30,831,32,"options"],[1094,37,831,39],[1094,42,831,44],[1094,46,831,48],[1094,50,831,52,"options"],[1094,57,831,59],[1094,62,831,64],[1094,67,831,69],[1094,68,831,70],[1094,71,831,73],[1094,76,831,78],[1094,77,831,79],[1094,80,831,82,"options"],[1094,87,831,89],[1094,88,831,90,"emailRedirectTo"],[1095,16,832,16],[1095,17,832,17],[1095,18,832,18],[1096,16,821,24,"error"],[1096,21,821,29],[1096,24,821,29,"_yield8"],[1096,31,821,29],[1096,32,821,24,"error"],[1096,37,821,29],[1097,14,833,16],[1097,21,833,23],[1098,16,833,25,"data"],[1098,20,833,29],[1098,22,833,31],[1099,18,833,33,"user"],[1099,22,833,37],[1099,24,833,39],[1099,28,833,43],[1100,18,833,45,"session"],[1100,25,833,52],[1100,27,833,54],[1101,16,833,59],[1101,17,833,60],[1102,16,833,62,"error"],[1103,14,833,68],[1103,15,833,69],[1104,12,834,12],[1105,12,835,12],[1105,16,835,16],[1105,23,835,23],[1105,27,835,27,"credentials"],[1105,38,835,38],[1105,40,835,40],[1106,14,836,16],[1106,18,836,24,"phone"],[1106,23,836,29],[1106,26,836,43,"credentials"],[1106,37,836,54],[1106,38,836,24,"phone"],[1106,43,836,29],[1107,16,836,31,"options"],[1107,25,836,38],[1107,28,836,43,"credentials"],[1107,39,836,54],[1107,40,836,31,"options"],[1107,47,836,38],[1108,14,837,16],[1108,18,837,16,"_yield9"],[1108,25,837,16],[1108,34,837,46],[1108,35,837,47],[1108,36,837,48],[1108,38,837,50,"fetch_1"],[1108,45,837,57],[1108,46,837,58,"_request"],[1108,54,837,66],[1108,56,837,68],[1108,60,837,72],[1108,61,837,73,"fetch"],[1108,66,837,78],[1108,68,837,80],[1108,74,837,86],[1108,76,837,88],[1108,79,837,91],[1108,83,837,95],[1108,84,837,96,"url"],[1108,87,837,99],[1108,93,837,105],[1108,95,837,107],[1109,18,838,20,"headers"],[1109,25,838,27],[1109,27,838,29],[1109,31,838,33],[1109,32,838,34,"headers"],[1109,39,838,41],[1110,18,839,20,"body"],[1110,22,839,24],[1110,24,839,26],[1111,20,840,24,"phone"],[1111,25,840,29],[1112,20,841,24,"data"],[1112,24,841,28],[1112,26,841,30],[1112,27,841,31,"_c"],[1112,29,841,33],[1112,32,841,36,"options"],[1112,41,841,43],[1112,46,841,48],[1112,50,841,52],[1112,54,841,56,"options"],[1112,63,841,63],[1112,68,841,68],[1112,73,841,73],[1112,74,841,74],[1112,77,841,77],[1112,82,841,82],[1112,83,841,83],[1112,86,841,86,"options"],[1112,95,841,93],[1112,96,841,94,"data"],[1112,100,841,98],[1112,106,841,104],[1112,110,841,108],[1112,114,841,112,"_c"],[1112,116,841,114],[1112,121,841,119],[1112,126,841,124],[1112,127,841,125],[1112,130,841,128,"_c"],[1112,132,841,130],[1112,135,841,133],[1112,136,841,134],[1112,137,841,135],[1113,20,842,24,"create_user"],[1113,31,842,35],[1113,33,842,37],[1113,34,842,38,"_d"],[1113,36,842,40],[1113,39,842,43,"options"],[1113,48,842,50],[1113,53,842,55],[1113,57,842,59],[1113,61,842,63,"options"],[1113,70,842,70],[1113,75,842,75],[1113,80,842,80],[1113,81,842,81],[1113,84,842,84],[1113,89,842,89],[1113,90,842,90],[1113,93,842,93,"options"],[1113,102,842,100],[1113,103,842,101,"shouldCreateUser"],[1113,119,842,117],[1113,125,842,123],[1113,129,842,127],[1113,133,842,131,"_d"],[1113,135,842,133],[1113,140,842,138],[1113,145,842,143],[1113,146,842,144],[1113,149,842,147,"_d"],[1113,151,842,149],[1113,154,842,152],[1113,158,842,156],[1114,20,843,24,"gotrue_meta_security"],[1114,40,843,44],[1114,42,843,46],[1115,22,843,48,"captcha_token"],[1115,35,843,61],[1115,37,843,63,"options"],[1115,46,843,70],[1115,51,843,75],[1115,55,843,79],[1115,59,843,83,"options"],[1115,68,843,90],[1115,73,843,95],[1115,78,843,100],[1115,79,843,101],[1115,82,843,104],[1115,87,843,109],[1115,88,843,110],[1115,91,843,113,"options"],[1115,100,843,120],[1115,101,843,121,"captchaToken"],[1116,20,843,134],[1116,21,843,135],[1117,20,844,24,"channel"],[1117,27,844,31],[1117,29,844,33],[1117,30,844,34,"_e"],[1117,32,844,36],[1117,35,844,39,"options"],[1117,44,844,46],[1117,49,844,51],[1117,53,844,55],[1117,57,844,59,"options"],[1117,66,844,66],[1117,71,844,71],[1117,76,844,76],[1117,77,844,77],[1117,80,844,80],[1117,85,844,85],[1117,86,844,86],[1117,89,844,89,"options"],[1117,98,844,96],[1117,99,844,97,"channel"],[1117,106,844,104],[1117,112,844,110],[1117,116,844,114],[1117,120,844,118,"_e"],[1117,122,844,120],[1117,127,844,125],[1117,132,844,130],[1117,133,844,131],[1117,136,844,134,"_e"],[1117,138,844,136],[1117,141,844,139],[1118,18,845,20],[1119,16,846,16],[1119,17,846,17],[1119,18,846,18],[1120,16,837,24,"data"],[1120,20,837,28],[1120,23,837,28,"_yield9"],[1120,30,837,28],[1120,31,837,24,"data"],[1120,35,837,28],[1121,16,837,30,"error"],[1121,22,837,35],[1121,25,837,35,"_yield9"],[1121,32,837,35],[1121,33,837,30,"error"],[1121,38,837,35],[1122,14,847,16],[1122,21,847,23],[1123,16,847,25,"data"],[1123,20,847,29],[1123,22,847,31],[1124,18,847,33,"user"],[1124,22,847,37],[1124,24,847,39],[1124,28,847,43],[1125,18,847,45,"session"],[1125,25,847,52],[1125,27,847,54],[1125,31,847,58],[1126,18,847,60,"messageId"],[1126,27,847,69],[1126,29,847,71,"data"],[1126,33,847,75],[1126,38,847,80],[1126,42,847,84],[1126,46,847,88,"data"],[1126,50,847,92],[1126,55,847,97],[1126,60,847,102],[1126,61,847,103],[1126,64,847,106],[1126,69,847,111],[1126,70,847,112],[1126,73,847,115,"data"],[1126,77,847,119],[1126,78,847,120,"message_id"],[1127,16,847,131],[1127,17,847,132],[1128,16,847,134,"error"],[1128,21,847,139],[1128,23,847,134,"error"],[1129,14,847,140],[1129,15,847,141],[1130,12,848,12],[1131,12,849,12],[1131,18,849,18],[1131,22,849,22,"errors_1"],[1131,30,849,30],[1131,31,849,31,"AuthInvalidCredentialsError"],[1131,58,849,58],[1131,59,849,59],[1131,110,849,110],[1131,111,849,111],[1132,10,850,8],[1132,11,850,9],[1132,12,851,8],[1132,19,851,15,"error"],[1132,24,851,20],[1132,26,851,22],[1133,12,852,12],[1133,16,852,16],[1133,17,852,17],[1133,18,852,18],[1133,20,852,20,"errors_1"],[1133,28,852,28],[1133,29,852,29,"isAuthError"],[1133,40,852,40],[1133,42,852,42,"error"],[1133,47,852,47],[1133,48,852,48],[1133,50,852,50],[1134,14,853,16],[1134,21,853,23],[1135,16,853,25,"data"],[1135,20,853,29],[1135,22,853,31],[1136,18,853,33,"user"],[1136,22,853,37],[1136,24,853,39],[1136,28,853,43],[1137,18,853,45,"session"],[1137,25,853,52],[1137,27,853,54],[1138,16,853,59],[1138,17,853,60],[1139,16,853,62,"error"],[1140,14,853,68],[1140,15,853,69],[1141,12,854,12],[1142,12,855,12],[1142,18,855,18,"error"],[1142,23,855,23],[1143,10,856,8],[1144,8,857,4],[1144,9,857,5],[1145,8,857,5],[1145,17,810,10,"signInWithOtp"],[1145,30,810,23,"signInWithOtp"],[1145,31,810,23,"_x13"],[1145,35,810,23],[1146,10,810,23],[1146,17,810,23,"_signInWithOtp"],[1146,31,810,23],[1146,32,810,23,"apply"],[1146,37,810,23],[1146,44,810,23,"arguments"],[1146,53,810,23],[1147,8,810,23],[1148,8,810,23],[1148,15,810,10,"signInWithOtp"],[1148,28,810,23],[1149,6,810,23],[1150,6,858,4],[1151,0,859,0],[1152,0,860,0],[1153,6,858,4],[1154,4,858,4],[1155,6,858,4,"key"],[1155,9,858,4],[1156,6,858,4,"value"],[1156,11,858,4],[1157,8,858,4],[1157,12,858,4,"_verifyOtp"],[1157,22,858,4],[1157,25,858,4,"_asyncToGenerator"],[1157,42,858,4],[1157,43,861,4],[1157,54,861,20,"params"],[1157,60,861,26],[1157,62,861,28],[1158,10,862,8],[1158,14,862,12,"_a"],[1158,16,862,14],[1158,18,862,16,"_b"],[1158,20,862,18],[1159,10,863,8],[1159,14,863,12],[1160,12,864,12],[1160,16,864,16,"redirectTo"],[1160,26,864,26],[1160,29,864,29,"undefined"],[1160,38,864,38],[1161,12,865,12],[1161,16,865,16,"captchaToken"],[1161,28,865,28],[1161,31,865,31,"undefined"],[1161,40,865,40],[1162,12,866,12],[1162,16,866,16],[1162,25,866,25],[1162,29,866,29,"params"],[1162,35,866,35],[1162,37,866,37],[1163,14,867,16,"redirectTo"],[1163,24,867,26],[1163,27,867,29],[1163,28,867,30,"_a"],[1163,30,867,32],[1163,33,867,35,"params"],[1163,39,867,41],[1163,40,867,42,"options"],[1163,47,867,49],[1163,53,867,55],[1163,57,867,59],[1163,61,867,63,"_a"],[1163,63,867,65],[1163,68,867,70],[1163,73,867,75],[1163,74,867,76],[1163,77,867,79],[1163,82,867,84],[1163,83,867,85],[1163,86,867,88,"_a"],[1163,88,867,90],[1163,89,867,91,"redirectTo"],[1163,99,867,101],[1164,14,868,16,"captchaToken"],[1164,26,868,28],[1164,29,868,31],[1164,30,868,32,"_b"],[1164,32,868,34],[1164,35,868,37,"params"],[1164,41,868,43],[1164,42,868,44,"options"],[1164,49,868,51],[1164,55,868,57],[1164,59,868,61],[1164,63,868,65,"_b"],[1164,65,868,67],[1164,70,868,72],[1164,75,868,77],[1164,76,868,78],[1164,79,868,81],[1164,84,868,86],[1164,85,868,87],[1164,88,868,90,"_b"],[1164,90,868,92],[1164,91,868,93,"captchaToken"],[1164,103,868,105],[1165,12,869,12],[1166,12,870,12],[1166,16,870,12,"_yield0"],[1166,23,870,12],[1166,32,870,42],[1166,33,870,43],[1166,34,870,44],[1166,36,870,46,"fetch_1"],[1166,43,870,53],[1166,44,870,54,"_request"],[1166,52,870,62],[1166,54,870,64],[1166,58,870,68],[1166,59,870,69,"fetch"],[1166,64,870,74],[1166,66,870,76],[1166,72,870,82],[1166,74,870,84],[1166,77,870,87],[1166,81,870,91],[1166,82,870,92,"url"],[1166,85,870,95],[1166,94,870,104],[1166,96,870,106],[1167,16,871,16,"headers"],[1167,23,871,23],[1167,25,871,25],[1167,29,871,29],[1167,30,871,30,"headers"],[1167,37,871,37],[1168,16,872,16,"body"],[1168,20,872,20],[1168,22,872,22,"Object"],[1168,28,872,28],[1168,29,872,29,"assign"],[1168,35,872,35],[1168,36,872,36,"Object"],[1168,42,872,42],[1168,43,872,43,"assign"],[1168,49,872,49],[1168,50,872,50],[1168,51,872,51],[1168,52,872,52],[1168,54,872,54,"params"],[1168,60,872,60],[1168,61,872,61],[1168,63,872,63],[1169,18,872,65,"gotrue_meta_security"],[1169,38,872,85],[1169,40,872,87],[1170,20,872,89,"captcha_token"],[1170,33,872,102],[1170,35,872,104,"captchaToken"],[1171,18,872,117],[1172,16,872,119],[1172,17,872,120],[1172,18,872,121],[1173,16,873,16,"redirectTo"],[1173,26,873,26],[1174,16,874,16,"xform"],[1174,21,874,21],[1174,23,874,23,"fetch_1"],[1174,30,874,30],[1174,31,874,31,"_sessionResponse"],[1175,14,875,12],[1175,15,875,13],[1175,16,875,14],[1176,14,870,20,"data"],[1176,18,870,24],[1176,21,870,24,"_yield0"],[1176,28,870,24],[1176,29,870,20,"data"],[1176,33,870,24],[1177,14,870,26,"error"],[1177,19,870,31],[1177,22,870,31,"_yield0"],[1177,29,870,31],[1177,30,870,26,"error"],[1177,35,870,31],[1178,12,876,12],[1178,16,876,16,"error"],[1178,21,876,21],[1178,23,876,23],[1179,14,877,16],[1179,20,877,22,"error"],[1179,25,877,27],[1180,12,878,12],[1181,12,879,12],[1181,16,879,16],[1181,17,879,17,"data"],[1181,21,879,21],[1181,23,879,23],[1182,14,880,16],[1182,20,880,22],[1182,24,880,26,"Error"],[1182,29,880,31],[1182,30,880,32],[1182,72,880,74],[1182,73,880,75],[1183,12,881,12],[1184,12,882,12],[1184,16,882,18,"session"],[1184,23,882,25],[1184,26,882,28,"data"],[1184,30,882,32],[1184,31,882,33,"session"],[1184,38,882,40],[1185,12,883,12],[1185,16,883,18,"user"],[1185,20,883,22],[1185,23,883,25,"data"],[1185,27,883,29],[1185,28,883,30,"user"],[1185,32,883,34],[1186,12,884,12],[1186,16,884,16,"session"],[1186,23,884,23],[1186,28,884,28],[1186,32,884,32],[1186,36,884,36,"session"],[1186,43,884,43],[1186,48,884,48],[1186,53,884,53],[1186,54,884,54],[1186,57,884,57],[1186,62,884,62],[1186,63,884,63],[1186,66,884,66,"session"],[1186,73,884,73],[1186,74,884,74,"access_token"],[1186,86,884,86],[1186,88,884,88],[1187,14,885,16],[1187,20,885,22],[1187,24,885,26],[1187,25,885,27,"_saveSession"],[1187,37,885,39],[1187,38,885,40,"session"],[1187,45,885,47],[1187,46,885,48],[1188,14,886,16],[1188,20,886,22],[1188,24,886,26],[1188,25,886,27,"_notifyAllSubscribers"],[1188,46,886,48],[1188,47,886,49,"params"],[1188,53,886,55],[1188,54,886,56,"type"],[1188,58,886,60],[1188,62,886,64],[1188,72,886,74],[1188,75,886,77],[1188,94,886,96],[1188,97,886,99],[1188,108,886,110],[1188,110,886,112,"session"],[1188,117,886,119],[1188,118,886,120],[1189,12,887,12],[1190,12,888,12],[1190,19,888,19],[1191,14,888,21,"data"],[1191,18,888,25],[1191,20,888,27],[1192,16,888,29,"user"],[1192,20,888,33],[1193,16,888,35,"session"],[1194,14,888,43],[1194,15,888,44],[1195,14,888,46,"error"],[1195,19,888,51],[1195,21,888,53],[1196,12,888,58],[1196,13,888,59],[1197,10,889,8],[1197,11,889,9],[1197,12,890,8],[1197,19,890,15,"error"],[1197,24,890,20],[1197,26,890,22],[1198,12,891,12],[1198,16,891,16],[1198,17,891,17],[1198,18,891,18],[1198,20,891,20,"errors_1"],[1198,28,891,28],[1198,29,891,29,"isAuthError"],[1198,40,891,40],[1198,42,891,42,"error"],[1198,47,891,47],[1198,48,891,48],[1198,50,891,50],[1199,14,892,16],[1199,21,892,23],[1200,16,892,25,"data"],[1200,20,892,29],[1200,22,892,31],[1201,18,892,33,"user"],[1201,22,892,37],[1201,24,892,39],[1201,28,892,43],[1202,18,892,45,"session"],[1202,25,892,52],[1202,27,892,54],[1203,16,892,59],[1203,17,892,60],[1204,16,892,62,"error"],[1205,14,892,68],[1205,15,892,69],[1206,12,893,12],[1207,12,894,12],[1207,18,894,18,"error"],[1207,23,894,23],[1208,10,895,8],[1209,8,896,4],[1209,9,896,5],[1210,8,896,5],[1210,17,861,10,"verifyOtp"],[1210,26,861,19,"verifyOtp"],[1210,27,861,19,"_x14"],[1210,31,861,19],[1211,10,861,19],[1211,17,861,19,"_verifyOtp"],[1211,27,861,19],[1211,28,861,19,"apply"],[1211,33,861,19],[1211,40,861,19,"arguments"],[1211,49,861,19],[1212,8,861,19],[1213,8,861,19],[1213,15,861,10,"verifyOtp"],[1213,24,861,19],[1214,6,861,19],[1215,6,897,4],[1216,0,898,0],[1217,0,899,0],[1218,0,900,0],[1219,0,901,0],[1220,0,902,0],[1221,0,903,0],[1222,0,904,0],[1223,0,905,0],[1224,0,906,0],[1225,0,907,0],[1226,0,908,0],[1227,0,909,0],[1228,0,910,0],[1229,6,897,4],[1230,4,897,4],[1231,6,897,4,"key"],[1231,9,897,4],[1232,6,897,4,"value"],[1232,11,897,4],[1233,8,897,4],[1233,12,897,4,"_signInWithSSO"],[1233,26,897,4],[1233,29,897,4,"_asyncToGenerator"],[1233,46,897,4],[1233,47,911,4],[1233,58,911,24,"params"],[1233,64,911,30],[1233,66,911,32],[1234,10,912,8],[1234,14,912,12,"_a"],[1234,16,912,14],[1234,18,912,16,"_b"],[1234,20,912,18],[1234,22,912,20,"_c"],[1234,24,912,22],[1235,10,913,8],[1235,14,913,12],[1236,12,914,12],[1236,16,914,16,"codeChallenge"],[1236,29,914,29],[1236,32,914,32],[1236,36,914,36],[1237,12,915,12],[1237,16,915,16,"codeChallengeMethod"],[1237,35,915,35],[1237,38,915,38],[1237,42,915,42],[1238,12,916,12],[1238,16,916,16],[1238,20,916,20],[1238,21,916,21,"flowType"],[1238,29,916,29],[1238,34,916,34],[1238,40,916,40],[1238,42,916,42],[1239,14,917,16],[1240,14,917,17],[1240,18,917,17,"_yield1"],[1240,25,917,17],[1240,34,918,61],[1240,35,918,62],[1240,36,918,63],[1240,38,918,65,"helpers_1"],[1240,47,918,74],[1240,48,918,75,"getCodeChallengeAndMethod"],[1240,73,918,100],[1240,75,918,102],[1240,79,918,106],[1240,80,918,107,"storage"],[1240,87,918,114],[1240,89,918,116],[1240,93,918,120],[1240,94,918,121,"storageKey"],[1240,104,918,131],[1240,105,918,132],[1241,14,918,132],[1241,18,918,132,"_yield10"],[1241,26,918,132],[1241,29,918,132,"_slicedToArray"],[1241,43,918,132],[1241,44,918,132,"_yield1"],[1241,51,918,132],[1242,14,918,17,"codeChallenge"],[1242,27,918,30],[1242,30,918,30,"_yield10"],[1242,38,918,30],[1243,14,918,32,"codeChallengeMethod"],[1243,33,918,51],[1243,36,918,51,"_yield10"],[1243,44,918,51],[1244,12,919,12],[1245,12,920,12],[1245,25,920,25],[1245,26,920,26],[1245,27,920,27],[1245,29,920,29,"fetch_1"],[1245,36,920,36],[1245,37,920,37,"_request"],[1245,45,920,45],[1245,47,920,47],[1245,51,920,51],[1245,52,920,52,"fetch"],[1245,57,920,57],[1245,59,920,59],[1245,65,920,65],[1245,67,920,67],[1245,70,920,70],[1245,74,920,74],[1245,75,920,75,"url"],[1245,78,920,78],[1245,84,920,84],[1245,86,920,86],[1246,14,921,16,"body"],[1246,18,921,20],[1246,20,921,22,"Object"],[1246,26,921,28],[1246,27,921,29,"assign"],[1246,33,921,35],[1246,34,921,36,"Object"],[1246,40,921,42],[1246,41,921,43,"assign"],[1246,47,921,49],[1246,48,921,50,"Object"],[1246,54,921,56],[1246,55,921,57,"assign"],[1246,61,921,63],[1246,62,921,64,"Object"],[1246,68,921,70],[1246,69,921,71,"assign"],[1246,75,921,77],[1246,76,921,78,"Object"],[1246,82,921,84],[1246,83,921,85,"assign"],[1246,89,921,91],[1246,90,921,92],[1246,91,921,93],[1246,92,921,94],[1246,94,921,97],[1246,106,921,109],[1246,110,921,113,"params"],[1246,116,921,119],[1246,119,921,122],[1247,16,921,124,"provider_id"],[1247,27,921,135],[1247,29,921,137,"params"],[1247,35,921,143],[1247,36,921,144,"providerId"],[1248,14,921,155],[1248,15,921,156],[1248,18,921,159],[1248,22,921,164],[1248,23,921,165],[1248,25,921,168],[1248,33,921,176],[1248,37,921,180,"params"],[1248,43,921,186],[1248,46,921,189],[1249,16,921,191,"domain"],[1249,22,921,197],[1249,24,921,199,"params"],[1249,30,921,205],[1249,31,921,206,"domain"],[1250,14,921,213],[1250,15,921,214],[1250,18,921,217],[1250,22,921,222],[1250,23,921,223],[1250,25,921,225],[1251,16,921,227,"redirect_to"],[1251,27,921,238],[1251,29,921,240],[1251,30,921,241,"_b"],[1251,32,921,243],[1251,35,921,246],[1251,36,921,247,"_a"],[1251,38,921,249],[1251,41,921,252,"params"],[1251,47,921,258],[1251,48,921,259,"options"],[1251,55,921,266],[1251,61,921,272],[1251,65,921,276],[1251,69,921,280,"_a"],[1251,71,921,282],[1251,76,921,287],[1251,81,921,292],[1251,82,921,293],[1251,85,921,296],[1251,90,921,301],[1251,91,921,302],[1251,94,921,305,"_a"],[1251,96,921,307],[1251,97,921,308,"redirectTo"],[1251,107,921,318],[1251,113,921,324],[1251,117,921,328],[1251,121,921,332,"_b"],[1251,123,921,334],[1251,128,921,339],[1251,133,921,344],[1251,134,921,345],[1251,137,921,348,"_b"],[1251,139,921,350],[1251,142,921,353,"undefined"],[1252,14,921,363],[1252,15,921,364],[1252,16,921,365],[1252,18,921,368],[1252,19,921,369],[1252,20,921,370,"_c"],[1252,22,921,372],[1252,25,921,375,"params"],[1252,31,921,381],[1252,36,921,386],[1252,40,921,390],[1252,44,921,394,"params"],[1252,50,921,400],[1252,55,921,405],[1252,60,921,410],[1252,61,921,411],[1252,64,921,414],[1252,69,921,419],[1252,70,921,420],[1252,73,921,423,"params"],[1252,79,921,429],[1252,80,921,430,"options"],[1252,87,921,437],[1252,93,921,443],[1252,97,921,447],[1252,101,921,451,"_c"],[1252,103,921,453],[1252,108,921,458],[1252,113,921,463],[1252,114,921,464],[1252,117,921,467],[1252,122,921,472],[1252,123,921,473],[1252,126,921,476,"_c"],[1252,128,921,478],[1252,129,921,479,"captchaToken"],[1252,141,921,491],[1252,145,922,22],[1253,16,922,24,"gotrue_meta_security"],[1253,36,922,44],[1253,38,922,46],[1254,18,922,48,"captcha_token"],[1254,31,922,61],[1254,33,922,63,"params"],[1254,39,922,69],[1254,40,922,70,"options"],[1254,47,922,77],[1254,48,922,78,"captchaToken"],[1255,16,922,91],[1256,14,922,93],[1256,15,922,94],[1256,18,923,22],[1256,22,923,27],[1256,23,923,28],[1256,25,923,30],[1257,16,923,32,"skip_http_redirect"],[1257,34,923,50],[1257,36,923,52],[1257,40,923,56],[1258,16,923,58,"code_challenge"],[1258,30,923,72],[1258,32,923,74,"codeChallenge"],[1258,45,923,87],[1259,16,923,89,"code_challenge_method"],[1259,37,923,110],[1259,39,923,112,"codeChallengeMethod"],[1260,14,923,132],[1260,15,923,133],[1260,16,923,134],[1261,14,924,16,"headers"],[1261,21,924,23],[1261,23,924,25],[1261,27,924,29],[1261,28,924,30,"headers"],[1261,35,924,37],[1262,14,925,16,"xform"],[1262,19,925,21],[1262,21,925,23,"fetch_1"],[1262,28,925,30],[1262,29,925,31,"_ssoResponse"],[1263,12,926,12],[1263,13,926,13],[1263,14,926,14],[1264,10,927,8],[1264,11,927,9],[1264,12,928,8],[1264,19,928,15,"error"],[1264,24,928,20],[1264,26,928,22],[1265,12,929,12],[1265,16,929,16],[1265,17,929,17],[1265,18,929,18],[1265,20,929,20,"errors_1"],[1265,28,929,28],[1265,29,929,29,"isAuthError"],[1265,40,929,40],[1265,42,929,42,"error"],[1265,47,929,47],[1265,48,929,48],[1265,50,929,50],[1266,14,930,16],[1266,21,930,23],[1267,16,930,25,"data"],[1267,20,930,29],[1267,22,930,31],[1267,26,930,35],[1268,16,930,37,"error"],[1269,14,930,43],[1269,15,930,44],[1270,12,931,12],[1271,12,932,12],[1271,18,932,18,"error"],[1271,23,932,23],[1272,10,933,8],[1273,8,934,4],[1273,9,934,5],[1274,8,934,5],[1274,17,911,10,"signInWithSSO"],[1274,30,911,23,"signInWithSSO"],[1274,31,911,23,"_x15"],[1274,35,911,23],[1275,10,911,23],[1275,17,911,23,"_signInWithSSO"],[1275,31,911,23],[1275,32,911,23,"apply"],[1275,37,911,23],[1275,44,911,23,"arguments"],[1275,53,911,23],[1276,8,911,23],[1277,8,911,23],[1277,15,911,10,"signInWithSSO"],[1277,28,911,23],[1278,6,911,23],[1279,6,935,4],[1280,0,936,0],[1281,0,937,0],[1282,0,938,0],[1283,6,935,4],[1284,4,935,4],[1285,6,935,4,"key"],[1285,9,935,4],[1286,6,935,4,"value"],[1286,11,935,4],[1287,8,935,4],[1287,12,935,4,"_reauthenticate2"],[1287,28,935,4],[1287,31,935,4,"_asyncToGenerator"],[1287,48,935,4],[1287,49,939,4],[1287,62,939,27],[1288,10,939,27],[1288,14,939,27,"_this5"],[1288,20,939,27],[1289,10,940,8],[1289,16,940,14],[1289,20,940,18],[1289,21,940,19,"initializePromise"],[1289,38,940,36],[1290,10,941,8],[1290,23,941,21],[1290,27,941,25],[1290,28,941,26,"_acquireLock"],[1290,40,941,38],[1290,41,941,39],[1290,42,941,40],[1290,43,941,41],[1290,58,941,41,"_asyncToGenerator"],[1290,75,941,41],[1290,76,941,43],[1290,89,941,55],[1291,12,942,12],[1291,25,942,25,"_this5"],[1291,31,942,29],[1291,32,942,30,"_reauthenticate"],[1291,47,942,45],[1291,48,942,46],[1291,49,942,47],[1292,10,943,8],[1292,11,943,9],[1292,13,943,10],[1293,8,944,4],[1293,9,944,5],[1294,8,944,5],[1294,17,939,10,"reauthenticate"],[1294,31,939,24,"reauthenticate"],[1294,32,939,24],[1295,10,939,24],[1295,17,939,24,"_reauthenticate2"],[1295,33,939,24],[1295,34,939,24,"apply"],[1295,39,939,24],[1295,46,939,24,"arguments"],[1295,55,939,24],[1296,8,939,24],[1297,8,939,24],[1297,15,939,10,"reauthenticate"],[1297,29,939,24],[1298,6,939,24],[1299,4,939,24],[1300,6,939,24,"key"],[1300,9,939,24],[1301,6,939,24,"value"],[1301,11,939,24],[1302,8,939,24],[1302,12,939,24,"_reauthenticate3"],[1302,28,939,24],[1302,31,939,24,"_asyncToGenerator"],[1302,48,939,24],[1302,49,945,4],[1302,62,945,28],[1303,10,945,28],[1303,14,945,28,"_this6"],[1303,20,945,28],[1304,10,946,8],[1304,14,946,12],[1305,12,947,12],[1305,25,947,25],[1305,29,947,29],[1305,30,947,30,"_useSession"],[1305,41,947,41],[1306,14,947,41],[1306,18,947,41,"_ref7"],[1306,23,947,41],[1306,26,947,41,"_asyncToGenerator"],[1306,43,947,41],[1306,44,947,42],[1306,55,947,49,"result"],[1306,61,947,55],[1306,63,947,60],[1307,16,948,16],[1307,20,948,32,"session"],[1307,27,948,39],[1307,30,948,68,"result"],[1307,36,948,74],[1307,37,948,24,"data"],[1307,41,948,28],[1307,42,948,32,"session"],[1307,49,948,39],[1308,18,948,50,"sessionError"],[1308,30,948,62],[1308,33,948,68,"result"],[1308,39,948,74],[1308,40,948,43,"error"],[1308,45,948,48],[1309,16,949,16],[1309,20,949,20,"sessionError"],[1309,32,949,32],[1309,34,950,20],[1309,40,950,26,"sessionError"],[1309,52,950,38],[1310,16,951,16],[1310,20,951,20],[1310,21,951,21,"session"],[1310,28,951,28],[1310,30,952,20],[1310,36,952,26],[1310,40,952,30,"errors_1"],[1310,48,952,38],[1310,49,952,39,"AuthSessionMissingError"],[1310,72,952,62],[1310,73,952,63],[1310,74,952,64],[1311,16,953,16],[1311,20,953,16,"_yield11"],[1311,28,953,16],[1311,37,953,40],[1311,38,953,41],[1311,39,953,42],[1311,41,953,44,"fetch_1"],[1311,48,953,51],[1311,49,953,52,"_request"],[1311,57,953,60],[1311,59,953,62,"_this6"],[1311,65,953,66],[1311,66,953,67,"fetch"],[1311,71,953,72],[1311,73,953,74],[1311,78,953,79],[1311,80,953,81],[1311,83,953,84,"_this6"],[1311,89,953,88],[1311,90,953,89,"url"],[1311,93,953,92],[1311,110,953,109],[1311,112,953,111],[1312,20,954,20,"headers"],[1312,27,954,27],[1312,29,954,29,"_this6"],[1312,35,954,33],[1312,36,954,34,"headers"],[1312,43,954,41],[1313,20,955,20,"jwt"],[1313,23,955,23],[1313,25,955,25,"session"],[1313,32,955,32],[1313,33,955,33,"access_token"],[1314,18,956,16],[1314,19,956,17],[1314,20,956,18],[1315,18,953,24,"error"],[1315,23,953,29],[1315,26,953,29,"_yield11"],[1315,34,953,29],[1315,35,953,24,"error"],[1315,40,953,29],[1316,16,957,16],[1316,23,957,23],[1317,18,957,25,"data"],[1317,22,957,29],[1317,24,957,31],[1318,20,957,33,"user"],[1318,24,957,37],[1318,26,957,39],[1318,30,957,43],[1319,20,957,45,"session"],[1319,27,957,52],[1319,29,957,54],[1320,18,957,59],[1320,19,957,60],[1321,18,957,62,"error"],[1322,16,957,68],[1322,17,957,69],[1323,14,958,12],[1323,15,958,13],[1324,14,958,13],[1324,31,958,13,"_x16"],[1324,35,958,13],[1325,16,958,13],[1325,23,958,13,"_ref7"],[1325,28,958,13],[1325,29,958,13,"apply"],[1325,34,958,13],[1325,41,958,13,"arguments"],[1325,50,958,13],[1326,14,958,13],[1327,12,958,13],[1327,16,958,14],[1328,10,959,8],[1328,11,959,9],[1328,12,960,8],[1328,19,960,15,"error"],[1328,24,960,20],[1328,26,960,22],[1329,12,961,12],[1329,16,961,16],[1329,17,961,17],[1329,18,961,18],[1329,20,961,20,"errors_1"],[1329,28,961,28],[1329,29,961,29,"isAuthError"],[1329,40,961,40],[1329,42,961,42,"error"],[1329,47,961,47],[1329,48,961,48],[1329,50,961,50],[1330,14,962,16],[1330,21,962,23],[1331,16,962,25,"data"],[1331,20,962,29],[1331,22,962,31],[1332,18,962,33,"user"],[1332,22,962,37],[1332,24,962,39],[1332,28,962,43],[1333,18,962,45,"session"],[1333,25,962,52],[1333,27,962,54],[1334,16,962,59],[1334,17,962,60],[1335,16,962,62,"error"],[1336,14,962,68],[1336,15,962,69],[1337,12,963,12],[1338,12,964,12],[1338,18,964,18,"error"],[1338,23,964,23],[1339,10,965,8],[1340,8,966,4],[1340,9,966,5],[1341,8,966,5],[1341,17,945,10,"_reauthenticate"],[1341,32,945,25,"_reauthenticate"],[1341,33,945,25],[1342,10,945,25],[1342,17,945,25,"_reauthenticate3"],[1342,33,945,25],[1342,34,945,25,"apply"],[1342,39,945,25],[1342,46,945,25,"arguments"],[1342,55,945,25],[1343,8,945,25],[1344,8,945,25],[1344,15,945,10,"_reauthenticate"],[1344,30,945,25],[1345,6,945,25],[1346,6,967,4],[1347,0,968,0],[1348,0,969,0],[1349,4,967,4],[1350,6,967,4,"key"],[1350,9,967,4],[1351,6,967,4,"value"],[1351,11,967,4],[1352,8,967,4],[1352,12,967,4,"_resend"],[1352,19,967,4],[1352,22,967,4,"_asyncToGenerator"],[1352,39,967,4],[1352,40,970,4],[1352,51,970,17,"credentials"],[1352,62,970,28],[1352,64,970,30],[1353,10,971,8],[1353,14,971,12],[1354,12,972,12],[1354,16,972,18,"endpoint"],[1354,24,972,26],[1354,27,972,29],[1354,30,972,32],[1354,34,972,36],[1354,35,972,37,"url"],[1354,38,972,40],[1354,47,972,49],[1355,12,973,12],[1355,16,973,16],[1355,23,973,23],[1355,27,973,27,"credentials"],[1355,38,973,38],[1355,40,973,40],[1356,14,974,16],[1356,18,974,24,"email"],[1356,23,974,29],[1356,26,974,49,"credentials"],[1356,37,974,60],[1356,38,974,24,"email"],[1356,43,974,29],[1357,16,974,31,"type"],[1357,20,974,35],[1357,23,974,49,"credentials"],[1357,34,974,60],[1357,35,974,31,"type"],[1357,39,974,35],[1358,16,974,37,"options"],[1358,23,974,44],[1358,26,974,49,"credentials"],[1358,37,974,60],[1358,38,974,37,"options"],[1358,45,974,44],[1359,14,975,16],[1359,18,975,16,"_yield12"],[1359,26,975,16],[1359,35,975,40],[1359,36,975,41],[1359,37,975,42],[1359,39,975,44,"fetch_1"],[1359,46,975,51],[1359,47,975,52,"_request"],[1359,55,975,60],[1359,57,975,62],[1359,61,975,66],[1359,62,975,67,"fetch"],[1359,67,975,72],[1359,69,975,74],[1359,75,975,80],[1359,77,975,82,"endpoint"],[1359,85,975,90],[1359,87,975,92],[1360,18,976,20,"headers"],[1360,25,976,27],[1360,27,976,29],[1360,31,976,33],[1360,32,976,34,"headers"],[1360,39,976,41],[1361,18,977,20,"body"],[1361,22,977,24],[1361,24,977,26],[1362,20,978,24,"email"],[1362,25,978,29],[1363,20,979,24,"type"],[1363,24,979,28],[1364,20,980,24,"gotrue_meta_security"],[1364,40,980,44],[1364,42,980,46],[1365,22,980,48,"captcha_token"],[1365,35,980,61],[1365,37,980,63,"options"],[1365,44,980,70],[1365,49,980,75],[1365,53,980,79],[1365,57,980,83,"options"],[1365,64,980,90],[1365,69,980,95],[1365,74,980,100],[1365,75,980,101],[1365,78,980,104],[1365,83,980,109],[1365,84,980,110],[1365,87,980,113,"options"],[1365,94,980,120],[1365,95,980,121,"captchaToken"],[1366,20,980,134],[1367,18,981,20],[1367,19,981,21],[1368,18,982,20,"redirectTo"],[1368,28,982,30],[1368,30,982,32,"options"],[1368,37,982,39],[1368,42,982,44],[1368,46,982,48],[1368,50,982,52,"options"],[1368,57,982,59],[1368,62,982,64],[1368,67,982,69],[1368,68,982,70],[1368,71,982,73],[1368,76,982,78],[1368,77,982,79],[1368,80,982,82,"options"],[1368,87,982,89],[1368,88,982,90,"emailRedirectTo"],[1369,16,983,16],[1369,17,983,17],[1369,18,983,18],[1370,16,975,24,"error"],[1370,21,975,29],[1370,24,975,29,"_yield12"],[1370,32,975,29],[1370,33,975,24,"error"],[1370,38,975,29],[1371,14,984,16],[1371,21,984,23],[1372,16,984,25,"data"],[1372,20,984,29],[1372,22,984,31],[1373,18,984,33,"user"],[1373,22,984,37],[1373,24,984,39],[1373,28,984,43],[1374,18,984,45,"session"],[1374,25,984,52],[1374,27,984,54],[1375,16,984,59],[1375,17,984,60],[1376,16,984,62,"error"],[1377,14,984,68],[1377,15,984,69],[1378,12,985,12],[1378,13,985,13],[1378,19,986,17],[1378,23,986,21],[1378,30,986,28],[1378,34,986,32,"credentials"],[1378,45,986,43],[1378,47,986,45],[1379,14,987,16],[1379,18,987,24,"phone"],[1379,23,987,29],[1379,26,987,49,"credentials"],[1379,37,987,60],[1379,38,987,24,"phone"],[1379,43,987,29],[1380,16,987,31,"type"],[1380,21,987,35],[1380,24,987,49,"credentials"],[1380,35,987,60],[1380,36,987,31,"type"],[1380,40,987,35],[1381,16,987,37,"options"],[1381,25,987,44],[1381,28,987,49,"credentials"],[1381,39,987,60],[1381,40,987,37,"options"],[1381,47,987,44],[1382,14,988,16],[1382,18,988,16,"_yield13"],[1382,26,988,16],[1382,35,988,46],[1382,36,988,47],[1382,37,988,48],[1382,39,988,50,"fetch_1"],[1382,46,988,57],[1382,47,988,58,"_request"],[1382,55,988,66],[1382,57,988,68],[1382,61,988,72],[1382,62,988,73,"fetch"],[1382,67,988,78],[1382,69,988,80],[1382,75,988,86],[1382,77,988,88,"endpoint"],[1382,85,988,96],[1382,87,988,98],[1383,18,989,20,"headers"],[1383,25,989,27],[1383,27,989,29],[1383,31,989,33],[1383,32,989,34,"headers"],[1383,39,989,41],[1384,18,990,20,"body"],[1384,22,990,24],[1384,24,990,26],[1385,20,991,24,"phone"],[1385,25,991,29],[1386,20,992,24,"type"],[1386,24,992,28],[1386,26,992,24,"type"],[1386,31,992,28],[1387,20,993,24,"gotrue_meta_security"],[1387,40,993,44],[1387,42,993,46],[1388,22,993,48,"captcha_token"],[1388,35,993,61],[1388,37,993,63,"options"],[1388,46,993,70],[1388,51,993,75],[1388,55,993,79],[1388,59,993,83,"options"],[1388,68,993,90],[1388,73,993,95],[1388,78,993,100],[1388,79,993,101],[1388,82,993,104],[1388,87,993,109],[1388,88,993,110],[1388,91,993,113,"options"],[1388,100,993,120],[1388,101,993,121,"captchaToken"],[1389,20,993,134],[1390,18,994,20],[1391,16,995,16],[1391,17,995,17],[1391,18,995,18],[1392,16,988,24,"data"],[1392,20,988,28],[1392,23,988,28,"_yield13"],[1392,31,988,28],[1392,32,988,24,"data"],[1392,36,988,28],[1393,16,988,30,"error"],[1393,23,988,35],[1393,26,988,35,"_yield13"],[1393,34,988,35],[1393,35,988,30,"error"],[1393,40,988,35],[1394,14,996,16],[1394,21,996,23],[1395,16,996,25,"data"],[1395,20,996,29],[1395,22,996,31],[1396,18,996,33,"user"],[1396,22,996,37],[1396,24,996,39],[1396,28,996,43],[1397,18,996,45,"session"],[1397,25,996,52],[1397,27,996,54],[1397,31,996,58],[1398,18,996,60,"messageId"],[1398,27,996,69],[1398,29,996,71,"data"],[1398,33,996,75],[1398,38,996,80],[1398,42,996,84],[1398,46,996,88,"data"],[1398,50,996,92],[1398,55,996,97],[1398,60,996,102],[1398,61,996,103],[1398,64,996,106],[1398,69,996,111],[1398,70,996,112],[1398,73,996,115,"data"],[1398,77,996,119],[1398,78,996,120,"message_id"],[1399,16,996,131],[1399,17,996,132],[1400,16,996,134,"error"],[1400,21,996,139],[1400,23,996,134,"error"],[1401,14,996,140],[1401,15,996,141],[1402,12,997,12],[1403,12,998,12],[1403,18,998,18],[1403,22,998,22,"errors_1"],[1403,30,998,30],[1403,31,998,31,"AuthInvalidCredentialsError"],[1403,58,998,58],[1403,59,998,59],[1403,120,998,120],[1403,121,998,121],[1404,10,999,8],[1404,11,999,9],[1404,12,1000,8],[1404,19,1000,15,"error"],[1404,24,1000,20],[1404,26,1000,22],[1405,12,1001,12],[1405,16,1001,16],[1405,17,1001,17],[1405,18,1001,18],[1405,20,1001,20,"errors_1"],[1405,28,1001,28],[1405,29,1001,29,"isAuthError"],[1405,40,1001,40],[1405,42,1001,42,"error"],[1405,47,1001,47],[1405,48,1001,48],[1405,50,1001,50],[1406,14,1002,16],[1406,21,1002,23],[1407,16,1002,25,"data"],[1407,20,1002,29],[1407,22,1002,31],[1408,18,1002,33,"user"],[1408,22,1002,37],[1408,24,1002,39],[1408,28,1002,43],[1409,18,1002,45,"session"],[1409,25,1002,52],[1409,27,1002,54],[1410,16,1002,59],[1410,17,1002,60],[1411,16,1002,62,"error"],[1412,14,1002,68],[1412,15,1002,69],[1413,12,1003,12],[1414,12,1004,12],[1414,18,1004,18,"error"],[1414,23,1004,23],[1415,10,1005,8],[1416,8,1006,4],[1416,9,1006,5],[1417,8,1006,5],[1417,17,970,10,"resend"],[1417,23,970,16,"resend"],[1417,24,970,16,"_x17"],[1417,28,970,16],[1418,10,970,16],[1418,17,970,16,"_resend"],[1418,24,970,16],[1418,25,970,16,"apply"],[1418,30,970,16],[1418,37,970,16,"arguments"],[1418,46,970,16],[1419,8,970,16],[1420,8,970,16],[1420,15,970,10,"resend"],[1420,21,970,16],[1421,6,970,16],[1422,6,1007,4],[1423,0,1008,0],[1424,0,1009,0],[1425,0,1010,0],[1426,0,1011,0],[1427,0,1012,0],[1428,0,1013,0],[1429,0,1014,0],[1430,0,1015,0],[1431,0,1016,0],[1432,0,1017,0],[1433,6,1007,4],[1434,4,1007,4],[1435,6,1007,4,"key"],[1435,9,1007,4],[1436,6,1007,4,"value"],[1436,11,1007,4],[1437,8,1007,4],[1437,12,1007,4,"_getSession"],[1437,23,1007,4],[1437,26,1007,4,"_asyncToGenerator"],[1437,43,1007,4],[1437,44,1018,4],[1437,57,1018,23],[1438,10,1018,23],[1438,14,1018,23,"_this7"],[1438,20,1018,23],[1439,10,1019,8],[1439,16,1019,14],[1439,20,1019,18],[1439,21,1019,19,"initializePromise"],[1439,38,1019,36],[1440,10,1020,8],[1440,14,1020,14,"result"],[1440,20,1020,20],[1440,29,1020,29],[1440,33,1020,33],[1440,34,1020,34,"_acquireLock"],[1440,46,1020,46],[1440,47,1020,47],[1440,48,1020,48],[1440,49,1020,49],[1440,64,1020,49,"_asyncToGenerator"],[1440,81,1020,49],[1440,82,1020,51],[1440,95,1020,63],[1441,12,1021,12],[1441,19,1021,19,"_this7"],[1441,25,1021,23],[1441,26,1021,24,"_useSession"],[1441,37,1021,35],[1442,14,1021,35],[1442,18,1021,35,"_ref9"],[1442,23,1021,35],[1442,26,1021,35,"_asyncToGenerator"],[1442,43,1021,35],[1442,44,1021,36],[1442,55,1021,43,"result"],[1442,61,1021,49],[1442,63,1021,54],[1443,16,1022,16],[1443,23,1022,23,"result"],[1443,29,1022,29],[1444,14,1023,12],[1444,15,1023,13],[1445,14,1023,13],[1445,31,1023,13,"_x18"],[1445,35,1023,13],[1446,16,1023,13],[1446,23,1023,13,"_ref9"],[1446,28,1023,13],[1446,29,1023,13,"apply"],[1446,34,1023,13],[1446,41,1023,13,"arguments"],[1446,50,1023,13],[1447,14,1023,13],[1448,12,1023,13],[1448,16,1023,14],[1449,10,1024,8],[1449,11,1024,9],[1449,13,1024,10],[1450,10,1025,8],[1450,17,1025,15,"result"],[1450,23,1025,21],[1451,8,1026,4],[1451,9,1026,5],[1452,8,1026,5],[1452,17,1018,10,"getSession"],[1452,27,1018,20,"getSession"],[1452,28,1018,20],[1453,10,1018,20],[1453,17,1018,20,"_getSession"],[1453,28,1018,20],[1453,29,1018,20,"apply"],[1453,34,1018,20],[1453,41,1018,20,"arguments"],[1453,50,1018,20],[1454,8,1018,20],[1455,8,1018,20],[1455,15,1018,10,"getSession"],[1455,25,1018,20],[1456,6,1018,20],[1457,6,1027,4],[1458,0,1028,0],[1459,0,1029,0],[1460,6,1027,4],[1461,4,1027,4],[1462,6,1027,4,"key"],[1462,9,1027,4],[1463,6,1027,4,"value"],[1463,11,1027,4],[1464,8,1027,4],[1464,12,1027,4,"_acquireLock2"],[1464,25,1027,4],[1464,28,1027,4,"_asyncToGenerator"],[1464,45,1027,4],[1464,46,1030,4],[1464,57,1030,23,"acquireTimeout"],[1464,71,1030,37],[1464,73,1030,39,"fn"],[1464,75,1030,41],[1464,77,1030,43],[1465,10,1030,43],[1465,14,1030,43,"_this8"],[1465,20,1030,43],[1466,10,1031,8],[1466,14,1031,12],[1466,15,1031,13,"_debug"],[1466,21,1031,19],[1466,22,1031,20],[1466,37,1031,35],[1466,39,1031,37],[1466,46,1031,44],[1466,48,1031,46,"acquireTimeout"],[1466,62,1031,60],[1466,63,1031,61],[1467,10,1032,8],[1467,14,1032,12],[1468,12,1033,12],[1468,16,1033,16],[1468,20,1033,20],[1468,21,1033,21,"lockAcquired"],[1468,33,1033,33],[1468,35,1033,35],[1469,14,1034,16],[1469,18,1034,22,"last"],[1469,22,1034,26],[1469,25,1034,29],[1469,29,1034,33],[1469,30,1034,34,"pendingInLock"],[1469,43,1034,47],[1469,44,1034,48,"length"],[1469,50,1034,54],[1469,53,1035,22],[1469,57,1035,26],[1469,58,1035,27,"pendingInLock"],[1469,71,1035,40],[1469,72,1035,41],[1469,76,1035,45],[1469,77,1035,46,"pendingInLock"],[1469,90,1035,59],[1469,91,1035,60,"length"],[1469,97,1035,66],[1469,100,1035,69],[1469,101,1035,70],[1469,102,1035,71],[1469,105,1036,22,"Promise"],[1469,112,1036,29],[1469,113,1036,30,"resolve"],[1469,120,1036,37],[1469,121,1036,38],[1469,122,1036,39],[1470,14,1037,16],[1470,18,1037,22,"result"],[1470,24,1037,28],[1470,27,1037,31,"_asyncToGenerator"],[1470,44,1037,31],[1470,45,1037,32],[1470,58,1037,44],[1471,16,1038,20],[1471,22,1038,26,"last"],[1471,26,1038,30],[1472,16,1039,20],[1472,29,1039,33,"fn"],[1472,31,1039,35],[1472,32,1039,36],[1472,33,1039,37],[1473,14,1040,16],[1473,15,1040,17],[1473,17,1040,19],[1473,18,1040,20],[1474,14,1041,16],[1474,18,1041,20],[1474,19,1041,21,"pendingInLock"],[1474,32,1041,34],[1474,33,1041,35,"push"],[1474,37,1041,39],[1474,38,1041,40,"_asyncToGenerator"],[1474,55,1041,40],[1474,56,1041,41],[1474,69,1041,53],[1475,16,1042,20],[1475,20,1042,24],[1476,18,1043,24],[1476,24,1043,30,"result"],[1476,30,1043,36],[1477,16,1044,20],[1477,17,1044,21],[1477,18,1045,20],[1477,25,1045,27,"e"],[1477,26,1045,28],[1477,28,1045,30],[1478,18,1046,24],[1479,16,1046,24],[1480,14,1048,16],[1480,15,1048,17],[1480,17,1048,19],[1480,18,1048,20],[1480,19,1048,21],[1481,14,1049,16],[1481,21,1049,23,"result"],[1481,27,1049,29],[1482,12,1050,12],[1483,12,1051,12],[1483,25,1051,25],[1483,29,1051,29],[1483,30,1051,30,"lock"],[1483,34,1051,34],[1483,35,1051,35],[1483,43,1051,43],[1483,47,1051,47],[1483,48,1051,48,"storageKey"],[1483,58,1051,58],[1483,60,1051,60],[1483,62,1051,62,"acquireTimeout"],[1483,76,1051,76],[1483,91,1051,76,"_asyncToGenerator"],[1483,108,1051,76],[1483,109,1051,78],[1483,122,1051,90],[1484,14,1052,16,"_this8"],[1484,20,1052,20],[1484,21,1052,21,"_debug"],[1484,27,1052,27],[1484,28,1052,28],[1484,43,1052,43],[1484,45,1052,45],[1484,76,1052,76],[1484,78,1052,78,"_this8"],[1484,84,1052,82],[1484,85,1052,83,"storageKey"],[1484,95,1052,93],[1484,96,1052,94],[1485,14,1053,16],[1485,18,1053,20],[1486,16,1054,20,"_this8"],[1486,22,1054,24],[1486,23,1054,25,"lockAcquired"],[1486,35,1054,37],[1486,38,1054,40],[1486,42,1054,44],[1487,16,1055,20],[1487,20,1055,26,"result"],[1487,27,1055,32],[1487,30,1055,35,"fn"],[1487,32,1055,37],[1487,33,1055,38],[1487,34,1055,39],[1488,16,1056,20,"_this8"],[1488,22,1056,24],[1488,23,1056,25,"pendingInLock"],[1488,36,1056,38],[1488,37,1056,39,"push"],[1488,41,1056,43],[1488,42,1056,44,"_asyncToGenerator"],[1488,59,1056,44],[1488,60,1056,45],[1488,73,1056,57],[1489,18,1057,24],[1489,22,1057,28],[1490,20,1058,28],[1490,26,1058,34,"result"],[1490,33,1058,40],[1491,18,1059,24],[1491,19,1059,25],[1491,20,1060,24],[1491,27,1060,31,"e"],[1491,28,1060,32],[1491,30,1060,34],[1492,20,1061,28],[1493,18,1061,28],[1494,16,1063,20],[1494,17,1063,21],[1494,19,1063,23],[1494,20,1063,24],[1494,21,1063,25],[1495,16,1064,20],[1495,22,1064,26,"result"],[1495,29,1064,32],[1496,16,1065,20],[1497,16,1066,20],[1497,23,1066,27,"_this8"],[1497,29,1066,31],[1497,30,1066,32,"pendingInLock"],[1497,43,1066,45],[1497,44,1066,46,"length"],[1497,50,1066,52],[1497,52,1066,54],[1498,18,1067,24],[1498,22,1067,30,"waitOn"],[1498,28,1067,36],[1498,31,1067,39],[1498,32,1067,40],[1498,35,1067,43,"_this8"],[1498,41,1067,47],[1498,42,1067,48,"pendingInLock"],[1498,55,1067,61],[1498,56,1067,62],[1499,18,1068,24],[1499,24,1068,30,"Promise"],[1499,31,1068,37],[1499,32,1068,38,"all"],[1499,35,1068,41],[1499,36,1068,42,"waitOn"],[1499,42,1068,48],[1499,43,1068,49],[1500,18,1069,24,"_this8"],[1500,24,1069,28],[1500,25,1069,29,"pendingInLock"],[1500,38,1069,42],[1500,39,1069,43,"splice"],[1500,45,1069,49],[1500,46,1069,50],[1500,47,1069,51],[1500,49,1069,53,"waitOn"],[1500,55,1069,59],[1500,56,1069,60,"length"],[1500,62,1069,66],[1500,63,1069,67],[1501,16,1070,20],[1502,16,1071,20],[1502,29,1071,33,"result"],[1502,36,1071,39],[1503,14,1072,16],[1503,15,1072,17],[1503,24,1073,24],[1504,16,1074,20,"_this8"],[1504,22,1074,24],[1504,23,1074,25,"_debug"],[1504,29,1074,31],[1504,30,1074,32],[1504,45,1074,47],[1504,47,1074,49],[1504,78,1074,80],[1504,80,1074,82,"_this8"],[1504,86,1074,86],[1504,87,1074,87,"storageKey"],[1504,97,1074,97],[1504,98,1074,98],[1505,16,1075,20,"_this8"],[1505,22,1075,24],[1505,23,1075,25,"lockAcquired"],[1505,35,1075,37],[1505,38,1075,40],[1505,43,1075,45],[1506,14,1076,16],[1507,12,1077,12],[1507,13,1077,13],[1507,15,1077,14],[1508,10,1078,8],[1508,11,1078,9],[1508,20,1079,16],[1509,12,1080,12],[1509,16,1080,16],[1509,17,1080,17,"_debug"],[1509,23,1080,23],[1509,24,1080,24],[1509,39,1080,39],[1509,41,1080,41],[1509,46,1080,46],[1509,47,1080,47],[1510,10,1081,8],[1511,8,1082,4],[1511,9,1082,5],[1512,8,1082,5],[1512,17,1030,10,"_acquireLock"],[1512,29,1030,22,"_acquireLock"],[1512,30,1030,22,"_x19"],[1512,34,1030,22],[1512,36,1030,22,"_x20"],[1512,40,1030,22],[1513,10,1030,22],[1513,17,1030,22,"_acquireLock2"],[1513,30,1030,22],[1513,31,1030,22,"apply"],[1513,36,1030,22],[1513,43,1030,22,"arguments"],[1513,52,1030,22],[1514,8,1030,22],[1515,8,1030,22],[1515,15,1030,10,"_acquireLock"],[1515,27,1030,22],[1516,6,1030,22],[1517,6,1083,4],[1518,0,1084,0],[1519,0,1085,0],[1520,0,1086,0],[1521,0,1087,0],[1522,0,1088,0],[1523,6,1083,4],[1524,4,1083,4],[1525,6,1083,4,"key"],[1525,9,1083,4],[1526,6,1083,4,"value"],[1526,11,1083,4],[1527,8,1083,4],[1527,12,1083,4,"_useSession2"],[1527,24,1083,4],[1527,27,1083,4,"_asyncToGenerator"],[1527,44,1083,4],[1527,45,1089,4],[1527,56,1089,22,"fn"],[1527,58,1089,24],[1527,60,1089,26],[1528,10,1090,8],[1528,14,1090,12],[1528,15,1090,13,"_debug"],[1528,21,1090,19],[1528,22,1090,20],[1528,36,1090,34],[1528,38,1090,36],[1528,45,1090,43],[1528,46,1090,44],[1529,10,1091,8],[1529,14,1091,12],[1530,12,1092,12],[1531,12,1093,12],[1531,16,1093,18,"result"],[1531,22,1093,24],[1531,31,1093,33],[1531,35,1093,37],[1531,36,1093,38,"__loadSession"],[1531,49,1093,51],[1531,50,1093,52],[1531,51,1093,53],[1532,12,1094,12],[1532,25,1094,25,"fn"],[1532,27,1094,27],[1532,28,1094,28,"result"],[1532,34,1094,34],[1532,35,1094,35],[1533,10,1095,8],[1533,11,1095,9],[1533,20,1096,16],[1534,12,1097,12],[1534,16,1097,16],[1534,17,1097,17,"_debug"],[1534,23,1097,23],[1534,24,1097,24],[1534,38,1097,38],[1534,40,1097,40],[1534,45,1097,45],[1534,46,1097,46],[1535,10,1098,8],[1536,8,1099,4],[1536,9,1099,5],[1537,8,1099,5],[1537,17,1089,10,"_useSession"],[1537,28,1089,21,"_useSession"],[1537,29,1089,21,"_x21"],[1537,33,1089,21],[1538,10,1089,21],[1538,17,1089,21,"_useSession2"],[1538,29,1089,21],[1538,30,1089,21,"apply"],[1538,35,1089,21],[1538,42,1089,21,"arguments"],[1538,51,1089,21],[1539,8,1089,21],[1540,8,1089,21],[1540,15,1089,10,"_useSession"],[1540,26,1089,21],[1541,6,1089,21],[1542,6,1100,4],[1543,0,1101,0],[1544,0,1102,0],[1545,0,1103,0],[1546,0,1104,0],[1547,6,1100,4],[1548,4,1100,4],[1549,6,1100,4,"key"],[1549,9,1100,4],[1550,6,1100,4,"value"],[1550,11,1100,4],[1551,8,1100,4],[1551,12,1100,4,"_loadSession"],[1551,24,1100,4],[1551,27,1100,4,"_asyncToGenerator"],[1551,44,1100,4],[1551,45,1105,4],[1551,58,1105,26],[1552,10,1106,8],[1552,14,1106,12],[1552,15,1106,13,"_debug"],[1552,21,1106,19],[1552,22,1106,20],[1552,40,1106,38],[1552,42,1106,40],[1552,49,1106,47],[1552,50,1106,48],[1553,10,1107,8],[1553,14,1107,12],[1553,15,1107,13],[1553,19,1107,17],[1553,20,1107,18,"lockAcquired"],[1553,32,1107,30],[1553,34,1107,32],[1554,12,1108,12],[1554,16,1108,16],[1554,17,1108,17,"_debug"],[1554,23,1108,23],[1554,24,1108,24],[1554,42,1108,42],[1554,44,1108,44],[1554,79,1108,79],[1554,81,1108,81],[1554,85,1108,85,"Error"],[1554,90,1108,90],[1554,91,1108,91],[1554,92,1108,92],[1554,93,1108,93,"stack"],[1554,98,1108,98],[1554,99,1108,99],[1555,10,1109,8],[1556,10,1110,8],[1556,14,1110,12],[1557,12,1111,12],[1557,16,1111,16,"currentSession"],[1557,30,1111,30],[1557,33,1111,33],[1557,37,1111,37],[1558,12,1112,12],[1558,16,1112,18,"maybeSession"],[1558,28,1112,30],[1558,37,1112,39],[1558,38,1112,40],[1558,39,1112,41],[1558,41,1112,43,"helpers_1"],[1558,50,1112,52],[1558,51,1112,53,"getItemAsync"],[1558,63,1112,65],[1558,65,1112,67],[1558,69,1112,71],[1558,70,1112,72,"storage"],[1558,77,1112,79],[1558,79,1112,81],[1558,83,1112,85],[1558,84,1112,86,"storageKey"],[1558,94,1112,96],[1558,95,1112,97],[1559,12,1113,12],[1559,16,1113,16],[1559,17,1113,17,"_debug"],[1559,23,1113,23],[1559,24,1113,24],[1559,39,1113,39],[1559,41,1113,41],[1559,63,1113,63],[1559,65,1113,65,"maybeSession"],[1559,77,1113,77],[1559,78,1113,78],[1560,12,1114,12],[1560,16,1114,16,"maybeSession"],[1560,28,1114,28],[1560,33,1114,33],[1560,37,1114,37],[1560,39,1114,39],[1561,14,1115,16],[1561,18,1115,20],[1561,22,1115,24],[1561,23,1115,25,"_isValidSession"],[1561,38,1115,40],[1561,39,1115,41,"maybeSession"],[1561,51,1115,53],[1561,52,1115,54],[1561,54,1115,56],[1562,16,1116,20,"currentSession"],[1562,30,1116,34],[1562,33,1116,37,"maybeSession"],[1562,45,1116,49],[1563,14,1117,16],[1563,15,1117,17],[1563,21,1118,21],[1564,16,1119,20],[1564,20,1119,24],[1564,21,1119,25,"_debug"],[1564,27,1119,31],[1564,28,1119,32],[1564,43,1119,47],[1564,45,1119,49],[1564,80,1119,84],[1564,81,1119,85],[1565,16,1120,20],[1565,22,1120,26],[1565,26,1120,30],[1565,27,1120,31,"_removeSession"],[1565,41,1120,45],[1565,42,1120,46],[1565,43,1120,47],[1566,14,1121,16],[1567,12,1122,12],[1568,12,1123,12],[1568,16,1123,16],[1568,17,1123,17,"currentSession"],[1568,31,1123,31],[1568,33,1123,33],[1569,14,1124,16],[1569,21,1124,23],[1570,16,1124,25,"data"],[1570,20,1124,29],[1570,22,1124,31],[1571,18,1124,33,"session"],[1571,25,1124,40],[1571,27,1124,42],[1572,16,1124,47],[1572,17,1124,48],[1573,16,1124,50,"error"],[1573,21,1124,55],[1573,23,1124,57],[1574,14,1124,62],[1574,15,1124,63],[1575,12,1125,12],[1576,12,1126,12],[1577,12,1127,12],[1578,12,1128,12],[1579,12,1129,12],[1580,12,1130,12],[1581,12,1131,12],[1581,16,1131,18,"hasExpired"],[1581,26,1131,28],[1581,29,1131,31,"currentSession"],[1581,43,1131,45],[1581,44,1131,46,"expires_at"],[1581,54,1131,56],[1581,57,1132,18,"currentSession"],[1581,71,1132,32],[1581,72,1132,33,"expires_at"],[1581,82,1132,43],[1581,85,1132,46],[1581,89,1132,50],[1581,92,1132,53,"Date"],[1581,96,1132,57],[1581,97,1132,58,"now"],[1581,100,1132,61],[1581,101,1132,62],[1581,102,1132,63],[1581,105,1132,66,"constants_1"],[1581,116,1132,77],[1581,117,1132,78,"EXPIRY_MARGIN_MS"],[1581,133,1132,94],[1581,136,1133,18],[1581,141,1133,23],[1582,12,1134,12],[1582,16,1134,16],[1582,17,1134,17,"_debug"],[1582,23,1134,23],[1582,24,1134,24],[1582,42,1134,42],[1582,44,1134,44],[1582,58,1134,58,"hasExpired"],[1582,68,1134,68],[1582,71,1134,71],[1582,73,1134,73],[1582,76,1134,76],[1582,82,1134,82],[1582,92,1134,92],[1582,94,1134,94],[1582,106,1134,106],[1582,108,1134,108,"currentSession"],[1582,122,1134,122],[1582,123,1134,123,"expires_at"],[1582,133,1134,133],[1582,134,1134,134],[1583,12,1135,12],[1583,16,1135,16],[1583,17,1135,17,"hasExpired"],[1583,27,1135,27],[1583,29,1135,29],[1584,14,1136,16],[1584,18,1136,20],[1584,22,1136,24],[1584,23,1136,25,"userStorage"],[1584,34,1136,36],[1584,36,1136,38],[1585,16,1137,20],[1585,20,1137,26,"maybeUser"],[1585,29,1137,35],[1585,38,1137,45],[1585,39,1137,46],[1585,40,1137,47],[1585,42,1137,49,"helpers_1"],[1585,51,1137,58],[1585,52,1137,59,"getItemAsync"],[1585,64,1137,71],[1585,66,1137,73],[1585,70,1137,77],[1585,71,1137,78,"userStorage"],[1585,82,1137,89],[1585,84,1137,91],[1585,88,1137,95],[1585,89,1137,96,"storageKey"],[1585,99,1137,106],[1585,102,1137,109],[1585,109,1137,116],[1585,110,1137,118],[1586,16,1138,20],[1586,20,1138,24,"maybeUser"],[1586,29,1138,33],[1586,34,1138,38],[1586,38,1138,42],[1586,42,1138,46,"maybeUser"],[1586,51,1138,55],[1586,56,1138,60],[1586,61,1138,65],[1586,62,1138,66],[1586,65,1138,69],[1586,70,1138,74],[1586,71,1138,75],[1586,74,1138,78,"maybeUser"],[1586,83,1138,87],[1586,84,1138,88,"user"],[1586,88,1138,92],[1586,90,1138,94],[1587,18,1139,24,"currentSession"],[1587,32,1139,38],[1587,33,1139,39,"user"],[1587,37,1139,43],[1587,40,1139,46,"maybeUser"],[1587,49,1139,55],[1587,50,1139,56,"user"],[1587,54,1139,60],[1588,16,1140,20],[1588,17,1140,21],[1588,23,1141,25],[1589,18,1142,24,"currentSession"],[1589,32,1142,38],[1589,33,1142,39,"user"],[1589,37,1142,43],[1589,40,1142,46],[1589,41,1142,47],[1589,42,1142,48],[1589,44,1142,50,"helpers_1"],[1589,53,1142,59],[1589,54,1142,60,"userNotAvailableProxy"],[1589,75,1142,81],[1589,77,1142,83],[1589,78,1142,84],[1590,16,1143,20],[1591,14,1144,16],[1592,14,1145,16],[1592,18,1145,20],[1592,22,1145,24],[1592,23,1145,25,"storage"],[1592,30,1145,32],[1592,31,1145,33,"isServer"],[1592,39,1145,41],[1592,43,1145,45,"currentSession"],[1592,57,1145,59],[1592,58,1145,60,"user"],[1592,62,1145,64],[1592,64,1145,66],[1593,16,1146,20],[1593,20,1146,24,"suppressWarning"],[1593,35,1146,39],[1593,38,1146,42],[1593,42,1146,46],[1593,43,1146,47,"suppressGetSessionWarning"],[1593,68,1146,72],[1594,16,1147,20],[1594,20,1147,26,"proxySession"],[1594,32,1147,38],[1594,35,1147,41],[1594,39,1147,45,"Proxy"],[1594,44,1147,50],[1594,45,1147,51,"currentSession"],[1594,59,1147,65],[1594,61,1147,67],[1595,18,1148,24,"get"],[1595,21,1148,27],[1595,23,1148,29,"get"],[1595,24,1148,30,"target"],[1595,30,1148,36],[1595,32,1148,38,"prop"],[1595,36,1148,42],[1595,38,1148,44,"receiver"],[1595,46,1148,52],[1595,51,1148,57],[1596,20,1149,28],[1596,24,1149,32],[1596,25,1149,33,"suppressWarning"],[1596,40,1149,48],[1596,44,1149,52,"prop"],[1596,48,1149,56],[1596,53,1149,61],[1596,59,1149,67],[1596,61,1149,69],[1597,22,1150,32],[1598,22,1151,32,"console"],[1598,29,1151,39],[1598,30,1151,40,"warn"],[1598,34,1151,44],[1598,35,1151,45],[1598,388,1151,398],[1598,389,1151,399],[1599,22,1152,32,"suppressWarning"],[1599,37,1152,47],[1599,40,1152,50],[1599,44,1152,54],[1599,45,1152,55],[1599,46,1152,56],[1600,22,1153,32],[1600,26,1153,36],[1600,27,1153,37,"suppressGetSessionWarning"],[1600,52,1153,62],[1600,55,1153,65],[1600,59,1153,69],[1600,60,1153,70],[1600,61,1153,71],[1601,20,1154,28],[1602,20,1155,28],[1602,27,1155,35,"Reflect"],[1602,34,1155,42],[1602,35,1155,43,"get"],[1602,38,1155,46],[1602,39,1155,47,"target"],[1602,45,1155,53],[1602,47,1155,55,"prop"],[1602,51,1155,59],[1602,53,1155,61,"receiver"],[1602,61,1155,69],[1602,62,1155,70],[1603,18,1156,24],[1604,16,1157,20],[1604,17,1157,21],[1604,18,1157,22],[1605,16,1158,20,"currentSession"],[1605,30,1158,34],[1605,33,1158,37,"proxySession"],[1605,45,1158,49],[1606,14,1159,16],[1607,14,1160,16],[1607,21,1160,23],[1608,16,1160,25,"data"],[1608,20,1160,29],[1608,22,1160,31],[1609,18,1160,33,"session"],[1609,25,1160,40],[1609,27,1160,42,"currentSession"],[1610,16,1160,57],[1610,17,1160,58],[1611,16,1160,60,"error"],[1611,21,1160,65],[1611,23,1160,67],[1612,14,1160,72],[1612,15,1160,73],[1613,12,1161,12],[1614,12,1162,12],[1614,16,1162,12,"_yield$this$_callRefr"],[1614,37,1162,12],[1614,46,1162,45],[1614,50,1162,49],[1614,51,1162,50,"_callRefreshToken"],[1614,68,1162,67],[1614,69,1162,68,"currentSession"],[1614,83,1162,82],[1614,84,1162,83,"refresh_token"],[1614,97,1162,96],[1614,98,1162,97],[1615,14,1162,20,"session"],[1615,21,1162,27],[1615,24,1162,27,"_yield$this$_callRefr"],[1615,45,1162,27],[1615,46,1162,20,"session"],[1615,53,1162,27],[1616,14,1162,29,"error"],[1616,19,1162,34],[1616,22,1162,34,"_yield$this$_callRefr"],[1616,43,1162,34],[1616,44,1162,29,"error"],[1616,49,1162,34],[1617,12,1163,12],[1617,16,1163,16,"error"],[1617,21,1163,21],[1617,23,1163,23],[1618,14,1164,16],[1618,21,1164,23],[1619,16,1164,25,"data"],[1619,20,1164,29],[1619,22,1164,31],[1620,18,1164,33,"session"],[1620,25,1164,40],[1620,27,1164,42],[1621,16,1164,47],[1621,17,1164,48],[1622,16,1164,50,"error"],[1623,14,1164,56],[1623,15,1164,57],[1624,12,1165,12],[1625,12,1166,12],[1625,19,1166,19],[1626,14,1166,21,"data"],[1626,18,1166,25],[1626,20,1166,27],[1627,16,1166,29,"session"],[1628,14,1166,37],[1628,15,1166,38],[1629,14,1166,40,"error"],[1629,19,1166,45],[1629,21,1166,47],[1630,12,1166,52],[1630,13,1166,53],[1631,10,1167,8],[1631,11,1167,9],[1631,20,1168,16],[1632,12,1169,12],[1632,16,1169,16],[1632,17,1169,17,"_debug"],[1632,23,1169,23],[1632,24,1169,24],[1632,42,1169,42],[1632,44,1169,44],[1632,49,1169,49],[1632,50,1169,50],[1633,10,1170,8],[1634,8,1171,4],[1634,9,1171,5],[1635,8,1171,5],[1635,17,1105,10,"__loadSession"],[1635,30,1105,23,"__loadSession"],[1635,31,1105,23],[1636,10,1105,23],[1636,17,1105,23,"_loadSession"],[1636,29,1105,23],[1636,30,1105,23,"apply"],[1636,35,1105,23],[1636,42,1105,23,"arguments"],[1636,51,1105,23],[1637,8,1105,23],[1638,8,1105,23],[1638,15,1105,10,"__loadSession"],[1638,28,1105,23],[1639,6,1105,23],[1640,6,1172,4],[1641,0,1173,0],[1642,0,1174,0],[1643,0,1175,0],[1644,0,1176,0],[1645,0,1177,0],[1646,0,1178,0],[1647,6,1172,4],[1648,4,1172,4],[1649,6,1172,4,"key"],[1649,9,1172,4],[1650,6,1172,4,"value"],[1650,11,1172,4],[1651,8,1172,4],[1651,12,1172,4,"_getUser2"],[1651,21,1172,4],[1651,24,1172,4,"_asyncToGenerator"],[1651,41,1172,4],[1651,42,1179,4],[1651,53,1179,18,"jwt"],[1651,56,1179,21],[1651,58,1179,23],[1652,10,1179,23],[1652,14,1179,23,"_this9"],[1652,20,1179,23],[1653,10,1180,8],[1653,14,1180,12,"jwt"],[1653,17,1180,15],[1653,19,1180,17],[1654,12,1181,12],[1654,25,1181,25],[1654,29,1181,29],[1654,30,1181,30,"_getUser"],[1654,38,1181,38],[1654,39,1181,39,"jwt"],[1654,42,1181,42],[1654,43,1181,43],[1655,10,1182,8],[1656,10,1183,8],[1656,16,1183,14],[1656,20,1183,18],[1656,21,1183,19,"initializePromise"],[1656,38,1183,36],[1657,10,1184,8],[1657,14,1184,14,"result"],[1657,20,1184,20],[1657,29,1184,29],[1657,33,1184,33],[1657,34,1184,34,"_acquireLock"],[1657,46,1184,46],[1657,47,1184,47],[1657,48,1184,48],[1657,49,1184,49],[1657,64,1184,49,"_asyncToGenerator"],[1657,81,1184,49],[1657,82,1184,51],[1657,95,1184,63],[1658,12,1185,12],[1658,25,1185,25,"_this9"],[1658,31,1185,29],[1658,32,1185,30,"_getUser"],[1658,40,1185,38],[1658,41,1185,39],[1658,42,1185,40],[1659,10,1186,8],[1659,11,1186,9],[1659,13,1186,10],[1660,10,1187,8],[1660,17,1187,15,"result"],[1660,23,1187,21],[1661,8,1188,4],[1661,9,1188,5],[1662,8,1188,5],[1662,17,1179,10,"getUser"],[1662,24,1179,17,"getUser"],[1662,25,1179,17,"_x22"],[1662,29,1179,17],[1663,10,1179,17],[1663,17,1179,17,"_getUser2"],[1663,26,1179,17],[1663,27,1179,17,"apply"],[1663,32,1179,17],[1663,39,1179,17,"arguments"],[1663,48,1179,17],[1664,8,1179,17],[1665,8,1179,17],[1665,15,1179,10,"getUser"],[1665,22,1179,17],[1666,6,1179,17],[1667,4,1179,17],[1668,6,1179,17,"key"],[1668,9,1179,17],[1669,6,1179,17,"value"],[1669,11,1179,17],[1670,8,1179,17],[1670,12,1179,17,"_getUser3"],[1670,21,1179,17],[1670,24,1179,17,"_asyncToGenerator"],[1670,41,1179,17],[1670,42,1189,4],[1670,53,1189,19,"jwt"],[1670,56,1189,22],[1670,58,1189,24],[1671,10,1189,24],[1671,14,1189,24,"_this0"],[1671,20,1189,24],[1672,10,1190,8],[1672,14,1190,12],[1673,12,1191,12],[1673,16,1191,16,"jwt"],[1673,19,1191,19],[1673,21,1191,21],[1674,14,1192,16],[1674,27,1192,29],[1674,28,1192,30],[1674,29,1192,31],[1674,31,1192,33,"fetch_1"],[1674,38,1192,40],[1674,39,1192,41,"_request"],[1674,47,1192,49],[1674,49,1192,51],[1674,53,1192,55],[1674,54,1192,56,"fetch"],[1674,59,1192,61],[1674,61,1192,63],[1674,66,1192,68],[1674,68,1192,70],[1674,71,1192,73],[1674,75,1192,77],[1674,76,1192,78,"url"],[1674,79,1192,81],[1674,86,1192,88],[1674,88,1192,90],[1675,16,1193,20,"headers"],[1675,23,1193,27],[1675,25,1193,29],[1675,29,1193,33],[1675,30,1193,34,"headers"],[1675,37,1193,41],[1676,16,1194,20,"jwt"],[1676,19,1194,23],[1676,21,1194,25,"jwt"],[1676,24,1194,28],[1677,16,1195,20,"xform"],[1677,21,1195,25],[1677,23,1195,27,"fetch_1"],[1677,30,1195,34],[1677,31,1195,35,"_userResponse"],[1678,14,1196,16],[1678,15,1196,17],[1678,16,1196,18],[1679,12,1197,12],[1680,12,1198,12],[1680,25,1198,25],[1680,29,1198,29],[1680,30,1198,30,"_useSession"],[1680,41,1198,41],[1681,14,1198,41],[1681,18,1198,41,"_ref13"],[1681,24,1198,41],[1681,27,1198,41,"_asyncToGenerator"],[1681,44,1198,41],[1681,45,1198,42],[1681,56,1198,49,"result"],[1681,62,1198,55],[1681,64,1198,60],[1682,16,1199,16],[1682,20,1199,20,"_a"],[1682,22,1199,22],[1682,24,1199,24,"_b"],[1682,26,1199,26],[1682,28,1199,28,"_c"],[1682,30,1199,30],[1683,16,1200,16],[1683,20,1200,24,"data"],[1683,24,1200,28],[1683,27,1200,40,"result"],[1683,33,1200,46],[1683,34,1200,24,"data"],[1683,38,1200,28],[1684,18,1200,30,"error"],[1684,23,1200,35],[1684,26,1200,40,"result"],[1684,32,1200,46],[1684,33,1200,30,"error"],[1684,38,1200,35],[1685,16,1201,16],[1685,20,1201,20,"error"],[1685,25,1201,25],[1685,27,1201,27],[1686,18,1202,20],[1686,24,1202,26,"error"],[1686,29,1202,31],[1687,16,1203,16],[1688,16,1204,16],[1689,16,1205,16],[1689,20,1205,20],[1689,22,1205,22],[1689,23,1205,23,"_a"],[1689,25,1205,25],[1689,28,1205,28,"data"],[1689,32,1205,32],[1689,33,1205,33,"session"],[1689,40,1205,40],[1689,46,1205,46],[1689,50,1205,50],[1689,54,1205,54,"_a"],[1689,56,1205,56],[1689,61,1205,61],[1689,66,1205,66],[1689,67,1205,67],[1689,70,1205,70],[1689,75,1205,75],[1689,76,1205,76],[1689,79,1205,79,"_a"],[1689,81,1205,81],[1689,82,1205,82,"access_token"],[1689,94,1205,94],[1689,95,1205,95],[1689,99,1205,99],[1689,100,1205,100,"_this0"],[1689,106,1205,104],[1689,107,1205,105,"hasCustomAuthorizationHeader"],[1689,135,1205,133],[1689,137,1205,135],[1690,18,1206,20],[1690,25,1206,27],[1691,20,1206,29,"data"],[1691,24,1206,33],[1691,26,1206,35],[1692,22,1206,37,"user"],[1692,26,1206,41],[1692,28,1206,43],[1693,20,1206,48],[1693,21,1206,49],[1694,20,1206,51,"error"],[1694,25,1206,56],[1694,27,1206,58],[1694,31,1206,62,"errors_1"],[1694,39,1206,70],[1694,40,1206,71,"AuthSessionMissingError"],[1694,63,1206,94],[1694,64,1206,95],[1695,18,1206,97],[1695,19,1206,98],[1696,16,1207,16],[1697,16,1208,16],[1697,29,1208,29],[1697,30,1208,30],[1697,31,1208,31],[1697,33,1208,33,"fetch_1"],[1697,40,1208,40],[1697,41,1208,41,"_request"],[1697,49,1208,49],[1697,51,1208,51,"_this0"],[1697,57,1208,55],[1697,58,1208,56,"fetch"],[1697,63,1208,61],[1697,65,1208,63],[1697,70,1208,68],[1697,72,1208,70],[1697,75,1208,73,"_this0"],[1697,81,1208,77],[1697,82,1208,78,"url"],[1697,85,1208,81],[1697,92,1208,88],[1697,94,1208,90],[1698,18,1209,20,"headers"],[1698,25,1209,27],[1698,27,1209,29,"_this0"],[1698,33,1209,33],[1698,34,1209,34,"headers"],[1698,41,1209,41],[1699,18,1210,20,"jwt"],[1699,21,1210,23],[1699,23,1210,25],[1699,24,1210,26,"_c"],[1699,26,1210,28],[1699,29,1210,31],[1699,30,1210,32,"_b"],[1699,32,1210,34],[1699,35,1210,37,"data"],[1699,39,1210,41],[1699,40,1210,42,"session"],[1699,47,1210,49],[1699,53,1210,55],[1699,57,1210,59],[1699,61,1210,63,"_b"],[1699,63,1210,65],[1699,68,1210,70],[1699,73,1210,75],[1699,74,1210,76],[1699,77,1210,79],[1699,82,1210,84],[1699,83,1210,85],[1699,86,1210,88,"_b"],[1699,88,1210,90],[1699,89,1210,91,"access_token"],[1699,101,1210,103],[1699,107,1210,109],[1699,111,1210,113],[1699,115,1210,117,"_c"],[1699,117,1210,119],[1699,122,1210,124],[1699,127,1210,129],[1699,128,1210,130],[1699,131,1210,133,"_c"],[1699,133,1210,135],[1699,136,1210,138,"undefined"],[1699,145,1210,147],[1700,18,1211,20,"xform"],[1700,23,1211,25],[1700,25,1211,27,"fetch_1"],[1700,32,1211,34],[1700,33,1211,35,"_userResponse"],[1701,16,1212,16],[1701,17,1212,17],[1701,18,1212,18],[1702,14,1213,12],[1702,15,1213,13],[1703,14,1213,13],[1703,31,1213,13,"_x24"],[1703,35,1213,13],[1704,16,1213,13],[1704,23,1213,13,"_ref13"],[1704,29,1213,13],[1704,30,1213,13,"apply"],[1704,35,1213,13],[1704,42,1213,13,"arguments"],[1704,51,1213,13],[1705,14,1213,13],[1706,12,1213,13],[1706,16,1213,14],[1707,10,1214,8],[1707,11,1214,9],[1707,12,1215,8],[1707,19,1215,15,"error"],[1707,24,1215,20],[1707,26,1215,22],[1708,12,1216,12],[1708,16,1216,16],[1708,17,1216,17],[1708,18,1216,18],[1708,20,1216,20,"errors_1"],[1708,28,1216,28],[1708,29,1216,29,"isAuthError"],[1708,40,1216,40],[1708,42,1216,42,"error"],[1708,47,1216,47],[1708,48,1216,48],[1708,50,1216,50],[1709,14,1217,16],[1709,18,1217,20],[1709,19,1217,21],[1709,20,1217,22],[1709,22,1217,24,"errors_1"],[1709,30,1217,32],[1709,31,1217,33,"isAuthSessionMissingError"],[1709,56,1217,58],[1709,58,1217,60,"error"],[1709,63,1217,65],[1709,64,1217,66],[1709,66,1217,68],[1710,16,1218,20],[1711,16,1219,20],[1712,16,1220,20],[1712,22,1220,26],[1712,26,1220,30],[1712,27,1220,31,"_removeSession"],[1712,41,1220,45],[1712,42,1220,46],[1712,43,1220,47],[1713,16,1221,20],[1713,22,1221,26],[1713,23,1221,27],[1713,24,1221,28],[1713,26,1221,30,"helpers_1"],[1713,35,1221,39],[1713,36,1221,40,"removeItemAsync"],[1713,51,1221,55],[1713,53,1221,57],[1713,57,1221,61],[1713,58,1221,62,"storage"],[1713,65,1221,69],[1713,67,1221,71],[1713,70,1221,74],[1713,74,1221,78],[1713,75,1221,79,"storageKey"],[1713,85,1221,89],[1713,101,1221,105],[1713,102,1221,106],[1714,14,1222,16],[1715,14,1223,16],[1715,21,1223,23],[1716,16,1223,25,"data"],[1716,20,1223,29],[1716,22,1223,31],[1717,18,1223,33,"user"],[1717,22,1223,37],[1717,24,1223,39],[1718,16,1223,44],[1718,17,1223,45],[1719,16,1223,47,"error"],[1720,14,1223,53],[1720,15,1223,54],[1721,12,1224,12],[1722,12,1225,12],[1722,18,1225,18,"error"],[1722,23,1225,23],[1723,10,1226,8],[1724,8,1227,4],[1724,9,1227,5],[1725,8,1227,5],[1725,17,1189,10,"_getUser"],[1725,25,1189,18,"_getUser"],[1725,26,1189,18,"_x23"],[1725,30,1189,18],[1726,10,1189,18],[1726,17,1189,18,"_getUser3"],[1726,26,1189,18],[1726,27,1189,18,"apply"],[1726,32,1189,18],[1726,39,1189,18,"arguments"],[1726,48,1189,18],[1727,8,1189,18],[1728,8,1189,18],[1728,15,1189,10,"_getUser"],[1728,23,1189,18],[1729,6,1189,18],[1730,6,1228,4],[1731,0,1229,0],[1732,0,1230,0],[1733,4,1228,4],[1734,6,1228,4,"key"],[1734,9,1228,4],[1735,6,1228,4,"value"],[1735,11,1228,4],[1736,8,1228,4],[1736,12,1228,4,"_updateUser2"],[1736,24,1228,4],[1736,27,1228,4,"_asyncToGenerator"],[1736,44,1228,4],[1736,45,1231,4],[1736,56,1231,21,"attributes"],[1736,66,1231,31],[1736,68,1231,47],[1737,10,1231,47],[1737,14,1231,47,"_this1"],[1737,20,1231,47],[1738,10,1231,47],[1738,14,1231,33,"options"],[1738,21,1231,40],[1738,24,1231,40,"arguments"],[1738,33,1231,40],[1738,34,1231,40,"length"],[1738,40,1231,40],[1738,48,1231,40,"arguments"],[1738,57,1231,40],[1738,65,1231,40,"undefined"],[1738,74,1231,40],[1738,77,1231,40,"arguments"],[1738,86,1231,40],[1738,92,1231,43],[1738,93,1231,44],[1738,94,1231,45],[1739,10,1232,8],[1739,16,1232,14],[1739,20,1232,18],[1739,21,1232,19,"initializePromise"],[1739,38,1232,36],[1740,10,1233,8],[1740,23,1233,21],[1740,27,1233,25],[1740,28,1233,26,"_acquireLock"],[1740,40,1233,38],[1740,41,1233,39],[1740,42,1233,40],[1740,43,1233,41],[1740,58,1233,41,"_asyncToGenerator"],[1740,75,1233,41],[1740,76,1233,43],[1740,89,1233,55],[1741,12,1234,12],[1741,25,1234,25,"_this1"],[1741,31,1234,29],[1741,32,1234,30,"_updateUser"],[1741,43,1234,41],[1741,44,1234,42,"attributes"],[1741,54,1234,52],[1741,56,1234,54,"options"],[1741,63,1234,61],[1741,64,1234,62],[1742,10,1235,8],[1742,11,1235,9],[1742,13,1235,10],[1743,8,1236,4],[1743,9,1236,5],[1744,8,1236,5],[1744,17,1231,10,"updateUser"],[1744,27,1231,20,"updateUser"],[1744,28,1231,20,"_x25"],[1744,32,1231,20],[1745,10,1231,20],[1745,17,1231,20,"_updateUser2"],[1745,29,1231,20],[1745,30,1231,20,"apply"],[1745,35,1231,20],[1745,42,1231,20,"arguments"],[1745,51,1231,20],[1746,8,1231,20],[1747,8,1231,20],[1747,15,1231,10,"updateUser"],[1747,25,1231,20],[1748,6,1231,20],[1749,4,1231,20],[1750,6,1231,20,"key"],[1750,9,1231,20],[1751,6,1231,20,"value"],[1751,11,1231,20],[1752,8,1231,20],[1752,12,1231,20,"_updateUser3"],[1752,24,1231,20],[1752,27,1231,20,"_asyncToGenerator"],[1752,44,1231,20],[1752,45,1237,4],[1752,56,1237,22,"attributes"],[1752,66,1237,32],[1752,68,1237,48],[1753,10,1237,48],[1753,14,1237,48,"_this10"],[1753,21,1237,48],[1754,10,1237,48],[1754,14,1237,34,"options"],[1754,21,1237,41],[1754,24,1237,41,"arguments"],[1754,33,1237,41],[1754,34,1237,41,"length"],[1754,40,1237,41],[1754,48,1237,41,"arguments"],[1754,57,1237,41],[1754,65,1237,41,"undefined"],[1754,74,1237,41],[1754,77,1237,41,"arguments"],[1754,86,1237,41],[1754,92,1237,44],[1754,93,1237,45],[1754,94,1237,46],[1755,10,1238,8],[1755,14,1238,12],[1756,12,1239,12],[1756,25,1239,25],[1756,29,1239,29],[1756,30,1239,30,"_useSession"],[1756,41,1239,41],[1757,14,1239,41],[1757,18,1239,41,"_ref15"],[1757,24,1239,41],[1757,27,1239,41,"_asyncToGenerator"],[1757,44,1239,41],[1757,45,1239,42],[1757,56,1239,49,"result"],[1757,62,1239,55],[1757,64,1239,60],[1758,16,1240,16],[1758,20,1240,30,"sessionData"],[1758,31,1240,41],[1758,34,1240,67,"result"],[1758,40,1240,73],[1758,41,1240,24,"data"],[1758,45,1240,28],[1759,18,1240,50,"sessionError"],[1759,30,1240,62],[1759,33,1240,67,"result"],[1759,39,1240,73],[1759,40,1240,43,"error"],[1759,45,1240,48],[1760,16,1241,16],[1760,20,1241,20,"sessionError"],[1760,32,1241,32],[1760,34,1241,34],[1761,18,1242,20],[1761,24,1242,26,"sessionError"],[1761,36,1242,38],[1762,16,1243,16],[1763,16,1244,16],[1763,20,1244,20],[1763,21,1244,21,"sessionData"],[1763,32,1244,32],[1763,33,1244,33,"session"],[1763,40,1244,40],[1763,42,1244,42],[1764,18,1245,20],[1764,24,1245,26],[1764,28,1245,30,"errors_1"],[1764,36,1245,38],[1764,37,1245,39,"AuthSessionMissingError"],[1764,60,1245,62],[1764,61,1245,63],[1764,62,1245,64],[1765,16,1246,16],[1766,16,1247,16],[1766,20,1247,22,"session"],[1766,27,1247,29],[1766,30,1247,32,"sessionData"],[1766,41,1247,43],[1766,42,1247,44,"session"],[1766,49,1247,51],[1767,16,1248,16],[1767,20,1248,20,"codeChallenge"],[1767,33,1248,33],[1767,36,1248,36],[1767,40,1248,40],[1768,16,1249,16],[1768,20,1249,20,"codeChallengeMethod"],[1768,39,1249,39],[1768,42,1249,42],[1768,46,1249,46],[1769,16,1250,16],[1769,20,1250,20,"_this10"],[1769,27,1250,24],[1769,28,1250,25,"flowType"],[1769,36,1250,33],[1769,41,1250,38],[1769,47,1250,44],[1769,51,1250,48,"attributes"],[1769,61,1250,58],[1769,62,1250,59,"email"],[1769,67,1250,64],[1769,71,1250,68],[1769,75,1250,72],[1769,77,1250,74],[1770,18,1251,20],[1771,18,1251,21],[1771,22,1251,21,"_yield14"],[1771,30,1251,21],[1771,39,1252,65],[1771,40,1252,66],[1771,41,1252,67],[1771,43,1252,69,"helpers_1"],[1771,52,1252,78],[1771,53,1252,79,"getCodeChallengeAndMethod"],[1771,78,1252,104],[1771,80,1252,106,"_this10"],[1771,87,1252,110],[1771,88,1252,111,"storage"],[1771,95,1252,118],[1771,97,1252,120,"_this10"],[1771,104,1252,124],[1771,105,1252,125,"storageKey"],[1771,115,1252,135],[1771,116,1252,136],[1772,18,1252,136],[1772,22,1252,136,"_yield15"],[1772,30,1252,136],[1772,33,1252,136,"_slicedToArray"],[1772,47,1252,136],[1772,48,1252,136,"_yield14"],[1772,56,1252,136],[1773,18,1252,21,"codeChallenge"],[1773,31,1252,34],[1773,34,1252,34,"_yield15"],[1773,42,1252,34],[1774,18,1252,36,"codeChallengeMethod"],[1774,37,1252,55],[1774,40,1252,55,"_yield15"],[1774,48,1252,55],[1775,16,1253,16],[1776,16,1254,16],[1776,20,1254,16,"_yield16"],[1776,28,1254,16],[1776,37,1254,57],[1776,38,1254,58],[1776,39,1254,59],[1776,41,1254,61,"fetch_1"],[1776,48,1254,68],[1776,49,1254,69,"_request"],[1776,57,1254,77],[1776,59,1254,79,"_this10"],[1776,66,1254,83],[1776,67,1254,84,"fetch"],[1776,72,1254,89],[1776,74,1254,91],[1776,79,1254,96],[1776,81,1254,98],[1776,84,1254,101,"_this10"],[1776,91,1254,105],[1776,92,1254,106,"url"],[1776,95,1254,109],[1776,102,1254,116],[1776,104,1254,118],[1777,20,1255,20,"headers"],[1777,27,1255,27],[1777,29,1255,29,"_this10"],[1777,36,1255,33],[1777,37,1255,34,"headers"],[1777,44,1255,41],[1778,20,1256,20,"redirectTo"],[1778,30,1256,30],[1778,32,1256,32,"options"],[1778,39,1256,39],[1778,44,1256,44],[1778,48,1256,48],[1778,52,1256,52,"options"],[1778,59,1256,59],[1778,64,1256,64],[1778,69,1256,69],[1778,70,1256,70],[1778,73,1256,73],[1778,78,1256,78],[1778,79,1256,79],[1778,82,1256,82,"options"],[1778,89,1256,89],[1778,90,1256,90,"emailRedirectTo"],[1778,105,1256,105],[1779,20,1257,20,"body"],[1779,24,1257,24],[1779,26,1257,26,"Object"],[1779,32,1257,32],[1779,33,1257,33,"assign"],[1779,39,1257,39],[1779,40,1257,40,"Object"],[1779,46,1257,46],[1779,47,1257,47,"assign"],[1779,53,1257,53],[1779,54,1257,54],[1779,55,1257,55],[1779,56,1257,56],[1779,58,1257,58,"attributes"],[1779,68,1257,68],[1779,69,1257,69],[1779,71,1257,71],[1780,22,1257,73,"code_challenge"],[1780,36,1257,87],[1780,38,1257,89,"codeChallenge"],[1780,51,1257,102],[1781,22,1257,104,"code_challenge_method"],[1781,43,1257,125],[1781,45,1257,127,"codeChallengeMethod"],[1782,20,1257,147],[1782,21,1257,148],[1782,22,1257,149],[1783,20,1258,20,"jwt"],[1783,23,1258,23],[1783,25,1258,25,"session"],[1783,32,1258,32],[1783,33,1258,33,"access_token"],[1783,45,1258,45],[1784,20,1259,20,"xform"],[1784,25,1259,25],[1784,27,1259,27,"fetch_1"],[1784,34,1259,34],[1784,35,1259,35,"_userResponse"],[1785,18,1260,16],[1785,19,1260,17],[1785,20,1260,18],[1786,18,1254,24,"data"],[1786,22,1254,28],[1786,25,1254,28,"_yield16"],[1786,33,1254,28],[1786,34,1254,24,"data"],[1786,38,1254,28],[1787,18,1254,37,"userError"],[1787,27,1254,46],[1787,30,1254,46,"_yield16"],[1787,38,1254,46],[1787,39,1254,30,"error"],[1787,44,1254,35],[1788,16,1261,16],[1788,20,1261,20,"userError"],[1788,29,1261,29],[1788,31,1262,20],[1788,37,1262,26,"userError"],[1788,46,1262,35],[1789,16,1263,16,"session"],[1789,23,1263,23],[1789,24,1263,24,"user"],[1789,28,1263,28],[1789,31,1263,31,"data"],[1789,35,1263,35],[1789,36,1263,36,"user"],[1789,40,1263,40],[1790,16,1264,16],[1790,22,1264,22,"_this10"],[1790,29,1264,26],[1790,30,1264,27,"_saveSession"],[1790,42,1264,39],[1790,43,1264,40,"session"],[1790,50,1264,47],[1790,51,1264,48],[1791,16,1265,16],[1791,22,1265,22,"_this10"],[1791,29,1265,26],[1791,30,1265,27,"_notifyAllSubscribers"],[1791,51,1265,48],[1791,52,1265,49],[1791,66,1265,63],[1791,68,1265,65,"session"],[1791,75,1265,72],[1791,76,1265,73],[1792,16,1266,16],[1792,23,1266,23],[1793,18,1266,25,"data"],[1793,22,1266,29],[1793,24,1266,31],[1794,20,1266,33,"user"],[1794,24,1266,37],[1794,26,1266,39,"session"],[1794,33,1266,46],[1794,34,1266,47,"user"],[1795,18,1266,52],[1795,19,1266,53],[1796,18,1266,55,"error"],[1796,23,1266,60],[1796,25,1266,62],[1797,16,1266,67],[1797,17,1266,68],[1798,14,1267,12],[1798,15,1267,13],[1799,14,1267,13],[1799,31,1267,13,"_x27"],[1799,35,1267,13],[1800,16,1267,13],[1800,23,1267,13,"_ref15"],[1800,29,1267,13],[1800,30,1267,13,"apply"],[1800,35,1267,13],[1800,42,1267,13,"arguments"],[1800,51,1267,13],[1801,14,1267,13],[1802,12,1267,13],[1802,16,1267,14],[1803,10,1268,8],[1803,11,1268,9],[1803,12,1269,8],[1803,19,1269,15,"error"],[1803,24,1269,20],[1803,26,1269,22],[1804,12,1270,12],[1804,16,1270,16],[1804,17,1270,17],[1804,18,1270,18],[1804,20,1270,20,"errors_1"],[1804,28,1270,28],[1804,29,1270,29,"isAuthError"],[1804,40,1270,40],[1804,42,1270,42,"error"],[1804,47,1270,47],[1804,48,1270,48],[1804,50,1270,50],[1805,14,1271,16],[1805,21,1271,23],[1806,16,1271,25,"data"],[1806,20,1271,29],[1806,22,1271,31],[1807,18,1271,33,"user"],[1807,22,1271,37],[1807,24,1271,39],[1808,16,1271,44],[1808,17,1271,45],[1809,16,1271,47,"error"],[1810,14,1271,53],[1810,15,1271,54],[1811,12,1272,12],[1812,12,1273,12],[1812,18,1273,18,"error"],[1812,23,1273,23],[1813,10,1274,8],[1814,8,1275,4],[1814,9,1275,5],[1815,8,1275,5],[1815,17,1237,10,"_updateUser"],[1815,28,1237,21,"_updateUser"],[1815,29,1237,21,"_x26"],[1815,33,1237,21],[1816,10,1237,21],[1816,17,1237,21,"_updateUser3"],[1816,29,1237,21],[1816,30,1237,21,"apply"],[1816,35,1237,21],[1816,42,1237,21,"arguments"],[1816,51,1237,21],[1817,8,1237,21],[1818,8,1237,21],[1818,15,1237,10,"_updateUser"],[1818,26,1237,21],[1819,6,1237,21],[1820,6,1276,4],[1821,0,1277,0],[1822,0,1278,0],[1823,0,1279,0],[1824,0,1280,0],[1825,4,1276,4],[1826,6,1276,4,"key"],[1826,9,1276,4],[1827,6,1276,4,"value"],[1827,11,1276,4],[1828,8,1276,4],[1828,12,1276,4,"_setSession2"],[1828,24,1276,4],[1828,27,1276,4,"_asyncToGenerator"],[1828,44,1276,4],[1828,45,1281,4],[1828,56,1281,21,"currentSession"],[1828,70,1281,35],[1828,72,1281,37],[1829,10,1281,37],[1829,14,1281,37,"_this11"],[1829,21,1281,37],[1830,10,1282,8],[1830,16,1282,14],[1830,20,1282,18],[1830,21,1282,19,"initializePromise"],[1830,38,1282,36],[1831,10,1283,8],[1831,23,1283,21],[1831,27,1283,25],[1831,28,1283,26,"_acquireLock"],[1831,40,1283,38],[1831,41,1283,39],[1831,42,1283,40],[1831,43,1283,41],[1831,58,1283,41,"_asyncToGenerator"],[1831,75,1283,41],[1831,76,1283,43],[1831,89,1283,55],[1832,12,1284,12],[1832,25,1284,25,"_this11"],[1832,32,1284,29],[1832,33,1284,30,"_setSession"],[1832,44,1284,41],[1832,45,1284,42,"currentSession"],[1832,59,1284,56],[1832,60,1284,57],[1833,10,1285,8],[1833,11,1285,9],[1833,13,1285,10],[1834,8,1286,4],[1834,9,1286,5],[1835,8,1286,5],[1835,17,1281,10,"setSession"],[1835,27,1281,20,"setSession"],[1835,28,1281,20,"_x28"],[1835,32,1281,20],[1836,10,1281,20],[1836,17,1281,20,"_setSession2"],[1836,29,1281,20],[1836,30,1281,20,"apply"],[1836,35,1281,20],[1836,42,1281,20,"arguments"],[1836,51,1281,20],[1837,8,1281,20],[1838,8,1281,20],[1838,15,1281,10,"setSession"],[1838,25,1281,20],[1839,6,1281,20],[1840,4,1281,20],[1841,6,1281,20,"key"],[1841,9,1281,20],[1842,6,1281,20,"value"],[1842,11,1281,20],[1843,8,1281,20],[1843,12,1281,20,"_setSession3"],[1843,24,1281,20],[1843,27,1281,20,"_asyncToGenerator"],[1843,44,1281,20],[1843,45,1287,4],[1843,56,1287,22,"currentSession"],[1843,70,1287,36],[1843,72,1287,38],[1844,10,1288,8],[1844,14,1288,12],[1845,12,1289,12],[1845,16,1289,16],[1845,17,1289,17,"currentSession"],[1845,31,1289,31],[1845,32,1289,32,"access_token"],[1845,44,1289,44],[1845,48,1289,48],[1845,49,1289,49,"currentSession"],[1845,63,1289,63],[1845,64,1289,64,"refresh_token"],[1845,77,1289,77],[1845,79,1289,79],[1846,14,1290,16],[1846,20,1290,22],[1846,24,1290,26,"errors_1"],[1846,32,1290,34],[1846,33,1290,35,"AuthSessionMissingError"],[1846,56,1290,58],[1846,57,1290,59],[1846,58,1290,60],[1847,12,1291,12],[1848,12,1292,12],[1848,16,1292,18,"timeNow"],[1848,23,1292,25],[1848,26,1292,28,"Date"],[1848,30,1292,32],[1848,31,1292,33,"now"],[1848,34,1292,36],[1848,35,1292,37],[1848,36,1292,38],[1848,39,1292,41],[1848,43,1292,45],[1849,12,1293,12],[1849,16,1293,16,"expiresAt"],[1849,25,1293,25],[1849,28,1293,28,"timeNow"],[1849,35,1293,35],[1850,12,1294,12],[1850,16,1294,16,"hasExpired"],[1850,26,1294,26],[1850,29,1294,29],[1850,33,1294,33],[1851,12,1295,12],[1851,16,1295,16,"session"],[1851,23,1295,23],[1851,26,1295,26],[1851,30,1295,30],[1852,12,1296,12],[1852,16,1296,12,"_ref17"],[1852,22,1296,12],[1852,25,1296,32],[1852,26,1296,33],[1852,27,1296,34],[1852,29,1296,36,"helpers_1"],[1852,38,1296,45],[1852,39,1296,46,"decodeJWT"],[1852,48,1296,55],[1852,50,1296,57,"currentSession"],[1852,64,1296,71],[1852,65,1296,72,"access_token"],[1852,77,1296,84],[1852,78,1296,85],[1853,14,1296,20,"payload"],[1853,21,1296,27],[1853,24,1296,27,"_ref17"],[1853,30,1296,27],[1853,31,1296,20,"payload"],[1853,38,1296,27],[1854,12,1297,12],[1854,16,1297,16,"payload"],[1854,23,1297,23],[1854,24,1297,24,"exp"],[1854,27,1297,27],[1854,29,1297,29],[1855,14,1298,16,"expiresAt"],[1855,23,1298,25],[1855,26,1298,28,"payload"],[1855,33,1298,35],[1855,34,1298,36,"exp"],[1855,37,1298,39],[1856,14,1299,16,"hasExpired"],[1856,24,1299,26],[1856,27,1299,29,"expiresAt"],[1856,36,1299,38],[1856,40,1299,42,"timeNow"],[1856,47,1299,49],[1857,12,1300,12],[1858,12,1301,12],[1858,16,1301,16,"hasExpired"],[1858,26,1301,26],[1858,28,1301,28],[1859,14,1302,16],[1859,18,1302,16,"_yield$this$_callRefr2"],[1859,40,1302,16],[1859,49,1302,67],[1859,53,1302,71],[1859,54,1302,72,"_callRefreshToken"],[1859,71,1302,89],[1859,72,1302,90,"currentSession"],[1859,86,1302,104],[1859,87,1302,105,"refresh_token"],[1859,100,1302,118],[1859,101,1302,119],[1860,16,1302,33,"refreshedSession"],[1860,32,1302,49],[1860,35,1302,49,"_yield$this$_callRefr2"],[1860,57,1302,49],[1860,58,1302,24,"session"],[1860,65,1302,31],[1861,16,1302,51,"error"],[1861,21,1302,56],[1861,24,1302,56,"_yield$this$_callRefr2"],[1861,46,1302,56],[1861,47,1302,51,"error"],[1861,52,1302,56],[1862,14,1303,16],[1862,18,1303,20,"error"],[1862,23,1303,25],[1862,25,1303,27],[1863,16,1304,20],[1863,23,1304,27],[1864,18,1304,29,"data"],[1864,22,1304,33],[1864,24,1304,35],[1865,20,1304,37,"user"],[1865,24,1304,41],[1865,26,1304,43],[1865,30,1304,47],[1866,20,1304,49,"session"],[1866,27,1304,56],[1866,29,1304,58],[1867,18,1304,63],[1867,19,1304,64],[1868,18,1304,66,"error"],[1868,23,1304,71],[1868,25,1304,73,"error"],[1869,16,1304,79],[1869,17,1304,80],[1870,14,1305,16],[1871,14,1306,16],[1871,18,1306,20],[1871,19,1306,21,"refreshedSession"],[1871,35,1306,37],[1871,37,1306,39],[1872,16,1307,20],[1872,23,1307,27],[1873,18,1307,29,"data"],[1873,22,1307,33],[1873,24,1307,35],[1874,20,1307,37,"user"],[1874,24,1307,41],[1874,26,1307,43],[1874,30,1307,47],[1875,20,1307,49,"session"],[1875,27,1307,56],[1875,29,1307,58],[1876,18,1307,63],[1876,19,1307,64],[1877,18,1307,66,"error"],[1877,23,1307,71],[1877,25,1307,73],[1878,16,1307,78],[1878,17,1307,79],[1879,14,1308,16],[1880,14,1309,16,"session"],[1880,21,1309,23],[1880,24,1309,26,"refreshedSession"],[1880,40,1309,42],[1881,12,1310,12],[1881,13,1310,13],[1881,19,1311,17],[1882,14,1312,16],[1882,18,1312,16,"_yield$this$_getUser"],[1882,38,1312,16],[1882,47,1312,46],[1882,51,1312,50],[1882,52,1312,51,"_getUser"],[1882,60,1312,59],[1882,61,1312,60,"currentSession"],[1882,75,1312,74],[1882,76,1312,75,"access_token"],[1882,88,1312,87],[1882,89,1312,88],[1883,16,1312,24,"data"],[1883,20,1312,28],[1883,23,1312,28,"_yield$this$_getUser"],[1883,43,1312,28],[1883,44,1312,24,"data"],[1883,48,1312,28],[1884,16,1312,30,"error"],[1884,23,1312,35],[1884,26,1312,35,"_yield$this$_getUser"],[1884,46,1312,35],[1884,47,1312,30,"error"],[1884,52,1312,35],[1885,14,1313,16],[1885,18,1313,20,"error"],[1885,25,1313,25],[1885,27,1313,27],[1886,16,1314,20],[1886,22,1314,26,"error"],[1886,29,1314,31],[1887,14,1315,16],[1888,14,1316,16,"session"],[1888,21,1316,23],[1888,24,1316,26],[1889,16,1317,20,"access_token"],[1889,28,1317,32],[1889,30,1317,34,"currentSession"],[1889,44,1317,48],[1889,45,1317,49,"access_token"],[1889,57,1317,61],[1890,16,1318,20,"refresh_token"],[1890,29,1318,33],[1890,31,1318,35,"currentSession"],[1890,45,1318,49],[1890,46,1318,50,"refresh_token"],[1890,59,1318,63],[1891,16,1319,20,"user"],[1891,20,1319,24],[1891,22,1319,26,"data"],[1891,26,1319,30],[1891,27,1319,31,"user"],[1891,31,1319,35],[1892,16,1320,20,"token_type"],[1892,26,1320,30],[1892,28,1320,32],[1892,36,1320,40],[1893,16,1321,20,"expires_in"],[1893,26,1321,30],[1893,28,1321,32,"expiresAt"],[1893,37,1321,41],[1893,40,1321,44,"timeNow"],[1893,47,1321,51],[1894,16,1322,20,"expires_at"],[1894,26,1322,30],[1894,28,1322,32,"expiresAt"],[1895,14,1323,16],[1895,15,1323,17],[1896,14,1324,16],[1896,20,1324,22],[1896,24,1324,26],[1896,25,1324,27,"_saveSession"],[1896,37,1324,39],[1896,38,1324,40,"session"],[1896,45,1324,47],[1896,46,1324,48],[1897,14,1325,16],[1897,20,1325,22],[1897,24,1325,26],[1897,25,1325,27,"_notifyAllSubscribers"],[1897,46,1325,48],[1897,47,1325,49],[1897,58,1325,60],[1897,60,1325,62,"session"],[1897,67,1325,69],[1897,68,1325,70],[1898,12,1326,12],[1899,12,1327,12],[1899,19,1327,19],[1900,14,1327,21,"data"],[1900,18,1327,25],[1900,20,1327,27],[1901,16,1327,29,"user"],[1901,20,1327,33],[1901,22,1327,35,"session"],[1901,29,1327,42],[1901,30,1327,43,"user"],[1901,34,1327,47],[1902,16,1327,49,"session"],[1903,14,1327,57],[1903,15,1327,58],[1904,14,1327,60,"error"],[1904,19,1327,65],[1904,21,1327,67],[1905,12,1327,72],[1905,13,1327,73],[1906,10,1328,8],[1906,11,1328,9],[1906,12,1329,8],[1906,19,1329,15,"error"],[1906,24,1329,20],[1906,26,1329,22],[1907,12,1330,12],[1907,16,1330,16],[1907,17,1330,17],[1907,18,1330,18],[1907,20,1330,20,"errors_1"],[1907,28,1330,28],[1907,29,1330,29,"isAuthError"],[1907,40,1330,40],[1907,42,1330,42,"error"],[1907,47,1330,47],[1907,48,1330,48],[1907,50,1330,50],[1908,14,1331,16],[1908,21,1331,23],[1909,16,1331,25,"data"],[1909,20,1331,29],[1909,22,1331,31],[1910,18,1331,33,"session"],[1910,25,1331,40],[1910,27,1331,42],[1910,31,1331,46],[1911,18,1331,48,"user"],[1911,22,1331,52],[1911,24,1331,54],[1912,16,1331,59],[1912,17,1331,60],[1913,16,1331,62,"error"],[1914,14,1331,68],[1914,15,1331,69],[1915,12,1332,12],[1916,12,1333,12],[1916,18,1333,18,"error"],[1916,23,1333,23],[1917,10,1334,8],[1918,8,1335,4],[1918,9,1335,5],[1919,8,1335,5],[1919,17,1287,10,"_setSession"],[1919,28,1287,21,"_setSession"],[1919,29,1287,21,"_x29"],[1919,33,1287,21],[1920,10,1287,21],[1920,17,1287,21,"_setSession3"],[1920,29,1287,21],[1920,30,1287,21,"apply"],[1920,35,1287,21],[1920,42,1287,21,"arguments"],[1920,51,1287,21],[1921,8,1287,21],[1922,8,1287,21],[1922,15,1287,10,"_setSession"],[1922,26,1287,21],[1923,6,1287,21],[1924,6,1336,4],[1925,0,1337,0],[1926,0,1338,0],[1927,0,1339,0],[1928,0,1340,0],[1929,0,1341,0],[1930,4,1336,4],[1931,6,1336,4,"key"],[1931,9,1336,4],[1932,6,1336,4,"value"],[1932,11,1336,4],[1933,8,1336,4],[1933,12,1336,4,"_refreshSession2"],[1933,28,1336,4],[1933,31,1336,4,"_asyncToGenerator"],[1933,48,1336,4],[1933,49,1342,4],[1933,60,1342,25,"currentSession"],[1933,74,1342,39],[1933,76,1342,41],[1934,10,1342,41],[1934,14,1342,41,"_this12"],[1934,21,1342,41],[1935,10,1343,8],[1935,16,1343,14],[1935,20,1343,18],[1935,21,1343,19,"initializePromise"],[1935,38,1343,36],[1936,10,1344,8],[1936,23,1344,21],[1936,27,1344,25],[1936,28,1344,26,"_acquireLock"],[1936,40,1344,38],[1936,41,1344,39],[1936,42,1344,40],[1936,43,1344,41],[1936,58,1344,41,"_asyncToGenerator"],[1936,75,1344,41],[1936,76,1344,43],[1936,89,1344,55],[1937,12,1345,12],[1937,25,1345,25,"_this12"],[1937,32,1345,29],[1937,33,1345,30,"_refreshSession"],[1937,48,1345,45],[1937,49,1345,46,"currentSession"],[1937,63,1345,60],[1937,64,1345,61],[1938,10,1346,8],[1938,11,1346,9],[1938,13,1346,10],[1939,8,1347,4],[1939,9,1347,5],[1940,8,1347,5],[1940,17,1342,10,"refreshSession"],[1940,31,1342,24,"refreshSession"],[1940,32,1342,24,"_x30"],[1940,36,1342,24],[1941,10,1342,24],[1941,17,1342,24,"_refreshSession2"],[1941,33,1342,24],[1941,34,1342,24,"apply"],[1941,39,1342,24],[1941,46,1342,24,"arguments"],[1941,55,1342,24],[1942,8,1342,24],[1943,8,1342,24],[1943,15,1342,10,"refreshSession"],[1943,29,1342,24],[1944,6,1342,24],[1945,4,1342,24],[1946,6,1342,24,"key"],[1946,9,1342,24],[1947,6,1342,24,"value"],[1947,11,1342,24],[1948,8,1342,24],[1948,12,1342,24,"_refreshSession3"],[1948,28,1342,24],[1948,31,1342,24,"_asyncToGenerator"],[1948,48,1342,24],[1948,49,1348,4],[1948,60,1348,26,"currentSession"],[1948,74,1348,40],[1948,76,1348,42],[1949,10,1348,42],[1949,14,1348,42,"_this13"],[1949,21,1348,42],[1950,10,1349,8],[1950,14,1349,12],[1951,12,1350,12],[1951,25,1350,25],[1951,29,1350,29],[1951,30,1350,30,"_useSession"],[1951,41,1350,41],[1952,14,1350,41],[1952,18,1350,41,"_ref19"],[1952,24,1350,41],[1952,27,1350,41,"_asyncToGenerator"],[1952,44,1350,41],[1952,45,1350,42],[1952,56,1350,49,"result"],[1952,62,1350,55],[1952,64,1350,60],[1953,16,1351,16],[1953,20,1351,20,"_a"],[1953,22,1351,22],[1954,16,1352,16],[1954,20,1352,20],[1954,21,1352,21,"currentSession"],[1954,35,1352,35],[1954,37,1352,37],[1955,18,1353,20],[1955,22,1353,28,"data"],[1955,26,1353,32],[1955,29,1353,44,"result"],[1955,35,1353,50],[1955,36,1353,28,"data"],[1955,40,1353,32],[1956,20,1353,34,"error"],[1956,27,1353,39],[1956,30,1353,44,"result"],[1956,36,1353,50],[1956,37,1353,34,"error"],[1956,42,1353,39],[1957,18,1354,20],[1957,22,1354,24,"error"],[1957,29,1354,29],[1957,31,1354,31],[1958,20,1355,24],[1958,26,1355,30,"error"],[1958,33,1355,35],[1959,18,1356,20],[1960,18,1357,20,"currentSession"],[1960,32,1357,34],[1960,35,1357,37],[1960,36,1357,38,"_a"],[1960,38,1357,40],[1960,41,1357,43,"data"],[1960,45,1357,47],[1960,46,1357,48,"session"],[1960,53,1357,55],[1960,59,1357,61],[1960,63,1357,65],[1960,67,1357,69,"_a"],[1960,69,1357,71],[1960,74,1357,76],[1960,79,1357,81],[1960,80,1357,82],[1960,83,1357,85,"_a"],[1960,85,1357,87],[1960,88,1357,90,"undefined"],[1960,97,1357,99],[1961,16,1358,16],[1962,16,1359,16],[1962,20,1359,20],[1962,22,1359,22,"currentSession"],[1962,36,1359,36],[1962,41,1359,41],[1962,45,1359,45],[1962,49,1359,49,"currentSession"],[1962,63,1359,63],[1962,68,1359,68],[1962,73,1359,73],[1962,74,1359,74],[1962,77,1359,77],[1962,82,1359,82],[1962,83,1359,83],[1962,86,1359,86,"currentSession"],[1962,100,1359,100],[1962,101,1359,101,"refresh_token"],[1962,114,1359,114],[1962,115,1359,115],[1962,117,1359,117],[1963,18,1360,20],[1963,24,1360,26],[1963,28,1360,30,"errors_1"],[1963,36,1360,38],[1963,37,1360,39,"AuthSessionMissingError"],[1963,60,1360,62],[1963,61,1360,63],[1963,62,1360,64],[1964,16,1361,16],[1965,16,1362,16],[1965,20,1362,16,"_yield$_this13$_callR"],[1965,41,1362,16],[1965,50,1362,49,"_this13"],[1965,57,1362,53],[1965,58,1362,54,"_callRefreshToken"],[1965,75,1362,71],[1965,76,1362,72,"currentSession"],[1965,90,1362,86],[1965,91,1362,87,"refresh_token"],[1965,104,1362,100],[1965,105,1362,101],[1966,18,1362,24,"session"],[1966,25,1362,31],[1966,28,1362,31,"_yield$_this13$_callR"],[1966,49,1362,31],[1966,50,1362,24,"session"],[1966,57,1362,31],[1967,18,1362,33,"error"],[1967,23,1362,38],[1967,26,1362,38,"_yield$_this13$_callR"],[1967,47,1362,38],[1967,48,1362,33,"error"],[1967,53,1362,38],[1968,16,1363,16],[1968,20,1363,20,"error"],[1968,25,1363,25],[1968,27,1363,27],[1969,18,1364,20],[1969,25,1364,27],[1970,20,1364,29,"data"],[1970,24,1364,33],[1970,26,1364,35],[1971,22,1364,37,"user"],[1971,26,1364,41],[1971,28,1364,43],[1971,32,1364,47],[1972,22,1364,49,"session"],[1972,29,1364,56],[1972,31,1364,58],[1973,20,1364,63],[1973,21,1364,64],[1974,20,1364,66,"error"],[1974,25,1364,71],[1974,27,1364,73,"error"],[1975,18,1364,79],[1975,19,1364,80],[1976,16,1365,16],[1977,16,1366,16],[1977,20,1366,20],[1977,21,1366,21,"session"],[1977,28,1366,28],[1977,30,1366,30],[1978,18,1367,20],[1978,25,1367,27],[1979,20,1367,29,"data"],[1979,24,1367,33],[1979,26,1367,35],[1980,22,1367,37,"user"],[1980,26,1367,41],[1980,28,1367,43],[1980,32,1367,47],[1981,22,1367,49,"session"],[1981,29,1367,56],[1981,31,1367,58],[1982,20,1367,63],[1982,21,1367,64],[1983,20,1367,66,"error"],[1983,25,1367,71],[1983,27,1367,73],[1984,18,1367,78],[1984,19,1367,79],[1985,16,1368,16],[1986,16,1369,16],[1986,23,1369,23],[1987,18,1369,25,"data"],[1987,22,1369,29],[1987,24,1369,31],[1988,20,1369,33,"user"],[1988,24,1369,37],[1988,26,1369,39,"session"],[1988,33,1369,46],[1988,34,1369,47,"user"],[1988,38,1369,51],[1989,20,1369,53,"session"],[1990,18,1369,61],[1990,19,1369,62],[1991,18,1369,64,"error"],[1991,23,1369,69],[1991,25,1369,71],[1992,16,1369,76],[1992,17,1369,77],[1993,14,1370,12],[1993,15,1370,13],[1994,14,1370,13],[1994,31,1370,13,"_x32"],[1994,35,1370,13],[1995,16,1370,13],[1995,23,1370,13,"_ref19"],[1995,29,1370,13],[1995,30,1370,13,"apply"],[1995,35,1370,13],[1995,42,1370,13,"arguments"],[1995,51,1370,13],[1996,14,1370,13],[1997,12,1370,13],[1997,16,1370,14],[1998,10,1371,8],[1998,11,1371,9],[1998,12,1372,8],[1998,19,1372,15,"error"],[1998,24,1372,20],[1998,26,1372,22],[1999,12,1373,12],[1999,16,1373,16],[1999,17,1373,17],[1999,18,1373,18],[1999,20,1373,20,"errors_1"],[1999,28,1373,28],[1999,29,1373,29,"isAuthError"],[1999,40,1373,40],[1999,42,1373,42,"error"],[1999,47,1373,47],[1999,48,1373,48],[1999,50,1373,50],[2000,14,1374,16],[2000,21,1374,23],[2001,16,1374,25,"data"],[2001,20,1374,29],[2001,22,1374,31],[2002,18,1374,33,"user"],[2002,22,1374,37],[2002,24,1374,39],[2002,28,1374,43],[2003,18,1374,45,"session"],[2003,25,1374,52],[2003,27,1374,54],[2004,16,1374,59],[2004,17,1374,60],[2005,16,1374,62,"error"],[2006,14,1374,68],[2006,15,1374,69],[2007,12,1375,12],[2008,12,1376,12],[2008,18,1376,18,"error"],[2008,23,1376,23],[2009,10,1377,8],[2010,8,1378,4],[2010,9,1378,5],[2011,8,1378,5],[2011,17,1348,10,"_refreshSession"],[2011,32,1348,25,"_refreshSession"],[2011,33,1348,25,"_x31"],[2011,37,1348,25],[2012,10,1348,25],[2012,17,1348,25,"_refreshSession3"],[2012,33,1348,25],[2012,34,1348,25,"apply"],[2012,39,1348,25],[2012,46,1348,25,"arguments"],[2012,55,1348,25],[2013,8,1348,25],[2014,8,1348,25],[2014,15,1348,10,"_refreshSession"],[2014,30,1348,25],[2015,6,1348,25],[2016,6,1379,4],[2017,0,1380,0],[2018,0,1381,0],[2019,4,1379,4],[2020,6,1379,4,"key"],[2020,9,1379,4],[2021,6,1379,4,"value"],[2021,11,1379,4],[2022,8,1379,4],[2022,12,1379,4,"_getSessionFromURL2"],[2022,31,1379,4],[2022,34,1379,4,"_asyncToGenerator"],[2022,51,1379,4],[2022,52,1382,4],[2022,63,1382,29,"params"],[2022,69,1382,35],[2022,71,1382,37,"callbackUrlType"],[2022,86,1382,52],[2022,88,1382,54],[2023,10,1383,8],[2023,14,1383,12],[2024,12,1384,12],[2024,16,1384,16],[2024,17,1384,17],[2024,18,1384,18],[2024,19,1384,19],[2024,21,1384,21,"helpers_1"],[2024,30,1384,30],[2024,31,1384,31,"isBrowser"],[2024,40,1384,40],[2024,42,1384,42],[2024,43,1384,43],[2024,45,1385,16],[2024,51,1385,22],[2024,55,1385,26,"errors_1"],[2024,63,1385,34],[2024,64,1385,35,"AuthImplicitGrantRedirectError"],[2024,94,1385,65],[2024,95,1385,66],[2024,117,1385,88],[2024,118,1385,89],[2025,12,1386,12],[2026,12,1387,12],[2026,16,1387,16,"params"],[2026,22,1387,22],[2026,23,1387,23,"error"],[2026,28,1387,28],[2026,32,1387,32,"params"],[2026,38,1387,38],[2026,39,1387,39,"error_description"],[2026,56,1387,56],[2026,60,1387,60,"params"],[2026,66,1387,66],[2026,67,1387,67,"error_code"],[2026,77,1387,77],[2026,79,1387,79],[2027,14,1388,16],[2028,14,1389,16],[2029,14,1390,16],[2029,20,1390,22],[2029,24,1390,26,"errors_1"],[2029,32,1390,34],[2029,33,1390,35,"AuthImplicitGrantRedirectError"],[2029,63,1390,65],[2029,64,1390,66,"params"],[2029,70,1390,72],[2029,71,1390,73,"error_description"],[2029,88,1390,90],[2029,92,1390,94],[2029,141,1390,143],[2029,143,1390,145],[2030,16,1391,20,"error"],[2030,21,1391,25],[2030,23,1391,27,"params"],[2030,29,1391,33],[2030,30,1391,34,"error"],[2030,35,1391,39],[2030,39,1391,43],[2030,58,1391,62],[2031,16,1392,20,"code"],[2031,20,1392,24],[2031,22,1392,26,"params"],[2031,28,1392,32],[2031,29,1392,33,"error_code"],[2031,39,1392,43],[2031,43,1392,47],[2032,14,1393,16],[2032,15,1393,17],[2032,16,1393,18],[2033,12,1394,12],[2034,12,1395,12],[2035,12,1396,12],[2035,20,1396,20,"callbackUrlType"],[2035,35,1396,35],[2036,14,1397,16],[2036,19,1397,21],[2036,29,1397,31],[2037,16,1398,20],[2037,20,1398,24],[2037,24,1398,28],[2037,25,1398,29,"flowType"],[2037,33,1398,37],[2037,38,1398,42],[2037,44,1398,48],[2037,46,1398,50],[2038,18,1399,24],[2038,24,1399,30],[2038,28,1399,34,"errors_1"],[2038,36,1399,42],[2038,37,1399,43,"AuthPKCEGrantCodeExchangeError"],[2038,67,1399,73],[2038,68,1399,74],[2038,96,1399,102],[2038,97,1399,103],[2039,16,1400,20],[2040,16,1401,20],[2041,14,1402,16],[2041,19,1402,21],[2041,25,1402,27],[2042,16,1403,20],[2042,20,1403,24],[2042,24,1403,28],[2042,25,1403,29,"flowType"],[2042,33,1403,37],[2042,38,1403,42],[2042,48,1403,52],[2042,50,1403,54],[2043,18,1404,24],[2043,24,1404,30],[2043,28,1404,34,"errors_1"],[2043,36,1404,42],[2043,37,1404,43,"AuthImplicitGrantRedirectError"],[2043,67,1404,73],[2043,68,1404,74],[2043,106,1404,112],[2043,107,1404,113],[2044,16,1405,20],[2045,16,1406,20],[2046,14,1407,16],[2047,14,1408,16],[2048,12,1409,12],[2049,12,1410,12],[2050,12,1411,12],[2050,16,1411,16,"callbackUrlType"],[2050,31,1411,31],[2050,36,1411,36],[2050,42,1411,42],[2050,44,1411,44],[2051,14,1412,16],[2051,18,1412,20],[2051,19,1412,21,"_debug"],[2051,25,1412,27],[2051,26,1412,28],[2051,42,1412,44],[2051,44,1412,46],[2051,51,1412,53],[2051,53,1412,55],[2051,67,1412,69],[2051,69,1412,71],[2051,73,1412,75],[2051,74,1412,76],[2052,14,1413,16],[2052,18,1413,20],[2052,19,1413,21,"params"],[2052,25,1413,27],[2052,26,1413,28,"code"],[2052,30,1413,32],[2052,32,1414,20],[2052,38,1414,26],[2052,42,1414,30,"errors_1"],[2052,50,1414,38],[2052,51,1414,39,"AuthPKCEGrantCodeExchangeError"],[2052,81,1414,69],[2052,82,1414,70],[2052,101,1414,89],[2052,102,1414,90],[2053,14,1415,16],[2053,18,1415,16,"_yield$this$_exchange"],[2053,39,1415,16],[2053,48,1415,46],[2053,52,1415,50],[2053,53,1415,51,"_exchangeCodeForSession"],[2053,76,1415,74],[2053,77,1415,75,"params"],[2053,83,1415,81],[2053,84,1415,82,"code"],[2053,88,1415,86],[2053,89,1415,87],[2054,16,1415,24,"data"],[2054,21,1415,28],[2054,24,1415,28,"_yield$this$_exchange"],[2054,45,1415,28],[2054,46,1415,24,"data"],[2054,50,1415,28],[2055,16,1415,30,"error"],[2055,23,1415,35],[2055,26,1415,35,"_yield$this$_exchange"],[2055,47,1415,35],[2055,48,1415,30,"error"],[2055,53,1415,35],[2056,14,1416,16],[2056,18,1416,20,"error"],[2056,25,1416,25],[2056,27,1417,20],[2056,33,1417,26,"error"],[2056,40,1417,31],[2057,14,1418,16],[2057,18,1418,22,"url"],[2057,21,1418,25],[2057,24,1418,28],[2057,28,1418,32,"URL"],[2057,31,1418,35],[2057,32,1418,36,"window"],[2057,38,1418,42],[2057,39,1418,43,"location"],[2057,47,1418,51],[2057,48,1418,52,"href"],[2057,52,1418,56],[2057,53,1418,57],[2058,14,1419,16,"url"],[2058,17,1419,19],[2058,18,1419,20,"searchParams"],[2058,30,1419,32],[2058,31,1419,33,"delete"],[2058,37,1419,39],[2058,38,1419,40],[2058,44,1419,46],[2058,45,1419,47],[2059,14,1420,16,"window"],[2059,20,1420,22],[2059,21,1420,23,"history"],[2059,28,1420,30],[2059,29,1420,31,"replaceState"],[2059,41,1420,43],[2059,42,1420,44,"window"],[2059,48,1420,50],[2059,49,1420,51,"history"],[2059,56,1420,58],[2059,57,1420,59,"state"],[2059,62,1420,64],[2059,64,1420,66],[2059,66,1420,68],[2059,68,1420,70,"url"],[2059,71,1420,73],[2059,72,1420,74,"toString"],[2059,80,1420,82],[2059,81,1420,83],[2059,82,1420,84],[2059,83,1420,85],[2060,14,1421,16],[2060,21,1421,23],[2061,16,1421,25,"data"],[2061,20,1421,29],[2061,22,1421,31],[2062,18,1421,33,"session"],[2062,25,1421,40],[2062,27,1421,42,"data"],[2062,32,1421,46],[2062,33,1421,47,"session"],[2062,40,1421,54],[2063,18,1421,56,"redirectType"],[2063,30,1421,68],[2063,32,1421,70],[2064,16,1421,75],[2064,17,1421,76],[2065,16,1421,78,"error"],[2065,21,1421,83],[2065,23,1421,85],[2066,14,1421,90],[2066,15,1421,91],[2067,12,1422,12],[2068,12,1423,12],[2068,16,1423,20,"provider_token"],[2068,30,1423,34],[2068,33,1423,129,"params"],[2068,39,1423,135],[2068,40,1423,20,"provider_token"],[2068,54,1423,34],[2069,14,1423,36,"provider_refresh_token"],[2069,36,1423,58],[2069,39,1423,129,"params"],[2069,45,1423,135],[2069,46,1423,36,"provider_refresh_token"],[2069,68,1423,58],[2070,14,1423,60,"access_token"],[2070,26,1423,72],[2070,29,1423,129,"params"],[2070,35,1423,135],[2070,36,1423,60,"access_token"],[2070,48,1423,72],[2071,14,1423,74,"refresh_token"],[2071,27,1423,87],[2071,30,1423,129,"params"],[2071,36,1423,135],[2071,37,1423,74,"refresh_token"],[2071,50,1423,87],[2072,14,1423,89,"expires_in"],[2072,24,1423,99],[2072,27,1423,129,"params"],[2072,33,1423,135],[2072,34,1423,89,"expires_in"],[2072,44,1423,99],[2073,14,1423,101,"expires_at"],[2073,24,1423,111],[2073,27,1423,129,"params"],[2073,33,1423,135],[2073,34,1423,101,"expires_at"],[2073,44,1423,111],[2074,14,1423,113,"token_type"],[2074,24,1423,123],[2074,27,1423,129,"params"],[2074,33,1423,135],[2074,34,1423,113,"token_type"],[2074,44,1423,123],[2075,12,1424,12],[2075,16,1424,16],[2075,17,1424,17,"access_token"],[2075,29,1424,29],[2075,33,1424,33],[2075,34,1424,34,"expires_in"],[2075,44,1424,44],[2075,48,1424,48],[2075,49,1424,49,"refresh_token"],[2075,62,1424,62],[2075,66,1424,66],[2075,67,1424,67,"token_type"],[2075,77,1424,77],[2075,79,1424,79],[2076,14,1425,16],[2076,20,1425,22],[2076,24,1425,26,"errors_1"],[2076,32,1425,34],[2076,33,1425,35,"AuthImplicitGrantRedirectError"],[2076,63,1425,65],[2076,64,1425,66],[2076,91,1425,93],[2076,92,1425,94],[2077,12,1426,12],[2078,12,1427,12],[2078,16,1427,18,"timeNow"],[2078,23,1427,25],[2078,26,1427,28,"Math"],[2078,30,1427,32],[2078,31,1427,33,"round"],[2078,36,1427,38],[2078,37,1427,39,"Date"],[2078,41,1427,43],[2078,42,1427,44,"now"],[2078,45,1427,47],[2078,46,1427,48],[2078,47,1427,49],[2078,50,1427,52],[2078,54,1427,56],[2078,55,1427,57],[2079,12,1428,12],[2079,16,1428,18,"expiresIn"],[2079,25,1428,27],[2079,28,1428,30,"parseInt"],[2079,36,1428,38],[2079,37,1428,39,"expires_in"],[2079,47,1428,49],[2079,48,1428,50],[2080,12,1429,12],[2080,16,1429,16,"expiresAt"],[2080,25,1429,25],[2080,28,1429,28,"timeNow"],[2080,35,1429,35],[2080,38,1429,38,"expiresIn"],[2080,47,1429,47],[2081,12,1430,12],[2081,16,1430,16,"expires_at"],[2081,26,1430,26],[2081,28,1430,28],[2082,14,1431,16,"expiresAt"],[2082,23,1431,25],[2082,26,1431,28,"parseInt"],[2082,34,1431,36],[2082,35,1431,37,"expires_at"],[2082,45,1431,47],[2082,46,1431,48],[2083,12,1432,12],[2084,12,1433,12],[2084,16,1433,18,"actuallyExpiresIn"],[2084,33,1433,35],[2084,36,1433,38,"expiresAt"],[2084,45,1433,47],[2084,48,1433,50,"timeNow"],[2084,55,1433,57],[2085,12,1434,12],[2085,16,1434,16,"actuallyExpiresIn"],[2085,33,1434,33],[2085,36,1434,36],[2085,40,1434,40],[2085,44,1434,44,"constants_1"],[2085,55,1434,55],[2085,56,1434,56,"AUTO_REFRESH_TICK_DURATION_MS"],[2085,85,1434,85],[2085,87,1434,87],[2086,14,1435,16,"console"],[2086,21,1435,23],[2086,22,1435,24,"warn"],[2086,26,1435,28],[2086,27,1435,29],[2086,92,1435,94,"actuallyExpiresIn"],[2086,109,1435,111],[2086,142,1435,144,"expiresIn"],[2086,151,1435,153],[2086,154,1435,156],[2086,155,1435,157],[2087,12,1436,12],[2088,12,1437,12],[2088,16,1437,18,"issuedAt"],[2088,24,1437,26],[2088,27,1437,29,"expiresAt"],[2088,36,1437,38],[2088,39,1437,41,"expiresIn"],[2088,48,1437,50],[2089,12,1438,12],[2089,16,1438,16,"timeNow"],[2089,23,1438,23],[2089,26,1438,26,"issuedAt"],[2089,34,1438,34],[2089,38,1438,38],[2089,41,1438,41],[2089,43,1438,43],[2090,14,1439,16,"console"],[2090,21,1439,23],[2090,22,1439,24,"warn"],[2090,26,1439,28],[2090,27,1439,29],[2090,124,1439,126],[2090,126,1439,128,"issuedAt"],[2090,134,1439,136],[2090,136,1439,138,"expiresAt"],[2090,145,1439,147],[2090,147,1439,149,"timeNow"],[2090,154,1439,156],[2090,155,1439,157],[2091,12,1440,12],[2091,13,1440,13],[2091,19,1441,17],[2091,23,1441,21,"timeNow"],[2091,30,1441,28],[2091,33,1441,31,"issuedAt"],[2091,41,1441,39],[2091,44,1441,42],[2091,45,1441,43],[2091,47,1441,45],[2092,14,1442,16,"console"],[2092,21,1442,23],[2092,22,1442,24,"warn"],[2092,26,1442,28],[2092,27,1442,29],[2092,137,1442,139],[2092,139,1442,141,"issuedAt"],[2092,147,1442,149],[2092,149,1442,151,"expiresAt"],[2092,158,1442,160],[2092,160,1442,162,"timeNow"],[2092,167,1442,169],[2092,168,1442,170],[2093,12,1443,12],[2094,12,1444,12],[2094,16,1444,12,"_yield$this$_getUser2"],[2094,37,1444,12],[2094,46,1444,42],[2094,50,1444,46],[2094,51,1444,47,"_getUser"],[2094,59,1444,55],[2094,60,1444,56,"access_token"],[2094,72,1444,68],[2094,73,1444,69],[2095,14,1444,20,"data"],[2095,18,1444,24],[2095,21,1444,24,"_yield$this$_getUser2"],[2095,42,1444,24],[2095,43,1444,20,"data"],[2095,47,1444,24],[2096,14,1444,26,"error"],[2096,19,1444,31],[2096,22,1444,31,"_yield$this$_getUser2"],[2096,43,1444,31],[2096,44,1444,26,"error"],[2096,49,1444,31],[2097,12,1445,12],[2097,16,1445,16,"error"],[2097,21,1445,21],[2097,23,1446,16],[2097,29,1446,22,"error"],[2097,34,1446,27],[2098,12,1447,12],[2098,16,1447,18,"session"],[2098,23,1447,25],[2098,26,1447,28],[2099,14,1448,16,"provider_token"],[2099,28,1448,30],[2100,14,1449,16,"provider_refresh_token"],[2100,36,1449,38],[2101,14,1450,16,"access_token"],[2101,26,1450,28],[2102,14,1451,16,"expires_in"],[2102,24,1451,26],[2102,26,1451,28,"expiresIn"],[2102,35,1451,37],[2103,14,1452,16,"expires_at"],[2103,24,1452,26],[2103,26,1452,28,"expiresAt"],[2103,35,1452,37],[2104,14,1453,16,"refresh_token"],[2104,27,1453,29],[2105,14,1454,16,"token_type"],[2105,24,1454,26],[2106,14,1455,16,"user"],[2106,18,1455,20],[2106,20,1455,22,"data"],[2106,24,1455,26],[2106,25,1455,27,"user"],[2107,12,1456,12],[2107,13,1456,13],[2108,12,1457,12],[2109,12,1458,12,"window"],[2109,18,1458,18],[2109,19,1458,19,"location"],[2109,27,1458,27],[2109,28,1458,28,"hash"],[2109,32,1458,32],[2109,35,1458,35],[2109,37,1458,37],[2110,12,1459,12],[2110,16,1459,16],[2110,17,1459,17,"_debug"],[2110,23,1459,23],[2110,24,1459,24],[2110,47,1459,47],[2110,49,1459,49],[2110,80,1459,80],[2110,81,1459,81],[2111,12,1460,12],[2111,19,1460,19],[2112,14,1460,21,"data"],[2112,18,1460,25],[2112,20,1460,27],[2113,16,1460,29,"session"],[2113,23,1460,36],[2114,16,1460,38,"redirectType"],[2114,28,1460,50],[2114,30,1460,52,"params"],[2114,36,1460,58],[2114,37,1460,59,"type"],[2115,14,1460,64],[2115,15,1460,65],[2116,14,1460,67,"error"],[2116,19,1460,72],[2116,21,1460,74],[2117,12,1460,79],[2117,13,1460,80],[2118,10,1461,8],[2118,11,1461,9],[2118,12,1462,8],[2118,19,1462,15,"error"],[2118,24,1462,20],[2118,26,1462,22],[2119,12,1463,12],[2119,16,1463,16],[2119,17,1463,17],[2119,18,1463,18],[2119,20,1463,20,"errors_1"],[2119,28,1463,28],[2119,29,1463,29,"isAuthError"],[2119,40,1463,40],[2119,42,1463,42,"error"],[2119,47,1463,47],[2119,48,1463,48],[2119,50,1463,50],[2120,14,1464,16],[2120,21,1464,23],[2121,16,1464,25,"data"],[2121,20,1464,29],[2121,22,1464,31],[2122,18,1464,33,"session"],[2122,25,1464,40],[2122,27,1464,42],[2122,31,1464,46],[2123,18,1464,48,"redirectType"],[2123,30,1464,60],[2123,32,1464,62],[2124,16,1464,67],[2124,17,1464,68],[2125,16,1464,70,"error"],[2126,14,1464,76],[2126,15,1464,77],[2127,12,1465,12],[2128,12,1466,12],[2128,18,1466,18,"error"],[2128,23,1466,23],[2129,10,1467,8],[2130,8,1468,4],[2130,9,1468,5],[2131,8,1468,5],[2131,17,1382,10,"_getSessionFromURL"],[2131,35,1382,28,"_getSessionFromURL"],[2131,36,1382,28,"_x33"],[2131,40,1382,28],[2131,42,1382,28,"_x34"],[2131,46,1382,28],[2132,10,1382,28],[2132,17,1382,28,"_getSessionFromURL2"],[2132,36,1382,28],[2132,37,1382,28,"apply"],[2132,42,1382,28],[2132,49,1382,28,"arguments"],[2132,58,1382,28],[2133,8,1382,28],[2134,8,1382,28],[2134,15,1382,10,"_getSessionFromURL"],[2134,33,1382,28],[2135,6,1382,28],[2136,6,1469,4],[2137,0,1470,0],[2138,0,1471,0],[2139,6,1469,4],[2140,4,1469,4],[2141,6,1469,4,"key"],[2141,9,1469,4],[2142,6,1469,4,"value"],[2142,11,1469,4],[2142,13,1472,4],[2142,22,1472,4,"_isImplicitGrantCallback"],[2142,46,1472,28,"_isImplicitGrantCallback"],[2142,47,1472,29,"params"],[2142,53,1472,35],[2142,55,1472,37],[2143,8,1473,8],[2143,15,1473,15,"Boolean"],[2143,22,1473,22],[2143,23,1473,23,"params"],[2143,29,1473,29],[2143,30,1473,30,"access_token"],[2143,42,1473,42],[2143,46,1473,46,"params"],[2143,52,1473,52],[2143,53,1473,53,"error_description"],[2143,70,1473,70],[2143,71,1473,71],[2144,6,1474,4],[2145,6,1475,4],[2146,0,1476,0],[2147,0,1477,0],[2148,4,1475,4],[2149,6,1475,4,"key"],[2149,9,1475,4],[2150,6,1475,4,"value"],[2150,11,1475,4],[2151,8,1475,4],[2151,12,1475,4,"_isPKCECallback2"],[2151,28,1475,4],[2151,31,1475,4,"_asyncToGenerator"],[2151,48,1475,4],[2151,49,1478,4],[2151,60,1478,26,"params"],[2151,66,1478,32],[2151,68,1478,34],[2152,10,1479,8],[2152,14,1479,14,"currentStorageContent"],[2152,35,1479,35],[2152,44,1479,44],[2152,45,1479,45],[2152,46,1479,46],[2152,48,1479,48,"helpers_1"],[2152,57,1479,57],[2152,58,1479,58,"getItemAsync"],[2152,70,1479,70],[2152,72,1479,72],[2152,76,1479,76],[2152,77,1479,77,"storage"],[2152,84,1479,84],[2152,86,1479,86],[2152,89,1479,89],[2152,93,1479,93],[2152,94,1479,94,"storageKey"],[2152,104,1479,104],[2152,120,1479,120],[2152,121,1479,121],[2153,10,1480,8],[2153,17,1480,15],[2153,18,1480,16],[2153,20,1480,18,"params"],[2153,26,1480,24],[2153,27,1480,25,"code"],[2153,31,1480,29],[2153,35,1480,33,"currentStorageContent"],[2153,56,1480,54],[2153,57,1480,55],[2154,8,1481,4],[2154,9,1481,5],[2155,8,1481,5],[2155,17,1478,10,"_isPKCECallback"],[2155,32,1478,25,"_isPKCECallback"],[2155,33,1478,25,"_x35"],[2155,37,1478,25],[2156,10,1478,25],[2156,17,1478,25,"_isPKCECallback2"],[2156,33,1478,25],[2156,34,1478,25,"apply"],[2156,39,1478,25],[2156,46,1478,25,"arguments"],[2156,55,1478,25],[2157,8,1478,25],[2158,8,1478,25],[2158,15,1478,10,"_isPKCECallback"],[2158,30,1478,25],[2159,6,1478,25],[2160,6,1482,4],[2161,0,1483,0],[2162,0,1484,0],[2163,0,1485,0],[2164,0,1486,0],[2165,0,1487,0],[2166,0,1488,0],[2167,0,1489,0],[2168,6,1482,4],[2169,4,1482,4],[2170,6,1482,4,"key"],[2170,9,1482,4],[2171,6,1482,4,"value"],[2171,11,1482,4],[2172,8,1482,4],[2172,12,1482,4,"_signOut2"],[2172,21,1482,4],[2172,24,1482,4,"_asyncToGenerator"],[2172,41,1482,4],[2172,42,1490,4],[2172,55,1490,49],[2173,10,1490,49],[2173,14,1490,49,"_this14"],[2173,21,1490,49],[2174,10,1490,49],[2174,14,1490,18,"options"],[2174,21,1490,25],[2174,24,1490,25,"arguments"],[2174,33,1490,25],[2174,34,1490,25,"length"],[2174,40,1490,25],[2174,48,1490,25,"arguments"],[2174,57,1490,25],[2174,65,1490,25,"undefined"],[2174,74,1490,25],[2174,77,1490,25,"arguments"],[2174,86,1490,25],[2174,92,1490,28],[2175,12,1490,30,"scope"],[2175,17,1490,35],[2175,19,1490,37],[2176,10,1490,46],[2176,11,1490,47],[2177,10,1491,8],[2177,16,1491,14],[2177,20,1491,18],[2177,21,1491,19,"initializePromise"],[2177,38,1491,36],[2178,10,1492,8],[2178,23,1492,21],[2178,27,1492,25],[2178,28,1492,26,"_acquireLock"],[2178,40,1492,38],[2178,41,1492,39],[2178,42,1492,40],[2178,43,1492,41],[2178,58,1492,41,"_asyncToGenerator"],[2178,75,1492,41],[2178,76,1492,43],[2178,89,1492,55],[2179,12,1493,12],[2179,25,1493,25,"_this14"],[2179,32,1493,29],[2179,33,1493,30,"_signOut"],[2179,41,1493,38],[2179,42,1493,39,"options"],[2179,49,1493,46],[2179,50,1493,47],[2180,10,1494,8],[2180,11,1494,9],[2180,13,1494,10],[2181,8,1495,4],[2181,9,1495,5],[2182,8,1495,5],[2182,17,1490,10,"signOut"],[2182,24,1490,17,"signOut"],[2182,25,1490,17],[2183,10,1490,17],[2183,17,1490,17,"_signOut2"],[2183,26,1490,17],[2183,27,1490,17,"apply"],[2183,32,1490,17],[2183,39,1490,17,"arguments"],[2183,48,1490,17],[2184,8,1490,17],[2185,8,1490,17],[2185,15,1490,10,"signOut"],[2185,22,1490,17],[2186,6,1490,17],[2187,4,1490,17],[2188,6,1490,17,"key"],[2188,9,1490,17],[2189,6,1490,17,"value"],[2189,11,1490,17],[2190,8,1490,17],[2190,12,1490,17,"_signOut3"],[2190,21,1490,17],[2190,24,1490,17,"_asyncToGenerator"],[2190,41,1490,17],[2190,42,1496,4],[2190,55,1496,52],[2191,10,1496,52],[2191,14,1496,52,"_this15"],[2191,21,1496,52],[2192,10,1496,52],[2192,14,1496,52,"_ref21"],[2192,20,1496,52],[2192,23,1496,52,"arguments"],[2192,32,1496,52],[2192,33,1496,52,"length"],[2192,39,1496,52],[2192,47,1496,52,"arguments"],[2192,56,1496,52],[2192,64,1496,52,"undefined"],[2192,73,1496,52],[2192,76,1496,52,"arguments"],[2192,85,1496,52],[2192,91,1496,31],[2193,14,1496,33,"scope"],[2193,19,1496,38],[2193,21,1496,40],[2194,12,1496,49],[2194,13,1496,50],[2195,12,1496,21,"scope"],[2195,17,1496,26],[2195,20,1496,26,"_ref21"],[2195,26,1496,26],[2195,27,1496,21,"scope"],[2195,32,1496,26],[2196,10,1497,8],[2196,23,1497,21],[2196,27,1497,25],[2196,28,1497,26,"_useSession"],[2196,39,1497,37],[2197,12,1497,37],[2197,16,1497,37,"_ref22"],[2197,22,1497,37],[2197,25,1497,37,"_asyncToGenerator"],[2197,42,1497,37],[2197,43,1497,38],[2197,54,1497,45,"result"],[2197,60,1497,51],[2197,62,1497,56],[2198,14,1498,12],[2198,18,1498,16,"_a"],[2198,20,1498,18],[2199,14,1499,12],[2199,18,1499,20,"data"],[2199,22,1499,24],[2199,25,1499,50,"result"],[2199,31,1499,56],[2199,32,1499,20,"data"],[2199,36,1499,24],[2200,16,1499,33,"sessionError"],[2200,28,1499,45],[2200,31,1499,50,"result"],[2200,37,1499,56],[2200,38,1499,26,"error"],[2200,43,1499,31],[2201,14,1500,12],[2201,18,1500,16,"sessionError"],[2201,30,1500,28],[2201,32,1500,30],[2202,16,1501,16],[2202,23,1501,23],[2203,18,1501,25,"error"],[2203,23,1501,30],[2203,25,1501,32,"sessionError"],[2204,16,1501,45],[2204,17,1501,46],[2205,14,1502,12],[2206,14,1503,12],[2206,18,1503,18,"accessToken"],[2206,29,1503,29],[2206,32,1503,32],[2206,33,1503,33,"_a"],[2206,35,1503,35],[2206,38,1503,38,"data"],[2206,42,1503,42],[2206,43,1503,43,"session"],[2206,50,1503,50],[2206,56,1503,56],[2206,60,1503,60],[2206,64,1503,64,"_a"],[2206,66,1503,66],[2206,71,1503,71],[2206,76,1503,76],[2206,77,1503,77],[2206,80,1503,80],[2206,85,1503,85],[2206,86,1503,86],[2206,89,1503,89,"_a"],[2206,91,1503,91],[2206,92,1503,92,"access_token"],[2206,104,1503,104],[2207,14,1504,12],[2207,18,1504,16,"accessToken"],[2207,29,1504,27],[2207,31,1504,29],[2208,16,1505,16],[2208,20,1505,16,"_yield$_this15$admin$"],[2208,41,1505,16],[2208,50,1505,40,"_this15"],[2208,57,1505,44],[2208,58,1505,45,"admin"],[2208,63,1505,50],[2208,64,1505,51,"signOut"],[2208,71,1505,58],[2208,72,1505,59,"accessToken"],[2208,83,1505,70],[2208,85,1505,72,"scope"],[2208,90,1505,77],[2208,91,1505,78],[2209,18,1505,24,"error"],[2209,23,1505,29],[2209,26,1505,29,"_yield$_this15$admin$"],[2209,47,1505,29],[2209,48,1505,24,"error"],[2209,53,1505,29],[2210,16,1506,16],[2210,20,1506,20,"error"],[2210,25,1506,25],[2210,27,1506,27],[2211,18,1507,20],[2212,18,1508,20],[2213,18,1509,20],[2213,22,1509,24],[2213,24,1509,26],[2213,25,1509,27],[2213,26,1509,28],[2213,28,1509,30,"errors_1"],[2213,36,1509,38],[2213,37,1509,39,"isAuthApiError"],[2213,51,1509,53],[2213,53,1509,55,"error"],[2213,58,1509,60],[2213,59,1509,61],[2213,64,1510,25,"error"],[2213,69,1510,30],[2213,70,1510,31,"status"],[2213,76,1510,37],[2213,81,1510,42],[2213,84,1510,45],[2213,88,1510,49,"error"],[2213,93,1510,54],[2213,94,1510,55,"status"],[2213,100,1510,61],[2213,105,1510,66],[2213,108,1510,69],[2213,112,1510,73,"error"],[2213,117,1510,78],[2213,118,1510,79,"status"],[2213,124,1510,85],[2213,129,1510,90],[2213,132,1510,93],[2213,133,1510,94],[2213,134,1510,95],[2213,136,1510,97],[2214,20,1511,24],[2214,27,1511,31],[2215,22,1511,33,"error"],[2216,20,1511,39],[2216,21,1511,40],[2217,18,1512,20],[2218,16,1513,16],[2219,14,1514,12],[2220,14,1515,12],[2220,18,1515,16,"scope"],[2220,23,1515,21],[2220,28,1515,26],[2220,36,1515,34],[2220,38,1515,36],[2221,16,1516,16],[2221,22,1516,22,"_this15"],[2221,29,1516,26],[2221,30,1516,27,"_removeSession"],[2221,44,1516,41],[2221,45,1516,42],[2221,46,1516,43],[2222,16,1517,16],[2222,22,1517,22],[2222,23,1517,23],[2222,24,1517,24],[2222,26,1517,26,"helpers_1"],[2222,35,1517,35],[2222,36,1517,36,"removeItemAsync"],[2222,51,1517,51],[2222,53,1517,53,"_this15"],[2222,60,1517,57],[2222,61,1517,58,"storage"],[2222,68,1517,65],[2222,70,1517,67],[2222,73,1517,70,"_this15"],[2222,80,1517,74],[2222,81,1517,75,"storageKey"],[2222,91,1517,85],[2222,107,1517,101],[2222,108,1517,102],[2223,14,1518,12],[2224,14,1519,12],[2224,21,1519,19],[2225,16,1519,21,"error"],[2225,21,1519,26],[2225,23,1519,28],[2226,14,1519,33],[2226,15,1519,34],[2227,12,1520,8],[2227,13,1520,9],[2228,12,1520,9],[2228,29,1520,9,"_x36"],[2228,33,1520,9],[2229,14,1520,9],[2229,21,1520,9,"_ref22"],[2229,27,1520,9],[2229,28,1520,9,"apply"],[2229,33,1520,9],[2229,40,1520,9,"arguments"],[2229,49,1520,9],[2230,12,1520,9],[2231,10,1520,9],[2231,14,1520,10],[2232,8,1521,4],[2232,9,1521,5],[2233,8,1521,5],[2233,17,1496,10,"_signOut"],[2233,25,1496,18,"_signOut"],[2233,26,1496,18],[2234,10,1496,18],[2234,17,1496,18,"_signOut3"],[2234,26,1496,18],[2234,27,1496,18,"apply"],[2234,32,1496,18],[2234,39,1496,18,"arguments"],[2234,48,1496,18],[2235,8,1496,18],[2236,8,1496,18],[2236,15,1496,10,"_signOut"],[2236,23,1496,18],[2237,6,1496,18],[2238,6,1522,4],[2239,0,1523,0],[2240,0,1524,0],[2241,0,1525,0],[2242,4,1522,4],[2243,6,1522,4,"key"],[2243,9,1522,4],[2244,6,1522,4,"value"],[2244,11,1522,4],[2244,13,1526,4],[2244,22,1526,4,"onAuthStateChange"],[2244,39,1526,21,"onAuthStateChange"],[2244,40,1526,22,"callback"],[2244,48,1526,30],[2244,50,1526,32],[2245,8,1526,32],[2245,12,1526,32,"_this16"],[2245,19,1526,32],[2246,8,1527,8],[2246,12,1527,14,"id"],[2246,14,1527,16],[2246,17,1527,19],[2246,18,1527,20],[2246,19,1527,21],[2246,21,1527,23,"helpers_1"],[2246,30,1527,32],[2246,31,1527,33,"uuid"],[2246,35,1527,37],[2246,37,1527,39],[2246,38,1527,40],[2247,8,1528,8],[2247,12,1528,14,"subscription"],[2247,24,1528,26],[2247,27,1528,29],[2248,10,1529,12,"id"],[2248,12,1529,14],[2249,10,1530,12,"callback"],[2249,18,1530,20],[2250,10,1531,12,"unsubscribe"],[2250,21,1531,23],[2250,23,1531,25,"unsubscribe"],[2250,24,1531,25],[2250,29,1531,31],[2251,12,1532,16],[2251,16,1532,20],[2251,17,1532,21,"_debug"],[2251,23,1532,27],[2251,24,1532,28],[2251,40,1532,44],[2251,42,1532,46],[2251,81,1532,85],[2251,83,1532,87,"id"],[2251,85,1532,89],[2251,86,1532,90],[2252,12,1533,16],[2252,16,1533,20],[2252,17,1533,21,"stateChangeEmitters"],[2252,36,1533,40],[2252,37,1533,41,"delete"],[2252,43,1533,47],[2252,44,1533,48,"id"],[2252,46,1533,50],[2252,47,1533,51],[2253,10,1534,12],[2254,8,1535,8],[2254,9,1535,9],[2255,8,1536,8],[2255,12,1536,12],[2255,13,1536,13,"_debug"],[2255,19,1536,19],[2255,20,1536,20],[2255,42,1536,42],[2255,44,1536,44],[2255,73,1536,73],[2255,75,1536,75,"id"],[2255,77,1536,77],[2255,78,1536,78],[2256,8,1537,8],[2256,12,1537,12],[2256,13,1537,13,"stateChangeEmitters"],[2256,32,1537,32],[2256,33,1537,33,"set"],[2256,36,1537,36],[2256,37,1537,37,"id"],[2256,39,1537,39],[2256,41,1537,41,"subscription"],[2256,53,1537,53],[2256,54,1537,54],[2257,8,1538,8,"_asyncToGenerator"],[2257,25,1538,8],[2257,26,1538,9],[2257,39,1538,21],[2258,10,1539,12],[2258,16,1539,18,"_this16"],[2258,23,1539,22],[2258,24,1539,23,"initializePromise"],[2258,41,1539,40],[2259,10,1540,12],[2259,16,1540,18,"_this16"],[2259,23,1540,22],[2259,24,1540,23,"_acquireLock"],[2259,36,1540,35],[2259,37,1540,36],[2259,38,1540,37],[2259,39,1540,38],[2259,54,1540,38,"_asyncToGenerator"],[2259,71,1540,38],[2259,72,1540,40],[2259,85,1540,52],[2260,12,1541,16,"_this16"],[2260,19,1541,20],[2260,20,1541,21,"_emitInitialSession"],[2260,39,1541,40],[2260,40,1541,41,"id"],[2260,42,1541,43],[2260,43,1541,44],[2261,10,1542,12],[2261,11,1542,13],[2261,13,1542,14],[2262,8,1543,8],[2262,9,1543,9],[2262,11,1543,11],[2262,12,1543,12],[2263,8,1544,8],[2263,15,1544,15],[2264,10,1544,17,"data"],[2264,14,1544,21],[2264,16,1544,23],[2265,12,1544,25,"subscription"],[2266,10,1544,38],[2267,8,1544,40],[2267,9,1544,41],[2268,6,1545,4],[2269,4,1545,5],[2270,6,1545,5,"key"],[2270,9,1545,5],[2271,6,1545,5,"value"],[2271,11,1545,5],[2272,8,1545,5],[2272,12,1545,5,"_emitInitialSession2"],[2272,32,1545,5],[2272,35,1545,5,"_asyncToGenerator"],[2272,52,1545,5],[2272,53,1546,4],[2272,64,1546,30,"id"],[2272,66,1546,32],[2272,68,1546,34],[2273,10,1546,34],[2273,14,1546,34,"_this17"],[2273,21,1546,34],[2274,10,1547,8],[2274,23,1547,21],[2274,27,1547,25],[2274,28,1547,26,"_useSession"],[2274,39,1547,37],[2275,12,1547,37],[2275,16,1547,37,"_ref25"],[2275,22,1547,37],[2275,25,1547,37,"_asyncToGenerator"],[2275,42,1547,37],[2275,43,1547,38],[2275,54,1547,45,"result"],[2275,60,1547,51],[2275,62,1547,56],[2276,14,1548,12],[2276,18,1548,16,"_a"],[2276,20,1548,18],[2276,22,1548,20,"_b"],[2276,24,1548,22],[2277,14,1549,12],[2277,18,1549,16],[2278,16,1550,16],[2278,20,1550,32,"session"],[2278,27,1550,39],[2278,30,1550,54,"result"],[2278,36,1550,60],[2278,37,1550,24,"data"],[2278,41,1550,28],[2278,42,1550,32,"session"],[2278,49,1550,39],[2279,18,1550,43,"error"],[2279,23,1550,48],[2279,26,1550,54,"result"],[2279,32,1550,60],[2279,33,1550,43,"error"],[2279,38,1550,48],[2280,16,1551,16],[2280,20,1551,20,"error"],[2280,25,1551,25],[2280,27,1552,20],[2280,33,1552,26,"error"],[2280,38,1552,31],[2281,16,1553,16],[2281,22,1553,23],[2281,23,1553,24,"_a"],[2281,25,1553,26],[2281,28,1553,29,"_this17"],[2281,35,1553,33],[2281,36,1553,34,"stateChangeEmitters"],[2281,55,1553,53],[2281,56,1553,54,"get"],[2281,59,1553,57],[2281,60,1553,58,"id"],[2281,62,1553,60],[2281,63,1553,61],[2281,69,1553,67],[2281,73,1553,71],[2281,77,1553,75,"_a"],[2281,79,1553,77],[2281,84,1553,82],[2281,89,1553,87],[2281,90,1553,88],[2281,93,1553,91],[2281,98,1553,96],[2281,99,1553,97],[2281,102,1553,100,"_a"],[2281,104,1553,102],[2281,105,1553,103,"callback"],[2281,113,1553,111],[2281,114,1553,112],[2281,131,1553,129],[2281,133,1553,131,"session"],[2281,140,1553,138],[2281,141,1553,139],[2282,16,1554,16,"_this17"],[2282,23,1554,20],[2282,24,1554,21,"_debug"],[2282,30,1554,27],[2282,31,1554,28],[2282,48,1554,45],[2282,50,1554,47],[2282,63,1554,60],[2282,65,1554,62,"id"],[2282,67,1554,64],[2282,69,1554,66],[2282,78,1554,75],[2282,80,1554,77,"session"],[2282,87,1554,84],[2282,88,1554,85],[2283,14,1555,12],[2283,15,1555,13],[2283,16,1556,12],[2283,23,1556,19,"err"],[2283,26,1556,22],[2283,28,1556,24],[2284,16,1557,16],[2284,22,1557,23],[2284,23,1557,24,"_b"],[2284,25,1557,26],[2284,28,1557,29,"_this17"],[2284,35,1557,33],[2284,36,1557,34,"stateChangeEmitters"],[2284,55,1557,53],[2284,56,1557,54,"get"],[2284,59,1557,57],[2284,60,1557,58,"id"],[2284,62,1557,60],[2284,63,1557,61],[2284,69,1557,67],[2284,73,1557,71],[2284,77,1557,75,"_b"],[2284,79,1557,77],[2284,84,1557,82],[2284,89,1557,87],[2284,90,1557,88],[2284,93,1557,91],[2284,98,1557,96],[2284,99,1557,97],[2284,102,1557,100,"_b"],[2284,104,1557,102],[2284,105,1557,103,"callback"],[2284,113,1557,111],[2284,114,1557,112],[2284,131,1557,129],[2284,133,1557,131],[2284,137,1557,135],[2284,138,1557,136],[2285,16,1558,16,"_this17"],[2285,23,1558,20],[2285,24,1558,21,"_debug"],[2285,30,1558,27],[2285,31,1558,28],[2285,48,1558,45],[2285,50,1558,47],[2285,63,1558,60],[2285,65,1558,62,"id"],[2285,67,1558,64],[2285,69,1558,66],[2285,76,1558,73],[2285,78,1558,75,"err"],[2285,81,1558,78],[2285,82,1558,79],[2286,16,1559,16,"console"],[2286,23,1559,23],[2286,24,1559,24,"error"],[2286,29,1559,29],[2286,30,1559,30,"err"],[2286,33,1559,33],[2286,34,1559,34],[2287,14,1560,12],[2288,12,1561,8],[2288,13,1561,9],[2289,12,1561,9],[2289,29,1561,9,"_x38"],[2289,33,1561,9],[2290,14,1561,9],[2290,21,1561,9,"_ref25"],[2290,27,1561,9],[2290,28,1561,9,"apply"],[2290,33,1561,9],[2290,40,1561,9,"arguments"],[2290,49,1561,9],[2291,12,1561,9],[2292,10,1561,9],[2292,14,1561,10],[2293,8,1562,4],[2293,9,1562,5],[2294,8,1562,5],[2294,17,1546,10,"_emitInitialSession"],[2294,36,1546,29,"_emitInitialSession"],[2294,37,1546,29,"_x37"],[2294,41,1546,29],[2295,10,1546,29],[2295,17,1546,29,"_emitInitialSession2"],[2295,37,1546,29],[2295,38,1546,29,"apply"],[2295,43,1546,29],[2295,50,1546,29,"arguments"],[2295,59,1546,29],[2296,8,1546,29],[2297,8,1546,29],[2297,15,1546,10,"_emitInitialSession"],[2297,34,1546,29],[2298,6,1546,29],[2299,6,1563,4],[2300,0,1564,0],[2301,0,1565,0],[2302,0,1566,0],[2303,0,1567,0],[2304,0,1568,0],[2305,0,1569,0],[2306,4,1563,4],[2307,6,1563,4,"key"],[2307,9,1563,4],[2308,6,1563,4,"value"],[2308,11,1563,4],[2309,8,1563,4],[2309,12,1563,4,"_resetPasswordForEmail"],[2309,34,1563,4],[2309,37,1563,4,"_asyncToGenerator"],[2309,54,1563,4],[2309,55,1570,4],[2309,66,1570,32,"email"],[2309,71,1570,37],[2309,73,1570,53],[2310,10,1570,53],[2310,14,1570,39,"options"],[2310,21,1570,46],[2310,24,1570,46,"arguments"],[2310,33,1570,46],[2310,34,1570,46,"length"],[2310,40,1570,46],[2310,48,1570,46,"arguments"],[2310,57,1570,46],[2310,65,1570,46,"undefined"],[2310,74,1570,46],[2310,77,1570,46,"arguments"],[2310,86,1570,46],[2310,92,1570,49],[2310,93,1570,50],[2310,94,1570,51],[2311,10,1571,8],[2311,14,1571,12,"codeChallenge"],[2311,27,1571,25],[2311,30,1571,28],[2311,34,1571,32],[2312,10,1572,8],[2312,14,1572,12,"codeChallengeMethod"],[2312,33,1572,31],[2312,36,1572,34],[2312,40,1572,38],[2313,10,1573,8],[2313,14,1573,12],[2313,18,1573,16],[2313,19,1573,17,"flowType"],[2313,27,1573,25],[2313,32,1573,30],[2313,38,1573,36],[2313,40,1573,38],[2314,12,1574,12],[2315,12,1574,13],[2315,16,1574,13,"_yield17"],[2315,24,1574,13],[2315,33,1575,57],[2315,34,1575,58],[2315,35,1575,59],[2315,37,1575,61,"helpers_1"],[2315,46,1575,70],[2315,47,1575,71,"getCodeChallengeAndMethod"],[2315,72,1575,96],[2315,74,1575,98],[2315,78,1575,102],[2315,79,1575,103,"storage"],[2315,86,1575,110],[2315,88,1575,112],[2315,92,1575,116],[2315,93,1575,117,"storageKey"],[2315,103,1575,127],[2315,105,1575,129],[2315,109,1575,133],[2315,110,1575,134],[2316,12,1576,12],[2316,13,1576,13],[2317,12,1576,13],[2317,16,1576,13,"_yield18"],[2317,24,1576,13],[2317,27,1576,13,"_slicedToArray"],[2317,41,1576,13],[2317,42,1576,13,"_yield17"],[2317,50,1576,13],[2318,12,1575,13,"codeChallenge"],[2318,25,1575,26],[2318,28,1575,26,"_yield18"],[2318,36,1575,26],[2319,12,1575,28,"codeChallengeMethod"],[2319,31,1575,47],[2319,34,1575,47,"_yield18"],[2319,42,1575,47],[2320,10,1577,8],[2321,10,1578,8],[2321,14,1578,12],[2322,12,1579,12],[2322,25,1579,25],[2322,26,1579,26],[2322,27,1579,27],[2322,29,1579,29,"fetch_1"],[2322,36,1579,36],[2322,37,1579,37,"_request"],[2322,45,1579,45],[2322,47,1579,47],[2322,51,1579,51],[2322,52,1579,52,"fetch"],[2322,57,1579,57],[2322,59,1579,59],[2322,65,1579,65],[2322,67,1579,67],[2322,70,1579,70],[2322,74,1579,74],[2322,75,1579,75,"url"],[2322,78,1579,78],[2322,88,1579,88],[2322,90,1579,90],[2323,14,1580,16,"body"],[2323,18,1580,20],[2323,20,1580,22],[2324,16,1581,20,"email"],[2324,21,1581,25],[2325,16,1582,20,"code_challenge"],[2325,30,1582,34],[2325,32,1582,36,"codeChallenge"],[2325,45,1582,49],[2326,16,1583,20,"code_challenge_method"],[2326,37,1583,41],[2326,39,1583,43,"codeChallengeMethod"],[2326,58,1583,62],[2327,16,1584,20,"gotrue_meta_security"],[2327,36,1584,40],[2327,38,1584,42],[2328,18,1584,44,"captcha_token"],[2328,31,1584,57],[2328,33,1584,59,"options"],[2328,40,1584,66],[2328,41,1584,67,"captchaToken"],[2329,16,1584,80],[2330,14,1585,16],[2330,15,1585,17],[2331,14,1586,16,"headers"],[2331,21,1586,23],[2331,23,1586,25],[2331,27,1586,29],[2331,28,1586,30,"headers"],[2331,35,1586,37],[2332,14,1587,16,"redirectTo"],[2332,24,1587,26],[2332,26,1587,28,"options"],[2332,33,1587,35],[2332,34,1587,36,"redirectTo"],[2333,12,1588,12],[2333,13,1588,13],[2333,14,1588,14],[2334,10,1589,8],[2334,11,1589,9],[2334,12,1590,8],[2334,19,1590,15,"error"],[2334,24,1590,20],[2334,26,1590,22],[2335,12,1591,12],[2335,16,1591,16],[2335,17,1591,17],[2335,18,1591,18],[2335,20,1591,20,"errors_1"],[2335,28,1591,28],[2335,29,1591,29,"isAuthError"],[2335,40,1591,40],[2335,42,1591,42,"error"],[2335,47,1591,47],[2335,48,1591,48],[2335,50,1591,50],[2336,14,1592,16],[2336,21,1592,23],[2337,16,1592,25,"data"],[2337,20,1592,29],[2337,22,1592,31],[2337,26,1592,35],[2338,16,1592,37,"error"],[2339,14,1592,43],[2339,15,1592,44],[2340,12,1593,12],[2341,12,1594,12],[2341,18,1594,18,"error"],[2341,23,1594,23],[2342,10,1595,8],[2343,8,1596,4],[2343,9,1596,5],[2344,8,1596,5],[2344,17,1570,10,"resetPasswordForEmail"],[2344,38,1570,31,"resetPasswordForEmail"],[2344,39,1570,31,"_x39"],[2344,43,1570,31],[2345,10,1570,31],[2345,17,1570,31,"_resetPasswordForEmail"],[2345,39,1570,31],[2345,40,1570,31,"apply"],[2345,45,1570,31],[2345,52,1570,31,"arguments"],[2345,61,1570,31],[2346,8,1570,31],[2347,8,1570,31],[2347,15,1570,10,"resetPasswordForEmail"],[2347,36,1570,31],[2348,6,1570,31],[2349,6,1597,4],[2350,0,1598,0],[2351,0,1599,0],[2352,6,1597,4],[2353,4,1597,4],[2354,6,1597,4,"key"],[2354,9,1597,4],[2355,6,1597,4,"value"],[2355,11,1597,4],[2356,8,1597,4],[2356,12,1597,4,"_getUserIdentities"],[2356,30,1597,4],[2356,33,1597,4,"_asyncToGenerator"],[2356,50,1597,4],[2356,51,1600,4],[2356,64,1600,30],[2357,10,1601,8],[2357,14,1601,12,"_a"],[2357,16,1601,14],[2358,10,1602,8],[2358,14,1602,12],[2359,12,1603,12],[2359,16,1603,12,"_yield$this$getUser"],[2359,35,1603,12],[2359,44,1603,42],[2359,48,1603,46],[2359,49,1603,47,"getUser"],[2359,56,1603,54],[2359,57,1603,55],[2359,58,1603,56],[2360,14,1603,20,"data"],[2360,18,1603,24],[2360,21,1603,24,"_yield$this$getUser"],[2360,40,1603,24],[2360,41,1603,20,"data"],[2360,45,1603,24],[2361,14,1603,26,"error"],[2361,19,1603,31],[2361,22,1603,31,"_yield$this$getUser"],[2361,41,1603,31],[2361,42,1603,26,"error"],[2361,47,1603,31],[2362,12,1604,12],[2362,16,1604,16,"error"],[2362,21,1604,21],[2362,23,1605,16],[2362,29,1605,22,"error"],[2362,34,1605,27],[2363,12,1606,12],[2363,19,1606,19],[2364,14,1606,21,"data"],[2364,18,1606,25],[2364,20,1606,27],[2365,16,1606,29,"identities"],[2365,26,1606,39],[2365,28,1606,41],[2365,29,1606,42,"_a"],[2365,31,1606,44],[2365,34,1606,47,"data"],[2365,38,1606,51],[2365,39,1606,52,"user"],[2365,43,1606,56],[2365,44,1606,57,"identities"],[2365,54,1606,67],[2365,60,1606,73],[2365,64,1606,77],[2365,68,1606,81,"_a"],[2365,70,1606,83],[2365,75,1606,88],[2365,80,1606,93],[2365,81,1606,94],[2365,84,1606,97,"_a"],[2365,86,1606,99],[2365,89,1606,102],[2366,14,1606,105],[2366,15,1606,106],[2367,14,1606,108,"error"],[2367,19,1606,113],[2367,21,1606,115],[2368,12,1606,120],[2368,13,1606,121],[2369,10,1607,8],[2369,11,1607,9],[2369,12,1608,8],[2369,19,1608,15,"error"],[2369,24,1608,20],[2369,26,1608,22],[2370,12,1609,12],[2370,16,1609,16],[2370,17,1609,17],[2370,18,1609,18],[2370,20,1609,20,"errors_1"],[2370,28,1609,28],[2370,29,1609,29,"isAuthError"],[2370,40,1609,40],[2370,42,1609,42,"error"],[2370,47,1609,47],[2370,48,1609,48],[2370,50,1609,50],[2371,14,1610,16],[2371,21,1610,23],[2372,16,1610,25,"data"],[2372,20,1610,29],[2372,22,1610,31],[2372,26,1610,35],[2373,16,1610,37,"error"],[2374,14,1610,43],[2374,15,1610,44],[2375,12,1611,12],[2376,12,1612,12],[2376,18,1612,18,"error"],[2376,23,1612,23],[2377,10,1613,8],[2378,8,1614,4],[2378,9,1614,5],[2379,8,1614,5],[2379,17,1600,10,"getUserIdentities"],[2379,34,1600,27,"getUserIdentities"],[2379,35,1600,27],[2380,10,1600,27],[2380,17,1600,27,"_getUserIdentities"],[2380,35,1600,27],[2380,36,1600,27,"apply"],[2380,41,1600,27],[2380,48,1600,27,"arguments"],[2380,57,1600,27],[2381,8,1600,27],[2382,8,1600,27],[2382,15,1600,10,"getUserIdentities"],[2382,32,1600,27],[2383,6,1600,27],[2384,6,1615,4],[2385,0,1616,0],[2386,0,1617,0],[2387,0,1618,0],[2388,6,1615,4],[2389,4,1615,4],[2390,6,1615,4,"key"],[2390,9,1615,4],[2391,6,1615,4,"value"],[2391,11,1615,4],[2392,8,1615,4],[2392,12,1615,4,"_linkIdentity"],[2392,25,1615,4],[2392,28,1615,4,"_asyncToGenerator"],[2392,45,1615,4],[2392,46,1619,4],[2392,57,1619,23,"credentials"],[2392,68,1619,34],[2392,70,1619,36],[2393,10,1619,36],[2393,14,1619,36,"_this18"],[2393,21,1619,36],[2394,10,1620,8],[2394,14,1620,12,"_a"],[2394,16,1620,14],[2395,10,1621,8],[2395,14,1621,12],[2396,12,1622,12],[2396,16,1622,12,"_yield$this$_useSessi"],[2396,37,1622,12],[2396,46,1622,42],[2396,50,1622,46],[2396,51,1622,47,"_useSession"],[2396,62,1622,58],[2397,16,1622,58],[2397,20,1622,58,"_ref26"],[2397,26,1622,58],[2397,29,1622,58,"_asyncToGenerator"],[2397,46,1622,58],[2397,47,1622,59],[2397,58,1622,66,"result"],[2397,64,1622,72],[2397,66,1622,77],[2398,18,1623,16],[2398,22,1623,20,"_a"],[2398,24,1623,22],[2398,26,1623,24,"_b"],[2398,28,1623,26],[2398,30,1623,28,"_c"],[2398,32,1623,30],[2398,34,1623,32,"_d"],[2398,36,1623,34],[2398,38,1623,36,"_e"],[2398,40,1623,38],[2399,18,1624,16],[2399,22,1624,24,"data"],[2399,26,1624,28],[2399,29,1624,40,"result"],[2399,35,1624,46],[2399,36,1624,24,"data"],[2399,40,1624,28],[2400,20,1624,30,"error"],[2400,25,1624,35],[2400,28,1624,40,"result"],[2400,34,1624,46],[2400,35,1624,30,"error"],[2400,40,1624,35],[2401,18,1625,16],[2401,22,1625,20,"error"],[2401,27,1625,25],[2401,29,1626,20],[2401,35,1626,26,"error"],[2401,40,1626,31],[2402,18,1627,16],[2402,22,1627,22,"url"],[2402,25,1627,25],[2402,34,1627,34,"_this18"],[2402,41,1627,38],[2402,42,1627,39,"_getUrlForProvider"],[2402,60,1627,57],[2402,61,1627,58],[2402,64,1627,61,"_this18"],[2402,71,1627,65],[2402,72,1627,66,"url"],[2402,75,1627,69],[2402,103,1627,97],[2402,105,1627,99,"credentials"],[2402,116,1627,110],[2402,117,1627,111,"provider"],[2402,125,1627,119],[2402,127,1627,121],[2403,20,1628,20,"redirectTo"],[2403,30,1628,30],[2403,32,1628,32],[2403,33,1628,33,"_a"],[2403,35,1628,35],[2403,38,1628,38,"credentials"],[2403,49,1628,49],[2403,50,1628,50,"options"],[2403,57,1628,57],[2403,63,1628,63],[2403,67,1628,67],[2403,71,1628,71,"_a"],[2403,73,1628,73],[2403,78,1628,78],[2403,83,1628,83],[2403,84,1628,84],[2403,87,1628,87],[2403,92,1628,92],[2403,93,1628,93],[2403,96,1628,96,"_a"],[2403,98,1628,98],[2403,99,1628,99,"redirectTo"],[2403,109,1628,109],[2404,20,1629,20,"scopes"],[2404,26,1629,26],[2404,28,1629,28],[2404,29,1629,29,"_b"],[2404,31,1629,31],[2404,34,1629,34,"credentials"],[2404,45,1629,45],[2404,46,1629,46,"options"],[2404,53,1629,53],[2404,59,1629,59],[2404,63,1629,63],[2404,67,1629,67,"_b"],[2404,69,1629,69],[2404,74,1629,74],[2404,79,1629,79],[2404,80,1629,80],[2404,83,1629,83],[2404,88,1629,88],[2404,89,1629,89],[2404,92,1629,92,"_b"],[2404,94,1629,94],[2404,95,1629,95,"scopes"],[2404,101,1629,101],[2405,20,1630,20,"queryParams"],[2405,31,1630,31],[2405,33,1630,33],[2405,34,1630,34,"_c"],[2405,36,1630,36],[2405,39,1630,39,"credentials"],[2405,50,1630,50],[2405,51,1630,51,"options"],[2405,58,1630,58],[2405,64,1630,64],[2405,68,1630,68],[2405,72,1630,72,"_c"],[2405,74,1630,74],[2405,79,1630,79],[2405,84,1630,84],[2405,85,1630,85],[2405,88,1630,88],[2405,93,1630,93],[2405,94,1630,94],[2405,97,1630,97,"_c"],[2405,99,1630,99],[2405,100,1630,100,"queryParams"],[2405,111,1630,111],[2406,20,1631,20,"skipBrowserRedirect"],[2406,39,1631,39],[2406,41,1631,41],[2407,18,1632,16],[2407,19,1632,17],[2407,20,1632,18],[2408,18,1633,16],[2408,31,1633,29],[2408,32,1633,30],[2408,33,1633,31],[2408,35,1633,33,"fetch_1"],[2408,42,1633,40],[2408,43,1633,41,"_request"],[2408,51,1633,49],[2408,53,1633,51,"_this18"],[2408,60,1633,55],[2408,61,1633,56,"fetch"],[2408,66,1633,61],[2408,68,1633,63],[2408,73,1633,68],[2408,75,1633,70,"url"],[2408,78,1633,73],[2408,80,1633,75],[2409,20,1634,20,"headers"],[2409,27,1634,27],[2409,29,1634,29,"_this18"],[2409,36,1634,33],[2409,37,1634,34,"headers"],[2409,44,1634,41],[2410,20,1635,20,"jwt"],[2410,23,1635,23],[2410,25,1635,25],[2410,26,1635,26,"_e"],[2410,28,1635,28],[2410,31,1635,31],[2410,32,1635,32,"_d"],[2410,34,1635,34],[2410,37,1635,37,"data"],[2410,41,1635,41],[2410,42,1635,42,"session"],[2410,49,1635,49],[2410,55,1635,55],[2410,59,1635,59],[2410,63,1635,63,"_d"],[2410,65,1635,65],[2410,70,1635,70],[2410,75,1635,75],[2410,76,1635,76],[2410,79,1635,79],[2410,84,1635,84],[2410,85,1635,85],[2410,88,1635,88,"_d"],[2410,90,1635,90],[2410,91,1635,91,"access_token"],[2410,103,1635,103],[2410,109,1635,109],[2410,113,1635,113],[2410,117,1635,117,"_e"],[2410,119,1635,119],[2410,124,1635,124],[2410,129,1635,129],[2410,130,1635,130],[2410,133,1635,133,"_e"],[2410,135,1635,135],[2410,138,1635,138,"undefined"],[2411,18,1636,16],[2411,19,1636,17],[2411,20,1636,18],[2412,16,1637,12],[2412,17,1637,13],[2413,16,1637,13],[2413,33,1637,13,"_x41"],[2413,37,1637,13],[2414,18,1637,13],[2414,25,1637,13,"_ref26"],[2414,31,1637,13],[2414,32,1637,13,"apply"],[2414,37,1637,13],[2414,44,1637,13,"arguments"],[2414,53,1637,13],[2415,16,1637,13],[2416,14,1637,13],[2416,18,1637,14],[2417,14,1622,20,"data"],[2417,18,1622,24],[2417,21,1622,24,"_yield$this$_useSessi"],[2417,42,1622,24],[2417,43,1622,20,"data"],[2417,47,1622,24],[2418,14,1622,26,"error"],[2418,19,1622,31],[2418,22,1622,31,"_yield$this$_useSessi"],[2418,43,1622,31],[2418,44,1622,26,"error"],[2418,49,1622,31],[2419,12,1638,12],[2419,16,1638,16,"error"],[2419,21,1638,21],[2419,23,1639,16],[2419,29,1639,22,"error"],[2419,34,1639,27],[2420,12,1640,12],[2420,16,1640,16],[2420,17,1640,17],[2420,18,1640,18],[2420,20,1640,20,"helpers_1"],[2420,29,1640,29],[2420,30,1640,30,"isBrowser"],[2420,39,1640,39],[2420,41,1640,41],[2420,42,1640,42],[2420,46,1640,46],[2420,48,1640,48],[2420,49,1640,49,"_a"],[2420,51,1640,51],[2420,54,1640,54,"credentials"],[2420,65,1640,65],[2420,66,1640,66,"options"],[2420,73,1640,73],[2420,79,1640,79],[2420,83,1640,83],[2420,87,1640,87,"_a"],[2420,89,1640,89],[2420,94,1640,94],[2420,99,1640,99],[2420,100,1640,100],[2420,103,1640,103],[2420,108,1640,108],[2420,109,1640,109],[2420,112,1640,112,"_a"],[2420,114,1640,114],[2420,115,1640,115,"skipBrowserRedirect"],[2420,134,1640,134],[2420,135,1640,135],[2420,137,1640,137],[2421,14,1641,16,"window"],[2421,20,1641,22],[2421,21,1641,23,"location"],[2421,29,1641,31],[2421,30,1641,32,"assign"],[2421,36,1641,38],[2421,37,1641,39,"data"],[2421,41,1641,43],[2421,46,1641,48],[2421,50,1641,52],[2421,54,1641,56,"data"],[2421,58,1641,60],[2421,63,1641,65],[2421,68,1641,70],[2421,69,1641,71],[2421,72,1641,74],[2421,77,1641,79],[2421,78,1641,80],[2421,81,1641,83,"data"],[2421,85,1641,87],[2421,86,1641,88,"url"],[2421,89,1641,91],[2421,90,1641,92],[2422,12,1642,12],[2423,12,1643,12],[2423,19,1643,19],[2424,14,1643,21,"data"],[2424,18,1643,25],[2424,20,1643,27],[2425,16,1643,29,"provider"],[2425,24,1643,37],[2425,26,1643,39,"credentials"],[2425,37,1643,50],[2425,38,1643,51,"provider"],[2425,46,1643,59],[2426,16,1643,61,"url"],[2426,19,1643,64],[2426,21,1643,66,"data"],[2426,25,1643,70],[2426,30,1643,75],[2426,34,1643,79],[2426,38,1643,83,"data"],[2426,42,1643,87],[2426,47,1643,92],[2426,52,1643,97],[2426,53,1643,98],[2426,56,1643,101],[2426,61,1643,106],[2426,62,1643,107],[2426,65,1643,110,"data"],[2426,69,1643,114],[2426,70,1643,115,"url"],[2427,14,1643,119],[2427,15,1643,120],[2428,14,1643,122,"error"],[2428,19,1643,127],[2428,21,1643,129],[2429,12,1643,134],[2429,13,1643,135],[2430,10,1644,8],[2430,11,1644,9],[2430,12,1645,8],[2430,19,1645,15,"error"],[2430,24,1645,20],[2430,26,1645,22],[2431,12,1646,12],[2431,16,1646,16],[2431,17,1646,17],[2431,18,1646,18],[2431,20,1646,20,"errors_1"],[2431,28,1646,28],[2431,29,1646,29,"isAuthError"],[2431,40,1646,40],[2431,42,1646,42,"error"],[2431,47,1646,47],[2431,48,1646,48],[2431,50,1646,50],[2432,14,1647,16],[2432,21,1647,23],[2433,16,1647,25,"data"],[2433,20,1647,29],[2433,22,1647,31],[2434,18,1647,33,"provider"],[2434,26,1647,41],[2434,28,1647,43,"credentials"],[2434,39,1647,54],[2434,40,1647,55,"provider"],[2434,48,1647,63],[2435,18,1647,65,"url"],[2435,21,1647,68],[2435,23,1647,70],[2436,16,1647,75],[2436,17,1647,76],[2437,16,1647,78,"error"],[2438,14,1647,84],[2438,15,1647,85],[2439,12,1648,12],[2440,12,1649,12],[2440,18,1649,18,"error"],[2440,23,1649,23],[2441,10,1650,8],[2442,8,1651,4],[2442,9,1651,5],[2443,8,1651,5],[2443,17,1619,10,"linkIdentity"],[2443,29,1619,22,"linkIdentity"],[2443,30,1619,22,"_x40"],[2443,34,1619,22],[2444,10,1619,22],[2444,17,1619,22,"_linkIdentity"],[2444,30,1619,22],[2444,31,1619,22,"apply"],[2444,36,1619,22],[2444,43,1619,22,"arguments"],[2444,52,1619,22],[2445,8,1619,22],[2446,8,1619,22],[2446,15,1619,10,"linkIdentity"],[2446,27,1619,22],[2447,6,1619,22],[2448,6,1652,4],[2449,0,1653,0],[2450,0,1654,0],[2451,6,1652,4],[2452,4,1652,4],[2453,6,1652,4,"key"],[2453,9,1652,4],[2454,6,1652,4,"value"],[2454,11,1652,4],[2455,8,1652,4],[2455,12,1652,4,"_unlinkIdentity"],[2455,27,1652,4],[2455,30,1652,4,"_asyncToGenerator"],[2455,47,1652,4],[2455,48,1655,4],[2455,59,1655,25,"identity"],[2455,67,1655,33],[2455,69,1655,35],[2456,10,1655,35],[2456,14,1655,35,"_this19"],[2456,21,1655,35],[2457,10,1656,8],[2457,14,1656,12],[2458,12,1657,12],[2458,25,1657,25],[2458,29,1657,29],[2458,30,1657,30,"_useSession"],[2458,41,1657,41],[2459,14,1657,41],[2459,18,1657,41,"_ref27"],[2459,24,1657,41],[2459,27,1657,41,"_asyncToGenerator"],[2459,44,1657,41],[2459,45,1657,42],[2459,56,1657,49,"result"],[2459,62,1657,55],[2459,64,1657,60],[2460,16,1658,16],[2460,20,1658,20,"_a"],[2460,22,1658,22],[2460,24,1658,24,"_b"],[2460,26,1658,26],[2461,16,1659,16],[2461,20,1659,24,"data"],[2461,24,1659,28],[2461,27,1659,40,"result"],[2461,33,1659,46],[2461,34,1659,24,"data"],[2461,38,1659,28],[2462,18,1659,30,"error"],[2462,23,1659,35],[2462,26,1659,40,"result"],[2462,32,1659,46],[2462,33,1659,30,"error"],[2462,38,1659,35],[2463,16,1660,16],[2463,20,1660,20,"error"],[2463,25,1660,25],[2463,27,1660,27],[2464,18,1661,20],[2464,24,1661,26,"error"],[2464,29,1661,31],[2465,16,1662,16],[2466,16,1663,16],[2466,29,1663,29],[2466,30,1663,30],[2466,31,1663,31],[2466,33,1663,33,"fetch_1"],[2466,40,1663,40],[2466,41,1663,41,"_request"],[2466,49,1663,49],[2466,51,1663,51,"_this19"],[2466,58,1663,55],[2466,59,1663,56,"fetch"],[2466,64,1663,61],[2466,66,1663,63],[2466,74,1663,71],[2466,76,1663,73],[2466,79,1663,76,"_this19"],[2466,86,1663,80],[2466,87,1663,81,"url"],[2466,90,1663,84],[2466,110,1663,104,"identity"],[2466,118,1663,112],[2466,119,1663,113,"identity_id"],[2466,130,1663,124],[2466,132,1663,126],[2466,134,1663,128],[2467,18,1664,20,"headers"],[2467,25,1664,27],[2467,27,1664,29,"_this19"],[2467,34,1664,33],[2467,35,1664,34,"headers"],[2467,42,1664,41],[2468,18,1665,20,"jwt"],[2468,21,1665,23],[2468,23,1665,25],[2468,24,1665,26,"_b"],[2468,26,1665,28],[2468,29,1665,31],[2468,30,1665,32,"_a"],[2468,32,1665,34],[2468,35,1665,37,"data"],[2468,39,1665,41],[2468,40,1665,42,"session"],[2468,47,1665,49],[2468,53,1665,55],[2468,57,1665,59],[2468,61,1665,63,"_a"],[2468,63,1665,65],[2468,68,1665,70],[2468,73,1665,75],[2468,74,1665,76],[2468,77,1665,79],[2468,82,1665,84],[2468,83,1665,85],[2468,86,1665,88,"_a"],[2468,88,1665,90],[2468,89,1665,91,"access_token"],[2468,101,1665,103],[2468,107,1665,109],[2468,111,1665,113],[2468,115,1665,117,"_b"],[2468,117,1665,119],[2468,122,1665,124],[2468,127,1665,129],[2468,128,1665,130],[2468,131,1665,133,"_b"],[2468,133,1665,135],[2468,136,1665,138,"undefined"],[2469,16,1666,16],[2469,17,1666,17],[2469,18,1666,18],[2470,14,1667,12],[2470,15,1667,13],[2471,14,1667,13],[2471,31,1667,13,"_x43"],[2471,35,1667,13],[2472,16,1667,13],[2472,23,1667,13,"_ref27"],[2472,29,1667,13],[2472,30,1667,13,"apply"],[2472,35,1667,13],[2472,42,1667,13,"arguments"],[2472,51,1667,13],[2473,14,1667,13],[2474,12,1667,13],[2474,16,1667,14],[2475,10,1668,8],[2475,11,1668,9],[2475,12,1669,8],[2475,19,1669,15,"error"],[2475,24,1669,20],[2475,26,1669,22],[2476,12,1670,12],[2476,16,1670,16],[2476,17,1670,17],[2476,18,1670,18],[2476,20,1670,20,"errors_1"],[2476,28,1670,28],[2476,29,1670,29,"isAuthError"],[2476,40,1670,40],[2476,42,1670,42,"error"],[2476,47,1670,47],[2476,48,1670,48],[2476,50,1670,50],[2477,14,1671,16],[2477,21,1671,23],[2478,16,1671,25,"data"],[2478,20,1671,29],[2478,22,1671,31],[2478,26,1671,35],[2479,16,1671,37,"error"],[2480,14,1671,43],[2480,15,1671,44],[2481,12,1672,12],[2482,12,1673,12],[2482,18,1673,18,"error"],[2482,23,1673,23],[2483,10,1674,8],[2484,8,1675,4],[2484,9,1675,5],[2485,8,1675,5],[2485,17,1655,10,"unlinkIdentity"],[2485,31,1655,24,"unlinkIdentity"],[2485,32,1655,24,"_x42"],[2485,36,1655,24],[2486,10,1655,24],[2486,17,1655,24,"_unlinkIdentity"],[2486,32,1655,24],[2486,33,1655,24,"apply"],[2486,38,1655,24],[2486,45,1655,24,"arguments"],[2486,54,1655,24],[2487,8,1655,24],[2488,8,1655,24],[2488,15,1655,10,"unlinkIdentity"],[2488,29,1655,24],[2489,6,1655,24],[2490,6,1676,4],[2491,0,1677,0],[2492,0,1678,0],[2493,0,1679,0],[2494,6,1676,4],[2495,4,1676,4],[2496,6,1676,4,"key"],[2496,9,1676,4],[2497,6,1676,4,"value"],[2497,11,1676,4],[2498,8,1676,4],[2498,12,1676,4,"_refreshAccessToken2"],[2498,32,1676,4],[2498,35,1676,4,"_asyncToGenerator"],[2498,52,1676,4],[2498,53,1680,4],[2498,64,1680,30,"refreshToken"],[2498,76,1680,42],[2498,78,1680,44],[2499,10,1680,44],[2499,14,1680,44,"_this20"],[2499,21,1680,44],[2500,10,1681,8],[2500,14,1681,14,"debugName"],[2500,23,1681,23],[2500,26,1681,26],[2500,50,1681,50,"refreshToken"],[2500,62,1681,62],[2500,63,1681,63,"substring"],[2500,72,1681,72],[2500,73,1681,73],[2500,74,1681,74],[2500,76,1681,76],[2500,77,1681,77],[2500,78,1681,78],[2500,84,1681,84],[2501,10,1682,8],[2501,14,1682,12],[2501,15,1682,13,"_debug"],[2501,21,1682,19],[2501,22,1682,20,"debugName"],[2501,31,1682,29],[2501,33,1682,31],[2501,40,1682,38],[2501,41,1682,39],[2502,10,1683,8],[2502,14,1683,12],[2503,12,1684,12],[2503,16,1684,18,"startedAt"],[2503,25,1684,27],[2503,28,1684,30,"Date"],[2503,32,1684,34],[2503,33,1684,35,"now"],[2503,36,1684,38],[2503,37,1684,39],[2503,38,1684,40],[2504,12,1685,12],[2505,12,1686,12],[2505,25,1686,25],[2505,26,1686,26],[2505,27,1686,27],[2505,29,1686,29,"helpers_1"],[2505,38,1686,38],[2505,39,1686,39,"retryable"],[2505,48,1686,48],[2506,14,1686,48],[2506,18,1686,48,"_ref28"],[2506,24,1686,48],[2506,27,1686,48,"_asyncToGenerator"],[2506,44,1686,48],[2506,45,1686,50],[2506,56,1686,57,"attempt"],[2506,63,1686,64],[2506,65,1686,69],[2507,16,1687,16],[2507,20,1687,20,"attempt"],[2507,27,1687,27],[2507,30,1687,30],[2507,31,1687,31],[2507,33,1687,33],[2508,18,1688,20],[2508,24,1688,26],[2508,25,1688,27],[2508,26,1688,28],[2508,28,1688,30,"helpers_1"],[2508,37,1688,39],[2508,38,1688,40,"sleep"],[2508,43,1688,45],[2508,45,1688,47],[2508,48,1688,50],[2508,51,1688,53,"Math"],[2508,55,1688,57],[2508,56,1688,58,"pow"],[2508,59,1688,61],[2508,60,1688,62],[2508,61,1688,63],[2508,63,1688,65,"attempt"],[2508,70,1688,72],[2508,73,1688,75],[2508,74,1688,76],[2508,75,1688,77],[2508,76,1688,78],[2508,77,1688,79],[2508,78,1688,80],[2509,16,1689,16],[2510,16,1690,16,"_this20"],[2510,23,1690,20],[2510,24,1690,21,"_debug"],[2510,30,1690,27],[2510,31,1690,28,"debugName"],[2510,40,1690,37],[2510,42,1690,39],[2510,62,1690,59],[2510,64,1690,61,"attempt"],[2510,71,1690,68],[2510,72,1690,69],[2511,16,1691,16],[2511,29,1691,29],[2511,30,1691,30],[2511,31,1691,31],[2511,33,1691,33,"fetch_1"],[2511,40,1691,40],[2511,41,1691,41,"_request"],[2511,49,1691,49],[2511,51,1691,51,"_this20"],[2511,58,1691,55],[2511,59,1691,56,"fetch"],[2511,64,1691,61],[2511,66,1691,63],[2511,72,1691,69],[2511,74,1691,71],[2511,77,1691,74,"_this20"],[2511,84,1691,78],[2511,85,1691,79,"url"],[2511,88,1691,82],[2511,121,1691,115],[2511,123,1691,117],[2512,18,1692,20,"body"],[2512,22,1692,24],[2512,24,1692,26],[2513,20,1692,28,"refresh_token"],[2513,33,1692,41],[2513,35,1692,43,"refreshToken"],[2514,18,1692,56],[2514,19,1692,57],[2515,18,1693,20,"headers"],[2515,25,1693,27],[2515,27,1693,29,"_this20"],[2515,34,1693,33],[2515,35,1693,34,"headers"],[2515,42,1693,41],[2516,18,1694,20,"xform"],[2516,23,1694,25],[2516,25,1694,27,"fetch_1"],[2516,32,1694,34],[2516,33,1694,35,"_sessionResponse"],[2517,16,1695,16],[2517,17,1695,17],[2517,18,1695,18],[2518,14,1696,12],[2518,15,1696,13],[2519,14,1696,13],[2519,31,1696,13,"_x45"],[2519,35,1696,13],[2520,16,1696,13],[2520,23,1696,13,"_ref28"],[2520,29,1696,13],[2520,30,1696,13,"apply"],[2520,35,1696,13],[2520,42,1696,13,"arguments"],[2520,51,1696,13],[2521,14,1696,13],[2522,12,1696,13],[2522,17,1696,15],[2522,18,1696,16,"attempt"],[2522,25,1696,23],[2522,27,1696,25,"error"],[2522,32,1696,30],[2522,37,1696,35],[2523,14,1697,16],[2523,18,1697,22,"nextBackOffInterval"],[2523,37,1697,41],[2523,40,1697,44],[2523,43,1697,47],[2523,46,1697,50,"Math"],[2523,50,1697,54],[2523,51,1697,55,"pow"],[2523,54,1697,58],[2523,55,1697,59],[2523,56,1697,60],[2523,58,1697,62,"attempt"],[2523,65,1697,69],[2523,66,1697,70],[2524,14,1698,16],[2524,21,1698,24,"error"],[2524,26,1698,29],[2524,30,1699,20],[2524,31,1699,21],[2524,32,1699,22],[2524,34,1699,24,"errors_1"],[2524,42,1699,32],[2524,43,1699,33,"isAuthRetryableFetchError"],[2524,68,1699,58],[2524,70,1699,60,"error"],[2524,75,1699,65],[2524,76,1699,66],[2525,14,1700,20],[2526,14,1701,20,"Date"],[2526,18,1701,24],[2526,19,1701,25,"now"],[2526,22,1701,28],[2526,23,1701,29],[2526,24,1701,30],[2526,27,1701,33,"nextBackOffInterval"],[2526,46,1701,52],[2526,49,1701,55,"startedAt"],[2526,58,1701,64],[2526,61,1701,67,"constants_1"],[2526,72,1701,78],[2526,73,1701,79,"AUTO_REFRESH_TICK_DURATION_MS"],[2526,102,1701,108],[2527,12,1702,12],[2527,13,1702,13],[2527,14,1702,14],[2528,10,1703,8],[2528,11,1703,9],[2528,12,1704,8],[2528,19,1704,15,"error"],[2528,24,1704,20],[2528,26,1704,22],[2529,12,1705,12],[2529,16,1705,16],[2529,17,1705,17,"_debug"],[2529,23,1705,23],[2529,24,1705,24,"debugName"],[2529,33,1705,33],[2529,35,1705,35],[2529,42,1705,42],[2529,44,1705,44,"error"],[2529,49,1705,49],[2529,50,1705,50],[2530,12,1706,12],[2530,16,1706,16],[2530,17,1706,17],[2530,18,1706,18],[2530,20,1706,20,"errors_1"],[2530,28,1706,28],[2530,29,1706,29,"isAuthError"],[2530,40,1706,40],[2530,42,1706,42,"error"],[2530,47,1706,47],[2530,48,1706,48],[2530,50,1706,50],[2531,14,1707,16],[2531,21,1707,23],[2532,16,1707,25,"data"],[2532,20,1707,29],[2532,22,1707,31],[2533,18,1707,33,"session"],[2533,25,1707,40],[2533,27,1707,42],[2533,31,1707,46],[2534,18,1707,48,"user"],[2534,22,1707,52],[2534,24,1707,54],[2535,16,1707,59],[2535,17,1707,60],[2536,16,1707,62,"error"],[2537,14,1707,68],[2537,15,1707,69],[2538,12,1708,12],[2539,12,1709,12],[2539,18,1709,18,"error"],[2539,23,1709,23],[2540,10,1710,8],[2540,11,1710,9],[2540,20,1711,16],[2541,12,1712,12],[2541,16,1712,16],[2541,17,1712,17,"_debug"],[2541,23,1712,23],[2541,24,1712,24,"debugName"],[2541,33,1712,33],[2541,35,1712,35],[2541,40,1712,40],[2541,41,1712,41],[2542,10,1713,8],[2543,8,1714,4],[2543,9,1714,5],[2544,8,1714,5],[2544,17,1680,10,"_refreshAccessToken"],[2544,36,1680,29,"_refreshAccessToken"],[2544,37,1680,29,"_x44"],[2544,41,1680,29],[2545,10,1680,29],[2545,17,1680,29,"_refreshAccessToken2"],[2545,37,1680,29],[2545,38,1680,29,"apply"],[2545,43,1680,29],[2545,50,1680,29,"arguments"],[2545,59,1680,29],[2546,8,1680,29],[2547,8,1680,29],[2547,15,1680,10,"_refreshAccessToken"],[2547,34,1680,29],[2548,6,1680,29],[2549,4,1680,29],[2550,6,1680,29,"key"],[2550,9,1680,29],[2551,6,1680,29,"value"],[2551,11,1680,29],[2551,13,1715,4],[2551,22,1715,4,"_isValidSession"],[2551,37,1715,19,"_isValidSession"],[2551,38,1715,20,"maybeSession"],[2551,50,1715,32],[2551,52,1715,34],[2552,8,1716,8],[2552,12,1716,14,"isValidSession"],[2552,26,1716,28],[2552,29,1716,31],[2552,36,1716,38,"maybeSession"],[2552,48,1716,50],[2552,53,1716,55],[2552,61,1716,63],[2552,65,1717,12,"maybeSession"],[2552,77,1717,24],[2552,82,1717,29],[2552,86,1717,33],[2552,90,1718,12],[2552,104,1718,26],[2552,108,1718,30,"maybeSession"],[2552,120,1718,42],[2552,124,1719,12],[2552,139,1719,27],[2552,143,1719,31,"maybeSession"],[2552,155,1719,43],[2552,159,1720,12],[2552,171,1720,24],[2552,175,1720,28,"maybeSession"],[2552,187,1720,40],[2553,8,1721,8],[2553,15,1721,15,"isValidSession"],[2553,29,1721,29],[2554,6,1722,4],[2555,4,1722,5],[2556,6,1722,5,"key"],[2556,9,1722,5],[2557,6,1722,5,"value"],[2557,11,1722,5],[2558,8,1722,5],[2558,12,1722,5,"_handleProviderSignIn2"],[2558,34,1722,5],[2558,37,1722,5,"_asyncToGenerator"],[2558,54,1722,5],[2558,55,1723,4],[2558,66,1723,32,"provider"],[2558,74,1723,40],[2558,76,1723,42,"options"],[2558,83,1723,49],[2558,85,1723,51],[2559,10,1724,8],[2559,14,1724,14,"url"],[2559,17,1724,17],[2559,26,1724,26],[2559,30,1724,30],[2559,31,1724,31,"_getUrlForProvider"],[2559,49,1724,49],[2559,50,1724,50],[2559,53,1724,53],[2559,57,1724,57],[2559,58,1724,58,"url"],[2559,61,1724,61],[2559,73,1724,73],[2559,75,1724,75,"provider"],[2559,83,1724,83],[2559,85,1724,85],[2560,12,1725,12,"redirectTo"],[2560,22,1725,22],[2560,24,1725,24,"options"],[2560,31,1725,31],[2560,32,1725,32,"redirectTo"],[2560,42,1725,42],[2561,12,1726,12,"scopes"],[2561,18,1726,18],[2561,20,1726,20,"options"],[2561,27,1726,27],[2561,28,1726,28,"scopes"],[2561,34,1726,34],[2562,12,1727,12,"queryParams"],[2562,23,1727,23],[2562,25,1727,25,"options"],[2562,32,1727,32],[2562,33,1727,33,"queryParams"],[2563,10,1728,8],[2563,11,1728,9],[2563,12,1728,10],[2564,10,1729,8],[2564,14,1729,12],[2564,15,1729,13,"_debug"],[2564,21,1729,19],[2564,22,1729,20],[2564,48,1729,46],[2564,50,1729,48],[2564,60,1729,58],[2564,62,1729,60,"provider"],[2564,70,1729,68],[2564,72,1729,70],[2564,81,1729,79],[2564,83,1729,81,"options"],[2564,90,1729,88],[2564,92,1729,90],[2564,97,1729,95],[2564,99,1729,97,"url"],[2564,102,1729,100],[2564,103,1729,101],[2565,10,1730,8],[2566,10,1731,8],[2566,14,1731,12],[2566,15,1731,13],[2566,16,1731,14],[2566,18,1731,16,"helpers_1"],[2566,27,1731,25],[2566,28,1731,26,"isBrowser"],[2566,37,1731,35],[2566,39,1731,37],[2566,40,1731,38],[2566,44,1731,42],[2566,45,1731,43,"options"],[2566,52,1731,50],[2566,53,1731,51,"skipBrowserRedirect"],[2566,72,1731,70],[2566,74,1731,72],[2567,12,1732,12,"window"],[2567,18,1732,18],[2567,19,1732,19,"location"],[2567,27,1732,27],[2567,28,1732,28,"assign"],[2567,34,1732,34],[2567,35,1732,35,"url"],[2567,38,1732,38],[2567,39,1732,39],[2568,10,1733,8],[2569,10,1734,8],[2569,17,1734,15],[2570,12,1734,17,"data"],[2570,16,1734,21],[2570,18,1734,23],[2571,14,1734,25,"provider"],[2571,22,1734,33],[2572,14,1734,35,"url"],[2573,12,1734,39],[2573,13,1734,40],[2574,12,1734,42,"error"],[2574,17,1734,47],[2574,19,1734,49],[2575,10,1734,54],[2575,11,1734,55],[2576,8,1735,4],[2576,9,1735,5],[2577,8,1735,5],[2577,17,1723,10,"_handleProviderSignIn"],[2577,38,1723,31,"_handleProviderSignIn"],[2577,39,1723,31,"_x46"],[2577,43,1723,31],[2577,45,1723,31,"_x47"],[2577,49,1723,31],[2578,10,1723,31],[2578,17,1723,31,"_handleProviderSignIn2"],[2578,39,1723,31],[2578,40,1723,31,"apply"],[2578,45,1723,31],[2578,52,1723,31,"arguments"],[2578,61,1723,31],[2579,8,1723,31],[2580,8,1723,31],[2580,15,1723,10,"_handleProviderSignIn"],[2580,36,1723,31],[2581,6,1723,31],[2582,6,1736,4],[2583,0,1737,0],[2584,0,1738,0],[2585,0,1739,0],[2586,4,1736,4],[2587,6,1736,4,"key"],[2587,9,1736,4],[2588,6,1736,4,"value"],[2588,11,1736,4],[2589,8,1736,4],[2589,12,1736,4,"_recoverAndRefresh2"],[2589,31,1736,4],[2589,34,1736,4,"_asyncToGenerator"],[2589,51,1736,4],[2589,52,1740,4],[2589,65,1740,31],[2590,10,1741,8],[2590,14,1741,12,"_a"],[2590,16,1741,14],[2590,18,1741,16,"_b"],[2590,20,1741,18],[2591,10,1742,8],[2591,14,1742,14,"debugName"],[2591,23,1742,23],[2591,26,1742,26],[2591,49,1742,49],[2592,10,1743,8],[2592,14,1743,12],[2592,15,1743,13,"_debug"],[2592,21,1743,19],[2592,22,1743,20,"debugName"],[2592,31,1743,29],[2592,33,1743,31],[2592,40,1743,38],[2592,41,1743,39],[2593,10,1744,8],[2593,14,1744,12],[2594,12,1745,12],[2594,16,1745,18,"currentSession"],[2594,30,1745,32],[2594,39,1745,42],[2594,40,1745,43],[2594,41,1745,44],[2594,43,1745,46,"helpers_1"],[2594,52,1745,55],[2594,53,1745,56,"getItemAsync"],[2594,65,1745,68],[2594,67,1745,70],[2594,71,1745,74],[2594,72,1745,75,"storage"],[2594,79,1745,82],[2594,81,1745,84],[2594,85,1745,88],[2594,86,1745,89,"storageKey"],[2594,96,1745,99],[2594,97,1745,101],[2595,12,1746,12],[2595,16,1746,16,"currentSession"],[2595,30,1746,30],[2595,34,1746,34],[2595,38,1746,38],[2595,39,1746,39,"userStorage"],[2595,50,1746,50],[2595,52,1746,52],[2596,14,1747,16],[2596,18,1747,20,"maybeUser"],[2596,27,1747,29],[2596,36,1747,39],[2596,37,1747,40],[2596,38,1747,41],[2596,40,1747,43,"helpers_1"],[2596,49,1747,52],[2596,50,1747,53,"getItemAsync"],[2596,62,1747,65],[2596,64,1747,67],[2596,68,1747,71],[2596,69,1747,72,"userStorage"],[2596,80,1747,83],[2596,82,1747,85],[2596,86,1747,89],[2596,87,1747,90,"storageKey"],[2596,97,1747,100],[2596,100,1747,103],[2596,107,1747,110],[2596,108,1747,112],[2597,14,1748,16],[2597,18,1748,20],[2597,19,1748,21],[2597,23,1748,25],[2597,24,1748,26,"storage"],[2597,31,1748,33],[2597,32,1748,34,"isServer"],[2597,40,1748,42],[2597,44,1748,46,"Object"],[2597,50,1748,52],[2597,51,1748,53,"is"],[2597,53,1748,55],[2597,54,1748,56],[2597,58,1748,60],[2597,59,1748,61,"storage"],[2597,66,1748,68],[2597,68,1748,70],[2597,72,1748,74],[2597,73,1748,75,"userStorage"],[2597,84,1748,86],[2597,85,1748,87],[2597,89,1748,91],[2597,90,1748,92,"maybeUser"],[2597,99,1748,101],[2597,101,1748,103],[2598,16,1749,20],[2599,16,1750,20],[2600,16,1751,20],[2601,16,1752,20],[2602,16,1753,20,"maybeUser"],[2602,25,1753,29],[2602,28,1753,32],[2603,18,1753,34,"user"],[2603,22,1753,38],[2603,24,1753,40,"currentSession"],[2603,38,1753,54],[2603,39,1753,55,"user"],[2604,16,1753,60],[2604,17,1753,61],[2605,16,1754,20],[2605,22,1754,26],[2605,23,1754,27],[2605,24,1754,28],[2605,26,1754,30,"helpers_1"],[2605,35,1754,39],[2605,36,1754,40,"setItemAsync"],[2605,48,1754,52],[2605,50,1754,54],[2605,54,1754,58],[2605,55,1754,59,"userStorage"],[2605,66,1754,70],[2605,68,1754,72],[2605,72,1754,76],[2605,73,1754,77,"storageKey"],[2605,83,1754,87],[2605,86,1754,90],[2605,93,1754,97],[2605,95,1754,99,"maybeUser"],[2605,104,1754,108],[2605,105,1754,109],[2606,14,1755,16],[2607,14,1756,16,"currentSession"],[2607,28,1756,30],[2607,29,1756,31,"user"],[2607,33,1756,35],[2607,36,1756,38],[2607,37,1756,39,"_a"],[2607,39,1756,41],[2607,42,1756,44,"maybeUser"],[2607,51,1756,53],[2607,56,1756,58],[2607,60,1756,62],[2607,64,1756,66,"maybeUser"],[2607,73,1756,75],[2607,78,1756,80],[2607,83,1756,85],[2607,84,1756,86],[2607,87,1756,89],[2607,92,1756,94],[2607,93,1756,95],[2607,96,1756,98,"maybeUser"],[2607,105,1756,107],[2607,106,1756,108,"user"],[2607,110,1756,112],[2607,116,1756,118],[2607,120,1756,122],[2607,124,1756,126,"_a"],[2607,126,1756,128],[2607,131,1756,133],[2607,136,1756,138],[2607,137,1756,139],[2607,140,1756,142,"_a"],[2607,142,1756,144],[2607,145,1756,147],[2607,146,1756,148],[2607,147,1756,149],[2607,149,1756,151,"helpers_1"],[2607,158,1756,160],[2607,159,1756,161,"userNotAvailableProxy"],[2607,180,1756,182],[2607,182,1756,184],[2607,183,1756,185],[2608,12,1757,12],[2608,13,1757,13],[2608,19,1758,17],[2608,23,1758,21,"currentSession"],[2608,37,1758,35],[2608,41,1758,39],[2608,42,1758,40,"currentSession"],[2608,56,1758,54],[2608,57,1758,55,"user"],[2608,61,1758,59],[2608,63,1758,61],[2609,14,1759,16],[2610,14,1760,16],[2611,14,1761,16],[2611,18,1761,20],[2611,19,1761,21,"currentSession"],[2611,33,1761,35],[2611,34,1761,36,"user"],[2611,38,1761,40],[2611,40,1761,42],[2612,16,1762,20],[2613,16,1763,20],[2613,20,1763,26,"separateUser"],[2613,32,1763,38],[2613,41,1763,48],[2613,42,1763,49],[2613,43,1763,50],[2613,45,1763,52,"helpers_1"],[2613,54,1763,61],[2613,55,1763,62,"getItemAsync"],[2613,67,1763,74],[2613,69,1763,76],[2613,73,1763,80],[2613,74,1763,81,"storage"],[2613,81,1763,88],[2613,83,1763,90],[2613,87,1763,94],[2613,88,1763,95,"storageKey"],[2613,98,1763,105],[2613,101,1763,108],[2613,108,1763,115],[2613,109,1763,117],[2614,16,1764,20],[2614,20,1764,24,"separateUser"],[2614,32,1764,36],[2614,37,1764,41,"separateUser"],[2614,49,1764,53],[2614,54,1764,58],[2614,58,1764,62],[2614,62,1764,66,"separateUser"],[2614,74,1764,78],[2614,79,1764,83],[2614,84,1764,88],[2614,85,1764,89],[2614,88,1764,92],[2614,93,1764,97],[2614,94,1764,98],[2614,97,1764,101,"separateUser"],[2614,109,1764,113],[2614,110,1764,114,"user"],[2614,114,1764,118],[2614,115,1764,119],[2614,117,1764,121],[2615,18,1765,24,"currentSession"],[2615,32,1765,38],[2615,33,1765,39,"user"],[2615,37,1765,43],[2615,40,1765,46,"separateUser"],[2615,52,1765,58],[2615,53,1765,59,"user"],[2615,57,1765,63],[2616,18,1766,24],[2616,24,1766,30],[2616,25,1766,31],[2616,26,1766,32],[2616,28,1766,34,"helpers_1"],[2616,37,1766,43],[2616,38,1766,44,"removeItemAsync"],[2616,53,1766,59],[2616,55,1766,61],[2616,59,1766,65],[2616,60,1766,66,"storage"],[2616,67,1766,73],[2616,69,1766,75],[2616,73,1766,79],[2616,74,1766,80,"storageKey"],[2616,84,1766,90],[2616,87,1766,93],[2616,94,1766,100],[2616,95,1766,101],[2617,18,1767,24],[2617,24,1767,30],[2617,25,1767,31],[2617,26,1767,32],[2617,28,1767,34,"helpers_1"],[2617,37,1767,43],[2617,38,1767,44,"setItemAsync"],[2617,50,1767,56],[2617,52,1767,58],[2617,56,1767,62],[2617,57,1767,63,"storage"],[2617,64,1767,70],[2617,66,1767,72],[2617,70,1767,76],[2617,71,1767,77,"storageKey"],[2617,81,1767,87],[2617,83,1767,89,"currentSession"],[2617,97,1767,103],[2617,98,1767,104],[2618,16,1768,20],[2618,17,1768,21],[2618,23,1769,25],[2619,18,1770,24,"currentSession"],[2619,32,1770,38],[2619,33,1770,39,"user"],[2619,37,1770,43],[2619,40,1770,46],[2619,41,1770,47],[2619,42,1770,48],[2619,44,1770,50,"helpers_1"],[2619,53,1770,59],[2619,54,1770,60,"userNotAvailableProxy"],[2619,75,1770,81],[2619,77,1770,83],[2619,78,1770,84],[2620,16,1771,20],[2621,14,1772,16],[2622,12,1773,12],[2623,12,1774,12],[2623,16,1774,16],[2623,17,1774,17,"_debug"],[2623,23,1774,23],[2623,24,1774,24,"debugName"],[2623,33,1774,33],[2623,35,1774,35],[2623,57,1774,57],[2623,59,1774,59,"currentSession"],[2623,73,1774,73],[2623,74,1774,74],[2624,12,1775,12],[2624,16,1775,16],[2624,17,1775,17],[2624,21,1775,21],[2624,22,1775,22,"_isValidSession"],[2624,37,1775,37],[2624,38,1775,38,"currentSession"],[2624,52,1775,52],[2624,53,1775,53],[2624,55,1775,55],[2625,14,1776,16],[2625,18,1776,20],[2625,19,1776,21,"_debug"],[2625,25,1776,27],[2625,26,1776,28,"debugName"],[2625,35,1776,37],[2625,37,1776,39],[2625,59,1776,61],[2625,60,1776,62],[2626,14,1777,16],[2626,18,1777,20,"currentSession"],[2626,32,1777,34],[2626,37,1777,39],[2626,41,1777,43],[2626,43,1777,45],[2627,16,1778,20],[2627,22,1778,26],[2627,26,1778,30],[2627,27,1778,31,"_removeSession"],[2627,41,1778,45],[2627,42,1778,46],[2627,43,1778,47],[2628,14,1779,16],[2629,14,1780,16],[2630,12,1781,12],[2631,12,1782,12],[2631,16,1782,18,"expiresWithMargin"],[2631,33,1782,35],[2631,36,1782,38],[2631,37,1782,39],[2631,38,1782,40,"_b"],[2631,40,1782,42],[2631,43,1782,45,"currentSession"],[2631,57,1782,59],[2631,58,1782,60,"expires_at"],[2631,68,1782,70],[2631,74,1782,76],[2631,78,1782,80],[2631,82,1782,84,"_b"],[2631,84,1782,86],[2631,89,1782,91],[2631,94,1782,96],[2631,95,1782,97],[2631,98,1782,100,"_b"],[2631,100,1782,102],[2631,103,1782,105,"Infinity"],[2631,111,1782,113],[2631,115,1782,117],[2631,119,1782,121],[2631,122,1782,124,"Date"],[2631,126,1782,128],[2631,127,1782,129,"now"],[2631,130,1782,132],[2631,131,1782,133],[2631,132,1782,134],[2631,135,1782,137,"constants_1"],[2631,146,1782,148],[2631,147,1782,149,"EXPIRY_MARGIN_MS"],[2631,163,1782,165],[2632,12,1783,12],[2632,16,1783,16],[2632,17,1783,17,"_debug"],[2632,23,1783,23],[2632,24,1783,24,"debugName"],[2632,33,1783,33],[2632,35,1783,35],[2632,49,1783,49,"expiresWithMargin"],[2632,66,1783,66],[2632,69,1783,69],[2632,71,1783,71],[2632,74,1783,74],[2632,80,1783,80],[2632,107,1783,107,"constants_1"],[2632,118,1783,118],[2632,119,1783,119,"EXPIRY_MARGIN_MS"],[2632,135,1783,135],[2632,138,1783,138],[2632,139,1783,139],[2633,12,1784,12],[2633,16,1784,16,"expiresWithMargin"],[2633,33,1784,33],[2633,35,1784,35],[2634,14,1785,16],[2634,18,1785,20],[2634,22,1785,24],[2634,23,1785,25,"autoRefreshToken"],[2634,39,1785,41],[2634,43,1785,45,"currentSession"],[2634,57,1785,59],[2634,58,1785,60,"refresh_token"],[2634,71,1785,73],[2634,73,1785,75],[2635,16,1786,20],[2635,20,1786,20,"_yield$this$_callRefr3"],[2635,42,1786,20],[2635,51,1786,44],[2635,55,1786,48],[2635,56,1786,49,"_callRefreshToken"],[2635,73,1786,66],[2635,74,1786,67,"currentSession"],[2635,88,1786,81],[2635,89,1786,82,"refresh_token"],[2635,102,1786,95],[2635,103,1786,96],[2636,18,1786,28,"error"],[2636,23,1786,33],[2636,26,1786,33,"_yield$this$_callRefr3"],[2636,48,1786,33],[2636,49,1786,28,"error"],[2636,54,1786,33],[2637,16,1787,20],[2637,20,1787,24,"error"],[2637,25,1787,29],[2637,27,1787,31],[2638,18,1788,24,"console"],[2638,25,1788,31],[2638,26,1788,32,"error"],[2638,31,1788,37],[2638,32,1788,38,"error"],[2638,37,1788,43],[2638,38,1788,44],[2639,18,1789,24],[2639,22,1789,28],[2639,23,1789,29],[2639,24,1789,30],[2639,25,1789,31],[2639,27,1789,33,"errors_1"],[2639,35,1789,41],[2639,36,1789,42,"isAuthRetryableFetchError"],[2639,61,1789,67],[2639,63,1789,69,"error"],[2639,68,1789,74],[2639,69,1789,75],[2639,71,1789,77],[2640,20,1790,28],[2640,24,1790,32],[2640,25,1790,33,"_debug"],[2640,31,1790,39],[2640,32,1790,40,"debugName"],[2640,41,1790,49],[2640,43,1790,51],[2640,108,1790,116],[2640,110,1790,118,"error"],[2640,115,1790,123],[2640,116,1790,124],[2641,20,1791,28],[2641,26,1791,34],[2641,30,1791,38],[2641,31,1791,39,"_removeSession"],[2641,45,1791,53],[2641,46,1791,54],[2641,47,1791,55],[2642,18,1792,24],[2643,16,1793,20],[2644,14,1794,16],[2645,12,1795,12],[2645,13,1795,13],[2645,19,1796,17],[2645,23,1796,21,"currentSession"],[2645,37,1796,35],[2645,38,1796,36,"user"],[2645,42,1796,40],[2645,46,1797,16,"currentSession"],[2645,60,1797,30],[2645,61,1797,31,"user"],[2645,65,1797,35],[2645,66,1797,36,"__isUserNotAvailableProxy"],[2645,91,1797,61],[2645,96,1797,66],[2645,100,1797,70],[2645,102,1797,72],[2646,14,1798,16],[2647,14,1799,16],[2647,18,1799,20],[2648,16,1800,20],[2648,20,1800,20,"_yield$this$_getUser3"],[2648,41,1800,20],[2648,50,1800,61],[2648,54,1800,65],[2648,55,1800,66,"_getUser"],[2648,63,1800,74],[2648,64,1800,75,"currentSession"],[2648,78,1800,89],[2648,79,1800,90,"access_token"],[2648,91,1800,102],[2648,92,1800,103],[2649,18,1800,28,"data"],[2649,22,1800,32],[2649,25,1800,32,"_yield$this$_getUser3"],[2649,46,1800,32],[2649,47,1800,28,"data"],[2649,51,1800,32],[2650,18,1800,41,"userError"],[2650,27,1800,50],[2650,30,1800,50,"_yield$this$_getUser3"],[2650,51,1800,50],[2650,52,1800,34,"error"],[2650,57,1800,39],[2651,16,1801,20],[2651,20,1801,24],[2651,21,1801,25,"userError"],[2651,30,1801,34],[2651,35,1801,39,"data"],[2651,39,1801,43],[2651,44,1801,48],[2651,48,1801,52],[2651,52,1801,56,"data"],[2651,56,1801,60],[2651,61,1801,65],[2651,66,1801,70],[2651,67,1801,71],[2651,70,1801,74],[2651,75,1801,79],[2651,76,1801,80],[2651,79,1801,83,"data"],[2651,83,1801,87],[2651,84,1801,88,"user"],[2651,88,1801,92],[2651,89,1801,93],[2651,91,1801,95],[2652,18,1802,24,"currentSession"],[2652,32,1802,38],[2652,33,1802,39,"user"],[2652,37,1802,43],[2652,40,1802,46,"data"],[2652,44,1802,50],[2652,45,1802,51,"user"],[2652,49,1802,55],[2653,18,1803,24],[2653,24,1803,30],[2653,28,1803,34],[2653,29,1803,35,"_saveSession"],[2653,41,1803,47],[2653,42,1803,48,"currentSession"],[2653,56,1803,62],[2653,57,1803,63],[2654,18,1804,24],[2654,24,1804,30],[2654,28,1804,34],[2654,29,1804,35,"_notifyAllSubscribers"],[2654,50,1804,56],[2654,51,1804,57],[2654,62,1804,68],[2654,64,1804,70,"currentSession"],[2654,78,1804,84],[2654,79,1804,85],[2655,16,1805,20],[2655,17,1805,21],[2655,23,1806,25],[2656,18,1807,24],[2656,22,1807,28],[2656,23,1807,29,"_debug"],[2656,29,1807,35],[2656,30,1807,36,"debugName"],[2656,39,1807,45],[2656,41,1807,47],[2656,99,1807,105],[2656,100,1807,106],[2657,16,1808,20],[2658,14,1809,16],[2658,15,1809,17],[2658,16,1810,16],[2658,23,1810,23,"getUserError"],[2658,35,1810,35],[2658,37,1810,37],[2659,16,1811,20,"console"],[2659,23,1811,27],[2659,24,1811,28,"error"],[2659,29,1811,33],[2659,30,1811,34],[2659,56,1811,60],[2659,58,1811,62,"getUserError"],[2659,70,1811,74],[2659,71,1811,75],[2660,16,1812,20],[2660,20,1812,24],[2660,21,1812,25,"_debug"],[2660,27,1812,31],[2660,28,1812,32,"debugName"],[2660,37,1812,41],[2660,39,1812,43],[2660,97,1812,101],[2660,99,1812,103,"getUserError"],[2660,111,1812,115],[2660,112,1812,116],[2661,14,1813,16],[2662,12,1814,12],[2662,13,1814,13],[2662,19,1815,17],[2663,14,1816,16],[2664,14,1817,16],[2665,14,1818,16],[2666,14,1819,16],[2666,20,1819,22],[2666,24,1819,26],[2666,25,1819,27,"_notifyAllSubscribers"],[2666,46,1819,48],[2666,47,1819,49],[2666,58,1819,60],[2666,60,1819,62,"currentSession"],[2666,74,1819,76],[2666,75,1819,77],[2667,12,1820,12],[2668,10,1821,8],[2668,11,1821,9],[2668,12,1822,8],[2668,19,1822,15,"err"],[2668,22,1822,18],[2668,24,1822,20],[2669,12,1823,12],[2669,16,1823,16],[2669,17,1823,17,"_debug"],[2669,23,1823,23],[2669,24,1823,24,"debugName"],[2669,33,1823,33],[2669,35,1823,35],[2669,42,1823,42],[2669,44,1823,44,"err"],[2669,47,1823,47],[2669,48,1823,48],[2670,12,1824,12,"console"],[2670,19,1824,19],[2670,20,1824,20,"error"],[2670,25,1824,25],[2670,26,1824,26,"err"],[2670,29,1824,29],[2670,30,1824,30],[2671,12,1825,12],[2672,10,1826,8],[2672,11,1826,9],[2672,20,1827,16],[2673,12,1828,12],[2673,16,1828,16],[2673,17,1828,17,"_debug"],[2673,23,1828,23],[2673,24,1828,24,"debugName"],[2673,33,1828,33],[2673,35,1828,35],[2673,40,1828,40],[2673,41,1828,41],[2674,10,1829,8],[2675,8,1830,4],[2675,9,1830,5],[2676,8,1830,5],[2676,17,1740,10,"_recoverAndRefresh"],[2676,35,1740,28,"_recoverAndRefresh"],[2676,36,1740,28],[2677,10,1740,28],[2677,17,1740,28,"_recoverAndRefresh2"],[2677,36,1740,28],[2677,37,1740,28,"apply"],[2677,42,1740,28],[2677,49,1740,28,"arguments"],[2677,58,1740,28],[2678,8,1740,28],[2679,8,1740,28],[2679,15,1740,10,"_recoverAndRefresh"],[2679,33,1740,28],[2680,6,1740,28],[2681,4,1740,28],[2682,6,1740,28,"key"],[2682,9,1740,28],[2683,6,1740,28,"value"],[2683,11,1740,28],[2684,8,1740,28],[2684,12,1740,28,"_callRefreshToken2"],[2684,30,1740,28],[2684,33,1740,28,"_asyncToGenerator"],[2684,50,1740,28],[2684,51,1831,4],[2684,62,1831,28,"refreshToken"],[2684,74,1831,40],[2684,76,1831,42],[2685,10,1832,8],[2685,14,1832,12,"_a"],[2685,16,1832,14],[2685,18,1832,16,"_b"],[2685,20,1832,18],[2686,10,1833,8],[2686,14,1833,12],[2686,15,1833,13,"refreshToken"],[2686,27,1833,25],[2686,29,1833,27],[2687,12,1834,12],[2687,18,1834,18],[2687,22,1834,22,"errors_1"],[2687,30,1834,30],[2687,31,1834,31,"AuthSessionMissingError"],[2687,54,1834,54],[2687,55,1834,55],[2687,56,1834,56],[2688,10,1835,8],[2689,10,1836,8],[2690,10,1837,8],[2690,14,1837,12],[2690,18,1837,16],[2690,19,1837,17,"refreshingDeferred"],[2690,37,1837,35],[2690,39,1837,37],[2691,12,1838,12],[2691,19,1838,19],[2691,23,1838,23],[2691,24,1838,24,"refreshingDeferred"],[2691,42,1838,42],[2691,43,1838,43,"promise"],[2691,50,1838,50],[2692,10,1839,8],[2693,10,1840,8],[2693,14,1840,14,"debugName"],[2693,23,1840,23],[2693,26,1840,26],[2693,48,1840,48,"refreshToken"],[2693,60,1840,60],[2693,61,1840,61,"substring"],[2693,70,1840,70],[2693,71,1840,71],[2693,72,1840,72],[2693,74,1840,74],[2693,75,1840,75],[2693,76,1840,76],[2693,82,1840,82],[2694,10,1841,8],[2694,14,1841,12],[2694,15,1841,13,"_debug"],[2694,21,1841,19],[2694,22,1841,20,"debugName"],[2694,31,1841,29],[2694,33,1841,31],[2694,40,1841,38],[2694,41,1841,39],[2695,10,1842,8],[2695,14,1842,12],[2696,12,1843,12],[2696,16,1843,16],[2696,17,1843,17,"refreshingDeferred"],[2696,35,1843,35],[2696,38,1843,38],[2696,42,1843,42,"helpers_1"],[2696,51,1843,51],[2696,52,1843,52,"Deferred"],[2696,60,1843,60],[2696,61,1843,61],[2696,62,1843,62],[2697,12,1844,12],[2697,16,1844,12,"_yield$this$_refreshA"],[2697,37,1844,12],[2697,46,1844,42],[2697,50,1844,46],[2697,51,1844,47,"_refreshAccessToken"],[2697,70,1844,66],[2697,71,1844,67,"refreshToken"],[2697,83,1844,79],[2697,84,1844,80],[2698,14,1844,20,"data"],[2698,18,1844,24],[2698,21,1844,24,"_yield$this$_refreshA"],[2698,42,1844,24],[2698,43,1844,20,"data"],[2698,47,1844,24],[2699,14,1844,26,"error"],[2699,19,1844,31],[2699,22,1844,31,"_yield$this$_refreshA"],[2699,43,1844,31],[2699,44,1844,26,"error"],[2699,49,1844,31],[2700,12,1845,12],[2700,16,1845,16,"error"],[2700,21,1845,21],[2700,23,1846,16],[2700,29,1846,22,"error"],[2700,34,1846,27],[2701,12,1847,12],[2701,16,1847,16],[2701,17,1847,17,"data"],[2701,21,1847,21],[2701,22,1847,22,"session"],[2701,29,1847,29],[2701,31,1848,16],[2701,37,1848,22],[2701,41,1848,26,"errors_1"],[2701,49,1848,34],[2701,50,1848,35,"AuthSessionMissingError"],[2701,73,1848,58],[2701,74,1848,59],[2701,75,1848,60],[2702,12,1849,12],[2702,18,1849,18],[2702,22,1849,22],[2702,23,1849,23,"_saveSession"],[2702,35,1849,35],[2702,36,1849,36,"data"],[2702,40,1849,40],[2702,41,1849,41,"session"],[2702,48,1849,48],[2702,49,1849,49],[2703,12,1850,12],[2703,18,1850,18],[2703,22,1850,22],[2703,23,1850,23,"_notifyAllSubscribers"],[2703,44,1850,44],[2703,45,1850,45],[2703,62,1850,62],[2703,64,1850,64,"data"],[2703,68,1850,68],[2703,69,1850,69,"session"],[2703,76,1850,76],[2703,77,1850,77],[2704,12,1851,12],[2704,16,1851,18,"result"],[2704,22,1851,24],[2704,25,1851,27],[2705,14,1851,29,"session"],[2705,21,1851,36],[2705,23,1851,38,"data"],[2705,27,1851,42],[2705,28,1851,43,"session"],[2705,35,1851,50],[2706,14,1851,52,"error"],[2706,19,1851,57],[2706,21,1851,59],[2707,12,1851,64],[2707,13,1851,65],[2708,12,1852,12],[2708,16,1852,16],[2708,17,1852,17,"refreshingDeferred"],[2708,35,1852,35],[2708,36,1852,36,"resolve"],[2708,43,1852,43],[2708,44,1852,44,"result"],[2708,50,1852,50],[2708,51,1852,51],[2709,12,1853,12],[2709,19,1853,19,"result"],[2709,25,1853,25],[2710,10,1854,8],[2710,11,1854,9],[2710,12,1855,8],[2710,19,1855,15,"error"],[2710,24,1855,20],[2710,26,1855,22],[2711,12,1856,12],[2711,16,1856,16],[2711,17,1856,17,"_debug"],[2711,23,1856,23],[2711,24,1856,24,"debugName"],[2711,33,1856,33],[2711,35,1856,35],[2711,42,1856,42],[2711,44,1856,44,"error"],[2711,49,1856,49],[2711,50,1856,50],[2712,12,1857,12],[2712,16,1857,16],[2712,17,1857,17],[2712,18,1857,18],[2712,20,1857,20,"errors_1"],[2712,28,1857,28],[2712,29,1857,29,"isAuthError"],[2712,40,1857,40],[2712,42,1857,42,"error"],[2712,47,1857,47],[2712,48,1857,48],[2712,50,1857,50],[2713,14,1858,16],[2713,18,1858,22,"result"],[2713,26,1858,28],[2713,29,1858,31],[2714,16,1858,33,"session"],[2714,23,1858,40],[2714,25,1858,42],[2714,29,1858,46],[2715,16,1858,48,"error"],[2716,14,1858,54],[2716,15,1858,55],[2717,14,1859,16],[2717,18,1859,20],[2717,19,1859,21],[2717,20,1859,22],[2717,21,1859,23],[2717,23,1859,25,"errors_1"],[2717,31,1859,33],[2717,32,1859,34,"isAuthRetryableFetchError"],[2717,57,1859,59],[2717,59,1859,61,"error"],[2717,64,1859,66],[2717,65,1859,67],[2717,67,1859,69],[2718,16,1860,20],[2718,22,1860,26],[2718,26,1860,30],[2718,27,1860,31,"_removeSession"],[2718,41,1860,45],[2718,42,1860,46],[2718,43,1860,47],[2719,14,1861,16],[2720,14,1862,16],[2720,15,1862,17,"_a"],[2720,17,1862,19],[2720,20,1862,22],[2720,24,1862,26],[2720,25,1862,27,"refreshingDeferred"],[2720,43,1862,45],[2720,49,1862,51],[2720,53,1862,55],[2720,57,1862,59,"_a"],[2720,59,1862,61],[2720,64,1862,66],[2720,69,1862,71],[2720,70,1862,72],[2720,73,1862,75],[2720,78,1862,80],[2720,79,1862,81],[2720,82,1862,84,"_a"],[2720,84,1862,86],[2720,85,1862,87,"resolve"],[2720,92,1862,94],[2720,93,1862,95,"result"],[2720,101,1862,101],[2720,102,1862,102],[2721,14,1863,16],[2721,21,1863,23,"result"],[2721,29,1863,29],[2722,12,1864,12],[2723,12,1865,12],[2723,13,1865,13,"_b"],[2723,15,1865,15],[2723,18,1865,18],[2723,22,1865,22],[2723,23,1865,23,"refreshingDeferred"],[2723,41,1865,41],[2723,47,1865,47],[2723,51,1865,51],[2723,55,1865,55,"_b"],[2723,57,1865,57],[2723,62,1865,62],[2723,67,1865,67],[2723,68,1865,68],[2723,71,1865,71],[2723,76,1865,76],[2723,77,1865,77],[2723,80,1865,80,"_b"],[2723,82,1865,82],[2723,83,1865,83,"reject"],[2723,89,1865,89],[2723,90,1865,90,"error"],[2723,95,1865,95],[2723,96,1865,96],[2724,12,1866,12],[2724,18,1866,18,"error"],[2724,23,1866,23],[2725,10,1867,8],[2725,11,1867,9],[2725,20,1868,16],[2726,12,1869,12],[2726,16,1869,16],[2726,17,1869,17,"refreshingDeferred"],[2726,35,1869,35],[2726,38,1869,38],[2726,42,1869,42],[2727,12,1870,12],[2727,16,1870,16],[2727,17,1870,17,"_debug"],[2727,23,1870,23],[2727,24,1870,24,"debugName"],[2727,33,1870,33],[2727,35,1870,35],[2727,40,1870,40],[2727,41,1870,41],[2728,10,1871,8],[2729,8,1872,4],[2729,9,1872,5],[2730,8,1872,5],[2730,17,1831,10,"_callRefreshToken"],[2730,34,1831,27,"_callRefreshToken"],[2730,35,1831,27,"_x48"],[2730,39,1831,27],[2731,10,1831,27],[2731,17,1831,27,"_callRefreshToken2"],[2731,35,1831,27],[2731,36,1831,27,"apply"],[2731,41,1831,27],[2731,48,1831,27,"arguments"],[2731,57,1831,27],[2732,8,1831,27],[2733,8,1831,27],[2733,15,1831,10,"_callRefreshToken"],[2733,32,1831,27],[2734,6,1831,27],[2735,4,1831,27],[2736,6,1831,27,"key"],[2736,9,1831,27],[2737,6,1831,27,"value"],[2737,11,1831,27],[2738,8,1831,27],[2738,12,1831,27,"_notifyAllSubscribers2"],[2738,34,1831,27],[2738,37,1831,27,"_asyncToGenerator"],[2738,54,1831,27],[2738,55,1873,4],[2738,66,1873,32,"event"],[2738,71,1873,37],[2738,73,1873,39,"session"],[2738,80,1873,46],[2738,82,1873,66],[2739,10,1873,66],[2739,14,1873,48,"broadcast"],[2739,23,1873,57],[2739,26,1873,57,"arguments"],[2739,35,1873,57],[2739,36,1873,57,"length"],[2739,42,1873,57],[2739,50,1873,57,"arguments"],[2739,59,1873,57],[2739,67,1873,57,"undefined"],[2739,76,1873,57],[2739,79,1873,57,"arguments"],[2739,88,1873,57],[2739,94,1873,60],[2739,98,1873,64],[2740,10,1874,8],[2740,14,1874,14,"debugName"],[2740,23,1874,23],[2740,26,1874,26],[2740,52,1874,52,"event"],[2740,57,1874,57],[2740,60,1874,60],[2741,10,1875,8],[2741,14,1875,12],[2741,15,1875,13,"_debug"],[2741,21,1875,19],[2741,22,1875,20,"debugName"],[2741,31,1875,29],[2741,33,1875,31],[2741,40,1875,38],[2741,42,1875,40,"session"],[2741,49,1875,47],[2741,51,1875,49],[2741,66,1875,64,"broadcast"],[2741,75,1875,73],[2741,77,1875,75],[2741,78,1875,76],[2742,10,1876,8],[2742,14,1876,12],[2743,12,1877,12],[2743,16,1877,16],[2743,20,1877,20],[2743,21,1877,21,"broadcastChannel"],[2743,37,1877,37],[2743,41,1877,41,"broadcast"],[2743,50,1877,50],[2743,52,1877,52],[2744,14,1878,16],[2744,18,1878,20],[2744,19,1878,21,"broadcastChannel"],[2744,35,1878,37],[2744,36,1878,38,"postMessage"],[2744,47,1878,49],[2744,48,1878,50],[2745,16,1878,52,"event"],[2745,21,1878,57],[2746,16,1878,59,"session"],[2747,14,1878,67],[2747,15,1878,68],[2747,16,1878,69],[2748,12,1879,12],[2749,12,1880,12],[2749,16,1880,18,"errors"],[2749,22,1880,24],[2749,25,1880,27],[2749,27,1880,29],[2750,12,1881,12],[2750,16,1881,18,"promises"],[2750,24,1881,26],[2750,27,1881,29,"Array"],[2750,32,1881,34],[2750,33,1881,35,"from"],[2750,37,1881,39],[2750,38,1881,40],[2750,42,1881,44],[2750,43,1881,45,"stateChangeEmitters"],[2750,62,1881,64],[2750,63,1881,65,"values"],[2750,69,1881,71],[2750,70,1881,72],[2750,71,1881,73],[2750,72,1881,74],[2750,73,1881,75,"map"],[2750,76,1881,78],[2751,14,1881,78],[2751,18,1881,78,"_ref29"],[2751,24,1881,78],[2751,27,1881,78,"_asyncToGenerator"],[2751,44,1881,78],[2751,45,1881,79],[2751,56,1881,86,"x"],[2751,57,1881,87],[2751,59,1881,92],[2752,16,1882,16],[2752,20,1882,20],[2753,18,1883,20],[2753,24,1883,26,"x"],[2753,25,1883,27],[2753,26,1883,28,"callback"],[2753,34,1883,36],[2753,35,1883,37,"event"],[2753,40,1883,42],[2753,42,1883,44,"session"],[2753,49,1883,51],[2753,50,1883,52],[2754,16,1884,16],[2754,17,1884,17],[2754,18,1885,16],[2754,25,1885,23,"e"],[2754,26,1885,24],[2754,28,1885,26],[2755,18,1886,20,"errors"],[2755,24,1886,26],[2755,25,1886,27,"push"],[2755,29,1886,31],[2755,30,1886,32,"e"],[2755,31,1886,33],[2755,32,1886,34],[2756,16,1887,16],[2757,14,1888,12],[2757,15,1888,13],[2758,14,1888,13],[2758,31,1888,13,"_x51"],[2758,35,1888,13],[2759,16,1888,13],[2759,23,1888,13,"_ref29"],[2759,29,1888,13],[2759,30,1888,13,"apply"],[2759,35,1888,13],[2759,42,1888,13,"arguments"],[2759,51,1888,13],[2760,14,1888,13],[2761,12,1888,13],[2761,16,1888,14],[2762,12,1889,12],[2762,18,1889,18,"Promise"],[2762,25,1889,25],[2762,26,1889,26,"all"],[2762,29,1889,29],[2762,30,1889,30,"promises"],[2762,38,1889,38],[2762,39,1889,39],[2763,12,1890,12],[2763,16,1890,16,"errors"],[2763,22,1890,22],[2763,23,1890,23,"length"],[2763,29,1890,29],[2763,32,1890,32],[2763,33,1890,33],[2763,35,1890,35],[2764,14,1891,16],[2764,19,1891,21],[2764,23,1891,25,"i"],[2764,24,1891,26],[2764,27,1891,29],[2764,28,1891,30],[2764,30,1891,32,"i"],[2764,31,1891,33],[2764,34,1891,36,"errors"],[2764,40,1891,42],[2764,41,1891,43,"length"],[2764,47,1891,49],[2764,49,1891,51,"i"],[2764,50,1891,52],[2764,54,1891,56],[2764,55,1891,57],[2764,57,1891,59],[2765,16,1892,20,"console"],[2765,23,1892,27],[2765,24,1892,28,"error"],[2765,29,1892,33],[2765,30,1892,34,"errors"],[2765,36,1892,40],[2765,37,1892,41,"i"],[2765,38,1892,42],[2765,39,1892,43],[2765,40,1892,44],[2766,14,1893,16],[2767,14,1894,16],[2767,20,1894,22,"errors"],[2767,26,1894,28],[2767,27,1894,29],[2767,28,1894,30],[2767,29,1894,31],[2768,12,1895,12],[2769,10,1896,8],[2769,11,1896,9],[2769,20,1897,16],[2770,12,1898,12],[2770,16,1898,16],[2770,17,1898,17,"_debug"],[2770,23,1898,23],[2770,24,1898,24,"debugName"],[2770,33,1898,33],[2770,35,1898,35],[2770,40,1898,40],[2770,41,1898,41],[2771,10,1899,8],[2772,8,1900,4],[2772,9,1900,5],[2773,8,1900,5],[2773,17,1873,10,"_notifyAllSubscribers"],[2773,38,1873,31,"_notifyAllSubscribers"],[2773,39,1873,31,"_x49"],[2773,43,1873,31],[2773,45,1873,31,"_x50"],[2773,49,1873,31],[2774,10,1873,31],[2774,17,1873,31,"_notifyAllSubscribers2"],[2774,39,1873,31],[2774,40,1873,31,"apply"],[2774,45,1873,31],[2774,52,1873,31,"arguments"],[2774,61,1873,31],[2775,8,1873,31],[2776,8,1873,31],[2776,15,1873,10,"_notifyAllSubscribers"],[2776,36,1873,31],[2777,6,1873,31],[2778,6,1901,4],[2779,0,1902,0],[2780,0,1903,0],[2781,0,1904,0],[2782,4,1901,4],[2783,6,1901,4,"key"],[2783,9,1901,4],[2784,6,1901,4,"value"],[2784,11,1901,4],[2785,8,1901,4],[2785,12,1901,4,"_saveSession2"],[2785,25,1901,4],[2785,28,1901,4,"_asyncToGenerator"],[2785,45,1901,4],[2785,46,1905,4],[2785,57,1905,23,"session"],[2785,64,1905,30],[2785,66,1905,32],[2786,10,1906,8],[2786,14,1906,12],[2786,15,1906,13,"_debug"],[2786,21,1906,19],[2786,22,1906,20],[2786,39,1906,37],[2786,41,1906,39,"session"],[2786,48,1906,46],[2786,49,1906,47],[2787,10,1907,8],[2788,10,1908,8],[2789,10,1909,8],[2789,14,1909,12],[2789,15,1909,13,"suppressGetSessionWarning"],[2789,40,1909,38],[2789,43,1909,41],[2789,47,1909,45],[2790,10,1910,8],[2791,10,1911,8],[2791,14,1911,14,"sessionToProcess"],[2791,30,1911,30],[2791,33,1911,33,"Object"],[2791,39,1911,39],[2791,40,1911,40,"assign"],[2791,46,1911,46],[2791,47,1911,47],[2791,48,1911,48],[2791,49,1911,49],[2791,51,1911,51,"session"],[2791,58,1911,58],[2791,59,1911,59],[2792,10,1912,8],[2792,14,1912,14,"userIsProxy"],[2792,25,1912,25],[2792,28,1912,28,"sessionToProcess"],[2792,44,1912,44],[2792,45,1912,45,"user"],[2792,49,1912,49],[2792,53,1912,53,"sessionToProcess"],[2792,69,1912,69],[2792,70,1912,70,"user"],[2792,74,1912,74],[2792,75,1912,75,"__isUserNotAvailableProxy"],[2792,100,1912,100],[2792,105,1912,105],[2792,109,1912,109],[2793,10,1913,8],[2793,14,1913,12],[2793,18,1913,16],[2793,19,1913,17,"userStorage"],[2793,30,1913,28],[2793,32,1913,30],[2794,12,1914,12],[2794,16,1914,16],[2794,17,1914,17,"userIsProxy"],[2794,28,1914,28],[2794,32,1914,32,"sessionToProcess"],[2794,48,1914,48],[2794,49,1914,49,"user"],[2794,53,1914,53],[2794,55,1914,55],[2795,14,1915,16],[2796,14,1916,16],[2796,20,1916,22],[2796,21,1916,23],[2796,22,1916,24],[2796,24,1916,26,"helpers_1"],[2796,33,1916,35],[2796,34,1916,36,"setItemAsync"],[2796,46,1916,48],[2796,48,1916,50],[2796,52,1916,54],[2796,53,1916,55,"userStorage"],[2796,64,1916,66],[2796,66,1916,68],[2796,70,1916,72],[2796,71,1916,73,"storageKey"],[2796,81,1916,83],[2796,84,1916,86],[2796,91,1916,93],[2796,93,1916,95],[2797,16,1917,20,"user"],[2797,20,1917,24],[2797,22,1917,26,"sessionToProcess"],[2797,38,1917,42],[2797,39,1917,43,"user"],[2798,14,1918,16],[2798,15,1918,17],[2798,16,1918,18],[2799,12,1919,12],[2799,13,1919,13],[2799,19,1920,17],[2799,23,1920,21,"userIsProxy"],[2799,34,1920,32],[2799,36,1920,34],[2800,14,1921,16],[2801,14,1922,16],[2802,14,1923,16],[2803,14,1924,16],[2804,12,1924,16],[2805,12,1926,12],[2806,12,1927,12],[2807,12,1928,12],[2807,16,1928,18,"mainSessionData"],[2807,31,1928,33],[2807,34,1928,36,"Object"],[2807,40,1928,42],[2807,41,1928,43,"assign"],[2807,47,1928,49],[2807,48,1928,50],[2807,49,1928,51],[2807,50,1928,52],[2807,52,1928,54,"sessionToProcess"],[2807,68,1928,70],[2807,69,1928,71],[2808,12,1929,12],[2808,19,1929,19,"mainSessionData"],[2808,34,1929,34],[2808,35,1929,35,"user"],[2808,39,1929,39],[2808,40,1929,40],[2808,41,1929,41],[2809,12,1930,12],[2809,16,1930,18,"clonedMainSessionData"],[2809,37,1930,39],[2809,40,1930,42],[2809,41,1930,43],[2809,42,1930,44],[2809,44,1930,46,"helpers_1"],[2809,53,1930,55],[2809,54,1930,56,"deepClone"],[2809,63,1930,65],[2809,65,1930,67,"mainSessionData"],[2809,80,1930,82],[2809,81,1930,83],[2810,12,1931,12],[2810,18,1931,18],[2810,19,1931,19],[2810,20,1931,20],[2810,22,1931,22,"helpers_1"],[2810,31,1931,31],[2810,32,1931,32,"setItemAsync"],[2810,44,1931,44],[2810,46,1931,46],[2810,50,1931,50],[2810,51,1931,51,"storage"],[2810,58,1931,58],[2810,60,1931,60],[2810,64,1931,64],[2810,65,1931,65,"storageKey"],[2810,75,1931,75],[2810,77,1931,77,"clonedMainSessionData"],[2810,98,1931,98],[2810,99,1931,99],[2811,10,1932,8],[2811,11,1932,9],[2811,17,1933,13],[2812,12,1934,12],[2813,12,1935,12],[2814,12,1936,12],[2815,12,1937,12],[2815,16,1937,18,"clonedSession"],[2815,29,1937,31],[2815,32,1937,34],[2815,33,1937,35],[2815,34,1937,36],[2815,36,1937,38,"helpers_1"],[2815,45,1937,47],[2815,46,1937,48,"deepClone"],[2815,55,1937,57],[2815,57,1937,59,"sessionToProcess"],[2815,73,1937,75],[2815,74,1937,76],[2815,75,1937,77],[2815,76,1937,78],[2816,12,1938,12],[2816,18,1938,18],[2816,19,1938,19],[2816,20,1938,20],[2816,22,1938,22,"helpers_1"],[2816,31,1938,31],[2816,32,1938,32,"setItemAsync"],[2816,44,1938,44],[2816,46,1938,46],[2816,50,1938,50],[2816,51,1938,51,"storage"],[2816,58,1938,58],[2816,60,1938,60],[2816,64,1938,64],[2816,65,1938,65,"storageKey"],[2816,75,1938,75],[2816,77,1938,77,"clonedSession"],[2816,90,1938,90],[2816,91,1938,91],[2817,10,1939,8],[2818,8,1940,4],[2818,9,1940,5],[2819,8,1940,5],[2819,17,1905,10,"_saveSession"],[2819,29,1905,22,"_saveSession"],[2819,30,1905,22,"_x52"],[2819,34,1905,22],[2820,10,1905,22],[2820,17,1905,22,"_saveSession2"],[2820,30,1905,22],[2820,31,1905,22,"apply"],[2820,36,1905,22],[2820,43,1905,22,"arguments"],[2820,52,1905,22],[2821,8,1905,22],[2822,8,1905,22],[2822,15,1905,10,"_saveSession"],[2822,27,1905,22],[2823,6,1905,22],[2824,4,1905,22],[2825,6,1905,22,"key"],[2825,9,1905,22],[2826,6,1905,22,"value"],[2826,11,1905,22],[2827,8,1905,22],[2827,12,1905,22,"_removeSession2"],[2827,27,1905,22],[2827,30,1905,22,"_asyncToGenerator"],[2827,47,1905,22],[2827,48,1941,4],[2827,61,1941,27],[2828,10,1942,8],[2828,14,1942,12],[2828,15,1942,13,"_debug"],[2828,21,1942,19],[2828,22,1942,20],[2828,41,1942,39],[2828,42,1942,40],[2829,10,1943,8],[2829,16,1943,14],[2829,17,1943,15],[2829,18,1943,16],[2829,20,1943,18,"helpers_1"],[2829,29,1943,27],[2829,30,1943,28,"removeItemAsync"],[2829,45,1943,43],[2829,47,1943,45],[2829,51,1943,49],[2829,52,1943,50,"storage"],[2829,59,1943,57],[2829,61,1943,59],[2829,65,1943,63],[2829,66,1943,64,"storageKey"],[2829,76,1943,74],[2829,77,1943,75],[2830,10,1944,8],[2830,16,1944,14],[2830,17,1944,15],[2830,18,1944,16],[2830,20,1944,18,"helpers_1"],[2830,29,1944,27],[2830,30,1944,28,"removeItemAsync"],[2830,45,1944,43],[2830,47,1944,45],[2830,51,1944,49],[2830,52,1944,50,"storage"],[2830,59,1944,57],[2830,61,1944,59],[2830,65,1944,63],[2830,66,1944,64,"storageKey"],[2830,76,1944,74],[2830,79,1944,77],[2830,95,1944,93],[2830,96,1944,94],[2831,10,1945,8],[2831,16,1945,14],[2831,17,1945,15],[2831,18,1945,16],[2831,20,1945,18,"helpers_1"],[2831,29,1945,27],[2831,30,1945,28,"removeItemAsync"],[2831,45,1945,43],[2831,47,1945,45],[2831,51,1945,49],[2831,52,1945,50,"storage"],[2831,59,1945,57],[2831,61,1945,59],[2831,65,1945,63],[2831,66,1945,64,"storageKey"],[2831,76,1945,74],[2831,79,1945,77],[2831,86,1945,84],[2831,87,1945,85],[2832,10,1946,8],[2832,14,1946,12],[2832,18,1946,16],[2832,19,1946,17,"userStorage"],[2832,30,1946,28],[2832,32,1946,30],[2833,12,1947,12],[2833,18,1947,18],[2833,19,1947,19],[2833,20,1947,20],[2833,22,1947,22,"helpers_1"],[2833,31,1947,31],[2833,32,1947,32,"removeItemAsync"],[2833,47,1947,47],[2833,49,1947,49],[2833,53,1947,53],[2833,54,1947,54,"userStorage"],[2833,65,1947,65],[2833,67,1947,67],[2833,71,1947,71],[2833,72,1947,72,"storageKey"],[2833,82,1947,82],[2833,85,1947,85],[2833,92,1947,92],[2833,93,1947,93],[2834,10,1948,8],[2835,10,1949,8],[2835,16,1949,14],[2835,20,1949,18],[2835,21,1949,19,"_notifyAllSubscribers"],[2835,42,1949,40],[2835,43,1949,41],[2835,55,1949,53],[2835,57,1949,55],[2835,61,1949,59],[2835,62,1949,60],[2836,8,1950,4],[2836,9,1950,5],[2837,8,1950,5],[2837,17,1941,10,"_removeSession"],[2837,31,1941,24,"_removeSession"],[2837,32,1941,24],[2838,10,1941,24],[2838,17,1941,24,"_removeSession2"],[2838,32,1941,24],[2838,33,1941,24,"apply"],[2838,38,1941,24],[2838,45,1941,24,"arguments"],[2838,54,1941,24],[2839,8,1941,24],[2840,8,1941,24],[2840,15,1941,10,"_removeSession"],[2840,29,1941,24],[2841,6,1941,24],[2842,6,1951,4],[2843,0,1952,0],[2844,0,1953,0],[2845,0,1954,0],[2846,0,1955,0],[2847,0,1956,0],[2848,4,1951,4],[2849,6,1951,4,"key"],[2849,9,1951,4],[2850,6,1951,4,"value"],[2850,11,1951,4],[2850,13,1957,4],[2850,22,1957,4,"_removeVisibilityChangedCallback"],[2850,54,1957,36,"_removeVisibilityChangedCallback"],[2850,55,1957,36],[2850,57,1957,39],[2851,8,1958,8],[2851,12,1958,12],[2851,13,1958,13,"_debug"],[2851,19,1958,19],[2851,20,1958,20],[2851,57,1958,57],[2851,58,1958,58],[2852,8,1959,8],[2852,12,1959,14,"callback"],[2852,20,1959,22],[2852,23,1959,25],[2852,27,1959,29],[2852,28,1959,30,"visibilityChangedCallback"],[2852,53,1959,55],[2853,8,1960,8],[2853,12,1960,12],[2853,13,1960,13,"visibilityChangedCallback"],[2853,38,1960,38],[2853,41,1960,41],[2853,45,1960,45],[2854,8,1961,8],[2854,12,1961,12],[2855,10,1962,12],[2855,14,1962,16,"callback"],[2855,22,1962,24],[2855,26,1962,28],[2855,27,1962,29],[2855,28,1962,30],[2855,30,1962,32,"helpers_1"],[2855,39,1962,41],[2855,40,1962,42,"isBrowser"],[2855,49,1962,51],[2855,51,1962,53],[2855,52,1962,54],[2855,57,1962,59,"window"],[2855,63,1962,65],[2855,68,1962,70],[2855,72,1962,74],[2855,76,1962,78,"window"],[2855,82,1962,84],[2855,87,1962,89],[2855,92,1962,94],[2855,93,1962,95],[2855,96,1962,98],[2855,101,1962,103],[2855,102,1962,104],[2855,105,1962,107,"window"],[2855,111,1962,113],[2855,112,1962,114,"removeEventListener"],[2855,131,1962,133],[2855,132,1962,134],[2855,134,1962,136],[2856,12,1963,16,"window"],[2856,18,1963,22],[2856,19,1963,23,"removeEventListener"],[2856,38,1963,42],[2856,39,1963,43],[2856,57,1963,61],[2856,59,1963,63,"callback"],[2856,67,1963,71],[2856,68,1963,72],[2857,10,1964,12],[2858,8,1965,8],[2858,9,1965,9],[2858,10,1966,8],[2858,17,1966,15,"e"],[2858,18,1966,16],[2858,20,1966,18],[2859,10,1967,12,"console"],[2859,17,1967,19],[2859,18,1967,20,"error"],[2859,23,1967,25],[2859,24,1967,26],[2859,67,1967,69],[2859,69,1967,71,"e"],[2859,70,1967,72],[2859,71,1967,73],[2860,8,1968,8],[2861,6,1969,4],[2862,6,1970,4],[2863,0,1971,0],[2864,0,1972,0],[2865,0,1973,0],[2866,4,1970,4],[2867,6,1970,4,"key"],[2867,9,1970,4],[2868,6,1970,4,"value"],[2868,11,1970,4],[2869,8,1970,4],[2869,12,1970,4,"_startAutoRefresh2"],[2869,30,1970,4],[2869,33,1970,4,"_asyncToGenerator"],[2869,50,1970,4],[2869,51,1974,4],[2869,64,1974,30],[2870,10,1974,30],[2870,14,1974,30,"_this21"],[2870,21,1974,30],[2871,10,1975,8],[2871,16,1975,14],[2871,20,1975,18],[2871,21,1975,19,"_stopAutoRefresh"],[2871,37,1975,35],[2871,38,1975,36],[2871,39,1975,37],[2872,10,1976,8],[2872,14,1976,12],[2872,15,1976,13,"_debug"],[2872,21,1976,19],[2872,22,1976,20],[2872,44,1976,42],[2872,45,1976,43],[2873,10,1977,8],[2873,14,1977,14,"ticker"],[2873,20,1977,20],[2873,23,1977,23,"setInterval"],[2873,34,1977,34],[2873,35,1977,35],[2873,41,1977,41],[2873,45,1977,45],[2873,46,1977,46,"_autoRefreshTokenTick"],[2873,67,1977,67],[2873,68,1977,68],[2873,69,1977,69],[2873,71,1977,71,"constants_1"],[2873,82,1977,82],[2873,83,1977,83,"AUTO_REFRESH_TICK_DURATION_MS"],[2873,112,1977,112],[2873,113,1977,113],[2874,10,1978,8],[2874,14,1978,12],[2874,15,1978,13,"autoRefreshTicker"],[2874,32,1978,30],[2874,35,1978,33,"ticker"],[2874,41,1978,39],[2875,10,1979,8],[2875,14,1979,12,"ticker"],[2875,20,1979,18],[2875,24,1979,22],[2875,31,1979,29,"ticker"],[2875,37,1979,35],[2875,42,1979,40],[2875,50,1979,48],[2875,54,1979,52],[2875,61,1979,59,"ticker"],[2875,67,1979,65],[2875,68,1979,66,"unref"],[2875,73,1979,71],[2875,78,1979,76],[2875,88,1979,86],[2875,90,1979,88],[2876,12,1980,12],[2877,12,1981,12],[2878,12,1982,12],[2879,12,1983,12],[2880,12,1984,12],[2881,12,1985,12],[2882,12,1986,12,"ticker"],[2882,18,1986,18],[2882,19,1986,19,"unref"],[2882,24,1986,24],[2882,25,1986,25],[2882,26,1986,26],[2883,12,1987,12],[2884,10,1988,8],[2884,11,1988,9],[2884,17,1989,13],[2884,21,1989,17],[2884,28,1989,24,"Deno"],[2884,32,1989,28],[2884,37,1989,33],[2884,48,1989,44],[2884,52,1989,48],[2884,59,1989,55,"Deno"],[2884,63,1989,59],[2884,64,1989,60,"unrefTimer"],[2884,74,1989,70],[2884,79,1989,75],[2884,89,1989,85],[2884,91,1989,87],[2885,12,1990,12],[2886,12,1991,12],[2887,12,1992,12],[2888,12,1993,12,"Deno"],[2888,16,1993,16],[2888,17,1993,17,"unrefTimer"],[2888,27,1993,27],[2888,28,1993,28,"ticker"],[2888,34,1993,34],[2888,35,1993,35],[2889,10,1994,8],[2890,10,1995,8],[2891,10,1996,8],[2892,10,1997,8],[2893,10,1998,8,"setTimeout"],[2893,20,1998,18],[2893,34,1998,18,"_asyncToGenerator"],[2893,51,1998,18],[2893,52,1998,19],[2893,65,1998,31],[2894,12,1999,12],[2894,18,1999,18,"_this21"],[2894,25,1999,22],[2894,26,1999,23,"initializePromise"],[2894,43,1999,40],[2895,12,2000,12],[2895,18,2000,18,"_this21"],[2895,25,2000,22],[2895,26,2000,23,"_autoRefreshTokenTick"],[2895,47,2000,44],[2895,48,2000,45],[2895,49,2000,46],[2896,10,2001,8],[2896,11,2001,9],[2896,14,2001,11],[2896,15,2001,12],[2896,16,2001,13],[2897,8,2002,4],[2897,9,2002,5],[2898,8,2002,5],[2898,17,1974,10,"_startAutoRefresh"],[2898,34,1974,27,"_startAutoRefresh"],[2898,35,1974,27],[2899,10,1974,27],[2899,17,1974,27,"_startAutoRefresh2"],[2899,35,1974,27],[2899,36,1974,27,"apply"],[2899,41,1974,27],[2899,48,1974,27,"arguments"],[2899,57,1974,27],[2900,8,1974,27],[2901,8,1974,27],[2901,15,1974,10,"_startAutoRefresh"],[2901,32,1974,27],[2902,6,1974,27],[2903,6,2003,4],[2904,0,2004,0],[2905,0,2005,0],[2906,0,2006,0],[2907,6,2003,4],[2908,4,2003,4],[2909,6,2003,4,"key"],[2909,9,2003,4],[2910,6,2003,4,"value"],[2910,11,2003,4],[2911,8,2003,4],[2911,12,2003,4,"_stopAutoRefresh2"],[2911,29,2003,4],[2911,32,2003,4,"_asyncToGenerator"],[2911,49,2003,4],[2911,50,2007,4],[2911,63,2007,29],[2912,10,2008,8],[2912,14,2008,12],[2912,15,2008,13,"_debug"],[2912,21,2008,19],[2912,22,2008,20],[2912,43,2008,41],[2912,44,2008,42],[2913,10,2009,8],[2913,14,2009,14,"ticker"],[2913,20,2009,20],[2913,23,2009,23],[2913,27,2009,27],[2913,28,2009,28,"autoRefreshTicker"],[2913,45,2009,45],[2914,10,2010,8],[2914,14,2010,12],[2914,15,2010,13,"autoRefreshTicker"],[2914,32,2010,30],[2914,35,2010,33],[2914,39,2010,37],[2915,10,2011,8],[2915,14,2011,12,"ticker"],[2915,20,2011,18],[2915,22,2011,20],[2916,12,2012,12,"clearInterval"],[2916,25,2012,25],[2916,26,2012,26,"ticker"],[2916,32,2012,32],[2916,33,2012,33],[2917,10,2013,8],[2918,8,2014,4],[2918,9,2014,5],[2919,8,2014,5],[2919,17,2007,10,"_stopAutoRefresh"],[2919,33,2007,26,"_stopAutoRefresh"],[2919,34,2007,26],[2920,10,2007,26],[2920,17,2007,26,"_stopAutoRefresh2"],[2920,34,2007,26],[2920,35,2007,26,"apply"],[2920,40,2007,26],[2920,47,2007,26,"arguments"],[2920,56,2007,26],[2921,8,2007,26],[2922,8,2007,26],[2922,15,2007,10,"_stopAutoRefresh"],[2922,31,2007,26],[2923,6,2007,26],[2924,6,2015,4],[2925,0,2016,0],[2926,0,2017,0],[2927,0,2018,0],[2928,0,2019,0],[2929,0,2020,0],[2930,0,2021,0],[2931,0,2022,0],[2932,0,2023,0],[2933,0,2024,0],[2934,0,2025,0],[2935,0,2026,0],[2936,0,2027,0],[2937,0,2028,0],[2938,0,2029,0],[2939,0,2030,0],[2940,0,2031,0],[2941,0,2032,0],[2942,0,2033,0],[2943,0,2034,0],[2944,0,2035,0],[2945,0,2036,0],[2946,6,2015,4],[2947,4,2015,4],[2948,6,2015,4,"key"],[2948,9,2015,4],[2949,6,2015,4,"value"],[2949,11,2015,4],[2950,8,2015,4],[2950,12,2015,4,"_startAutoRefresh3"],[2950,30,2015,4],[2950,33,2015,4,"_asyncToGenerator"],[2950,50,2015,4],[2950,51,2037,4],[2950,64,2037,29],[2951,10,2038,8],[2951,14,2038,12],[2951,15,2038,13,"_removeVisibilityChangedCallback"],[2951,47,2038,45],[2951,48,2038,46],[2951,49,2038,47],[2952,10,2039,8],[2952,16,2039,14],[2952,20,2039,18],[2952,21,2039,19,"_startAutoRefresh"],[2952,38,2039,36],[2952,39,2039,37],[2952,40,2039,38],[2953,8,2040,4],[2953,9,2040,5],[2954,8,2040,5],[2954,17,2037,10,"startAutoRefresh"],[2954,33,2037,26,"startAutoRefresh"],[2954,34,2037,26],[2955,10,2037,26],[2955,17,2037,26,"_startAutoRefresh3"],[2955,35,2037,26],[2955,36,2037,26,"apply"],[2955,41,2037,26],[2955,48,2037,26,"arguments"],[2955,57,2037,26],[2956,8,2037,26],[2957,8,2037,26],[2957,15,2037,10,"startAutoRefresh"],[2957,31,2037,26],[2958,6,2037,26],[2959,6,2041,4],[2960,0,2042,0],[2961,0,2043,0],[2962,0,2044,0],[2963,0,2045,0],[2964,0,2046,0],[2965,0,2047,0],[2966,0,2048,0],[2967,6,2041,4],[2968,4,2041,4],[2969,6,2041,4,"key"],[2969,9,2041,4],[2970,6,2041,4,"value"],[2970,11,2041,4],[2971,8,2041,4],[2971,12,2041,4,"_stopAutoRefresh3"],[2971,29,2041,4],[2971,32,2041,4,"_asyncToGenerator"],[2971,49,2041,4],[2971,50,2049,4],[2971,63,2049,28],[2972,10,2050,8],[2972,14,2050,12],[2972,15,2050,13,"_removeVisibilityChangedCallback"],[2972,47,2050,45],[2972,48,2050,46],[2972,49,2050,47],[2973,10,2051,8],[2973,16,2051,14],[2973,20,2051,18],[2973,21,2051,19,"_stopAutoRefresh"],[2973,37,2051,35],[2973,38,2051,36],[2973,39,2051,37],[2974,8,2052,4],[2974,9,2052,5],[2975,8,2052,5],[2975,17,2049,10,"stopAutoRefresh"],[2975,32,2049,25,"stopAutoRefresh"],[2975,33,2049,25],[2976,10,2049,25],[2976,17,2049,25,"_stopAutoRefresh3"],[2976,34,2049,25],[2976,35,2049,25,"apply"],[2976,40,2049,25],[2976,47,2049,25,"arguments"],[2976,56,2049,25],[2977,8,2049,25],[2978,8,2049,25],[2978,15,2049,10,"stopAutoRefresh"],[2978,30,2049,25],[2979,6,2049,25],[2980,6,2053,4],[2981,0,2054,0],[2982,0,2055,0],[2983,6,2053,4],[2984,4,2053,4],[2985,6,2053,4,"key"],[2985,9,2053,4],[2986,6,2053,4,"value"],[2986,11,2053,4],[2987,8,2053,4],[2987,12,2053,4,"_autoRefreshTokenTick2"],[2987,34,2053,4],[2987,37,2053,4,"_asyncToGenerator"],[2987,54,2053,4],[2987,55,2056,4],[2987,68,2056,34],[2988,10,2056,34],[2988,14,2056,34,"_this22"],[2988,21,2056,34],[2989,10,2057,8],[2989,14,2057,12],[2989,15,2057,13,"_debug"],[2989,21,2057,19],[2989,22,2057,20],[2989,48,2057,46],[2989,50,2057,48],[2989,57,2057,55],[2989,58,2057,56],[2990,10,2058,8],[2990,14,2058,12],[2991,12,2059,12],[2991,18,2059,18],[2991,22,2059,22],[2991,23,2059,23,"_acquireLock"],[2991,35,2059,35],[2991,36,2059,36],[2991,37,2059,37],[2991,52,2059,37,"_asyncToGenerator"],[2991,69,2059,37],[2991,70,2059,39],[2991,83,2059,51],[2992,14,2060,16],[2992,18,2060,20],[2993,16,2061,20],[2993,20,2061,26,"now"],[2993,23,2061,29],[2993,26,2061,32,"Date"],[2993,30,2061,36],[2993,31,2061,37,"now"],[2993,34,2061,40],[2993,35,2061,41],[2993,36,2061,42],[2994,16,2062,20],[2994,20,2062,24],[2995,18,2063,24],[2995,31,2063,37,"_this22"],[2995,38,2063,41],[2995,39,2063,42,"_useSession"],[2995,50,2063,53],[2996,20,2063,53],[2996,24,2063,53,"_ref32"],[2996,30,2063,53],[2996,33,2063,53,"_asyncToGenerator"],[2996,50,2063,53],[2996,51,2063,54],[2996,62,2063,61,"result"],[2996,68,2063,67],[2996,70,2063,72],[2997,22,2064,28],[2997,26,2064,44,"session"],[2997,33,2064,51],[2997,36,2064,59,"result"],[2997,42,2064,65],[2997,43,2064,36,"data"],[2997,47,2064,40],[2997,48,2064,44,"session"],[2997,55,2064,51],[2998,22,2065,28],[2998,26,2065,32],[2998,27,2065,33,"session"],[2998,34,2065,40],[2998,38,2065,44],[2998,39,2065,45,"session"],[2998,46,2065,52],[2998,47,2065,53,"refresh_token"],[2998,60,2065,66],[2998,64,2065,70],[2998,65,2065,71,"session"],[2998,72,2065,78],[2998,73,2065,79,"expires_at"],[2998,83,2065,89],[2998,85,2065,91],[2999,24,2066,32,"_this22"],[2999,31,2066,36],[2999,32,2066,37,"_debug"],[2999,38,2066,43],[2999,39,2066,44],[2999,65,2066,70],[2999,67,2066,72],[2999,79,2066,84],[2999,80,2066,85],[3000,24,2067,32],[3001,22,2068,28],[3002,22,2069,28],[3003,22,2070,28],[3003,26,2070,34,"expiresInTicks"],[3003,40,2070,48],[3003,43,2070,51,"Math"],[3003,47,2070,55],[3003,48,2070,56,"floor"],[3003,53,2070,61],[3003,54,2070,62],[3003,55,2070,63,"session"],[3003,62,2070,70],[3003,63,2070,71,"expires_at"],[3003,73,2070,81],[3003,76,2070,84],[3003,80,2070,88],[3003,83,2070,91,"now"],[3003,86,2070,94],[3003,90,2070,98,"constants_1"],[3003,101,2070,109],[3003,102,2070,110,"AUTO_REFRESH_TICK_DURATION_MS"],[3003,131,2070,139],[3003,132,2070,140],[3004,22,2071,28,"_this22"],[3004,29,2071,32],[3004,30,2071,33,"_debug"],[3004,36,2071,39],[3004,37,2071,40],[3004,63,2071,66],[3004,65,2071,68],[3004,92,2071,95,"expiresInTicks"],[3004,106,2071,109],[3004,130,2071,133,"constants_1"],[3004,141,2071,144],[3004,142,2071,145,"AUTO_REFRESH_TICK_DURATION_MS"],[3004,171,2071,174],[3004,199,2071,202,"constants_1"],[3004,210,2071,213],[3004,211,2071,214,"AUTO_REFRESH_TICK_THRESHOLD"],[3004,238,2071,241],[3004,246,2071,249],[3004,247,2071,250],[3005,22,2072,28],[3005,26,2072,32,"expiresInTicks"],[3005,40,2072,46],[3005,44,2072,50,"constants_1"],[3005,55,2072,61],[3005,56,2072,62,"AUTO_REFRESH_TICK_THRESHOLD"],[3005,83,2072,89],[3005,85,2072,91],[3006,24,2073,32],[3006,30,2073,38,"_this22"],[3006,37,2073,42],[3006,38,2073,43,"_callRefreshToken"],[3006,55,2073,60],[3006,56,2073,61,"session"],[3006,63,2073,68],[3006,64,2073,69,"refresh_token"],[3006,77,2073,82],[3006,78,2073,83],[3007,22,2074,28],[3008,20,2075,24],[3008,21,2075,25],[3009,20,2075,25],[3009,37,2075,25,"_x53"],[3009,41,2075,25],[3010,22,2075,25],[3010,29,2075,25,"_ref32"],[3010,35,2075,25],[3010,36,2075,25,"apply"],[3010,41,2075,25],[3010,48,2075,25,"arguments"],[3010,57,2075,25],[3011,20,2075,25],[3012,18,2075,25],[3012,22,2075,26],[3013,16,2076,20],[3013,17,2076,21],[3013,18,2077,20],[3013,25,2077,27,"e"],[3013,26,2077,28],[3013,28,2077,30],[3014,18,2078,24,"console"],[3014,25,2078,31],[3014,26,2078,32,"error"],[3014,31,2078,37],[3014,32,2078,38],[3014,104,2078,110],[3014,106,2078,112,"e"],[3014,107,2078,113],[3014,108,2078,114],[3015,16,2079,20],[3016,14,2080,16],[3016,15,2080,17],[3016,24,2081,24],[3017,16,2082,20,"_this22"],[3017,23,2082,24],[3017,24,2082,25,"_debug"],[3017,30,2082,31],[3017,31,2082,32],[3017,57,2082,58],[3017,59,2082,60],[3017,64,2082,65],[3017,65,2082,66],[3018,14,2083,16],[3019,12,2084,12],[3019,13,2084,13],[3019,15,2084,14],[3020,10,2085,8],[3020,11,2085,9],[3020,12,2086,8],[3020,19,2086,15,"e"],[3020,20,2086,16],[3020,22,2086,18],[3021,12,2087,12],[3021,16,2087,16,"e"],[3021,17,2087,17],[3021,18,2087,18,"isAcquireTimeout"],[3021,34,2087,34],[3021,38,2087,38,"e"],[3021,39,2087,39],[3021,51,2087,51,"locks_1"],[3021,58,2087,58],[3021,59,2087,59,"LockAcquireTimeoutError"],[3021,82,2087,82],[3021,84,2087,84],[3022,14,2088,16],[3022,18,2088,20],[3022,19,2088,21,"_debug"],[3022,25,2088,27],[3022,26,2088,28],[3022,70,2088,72],[3022,71,2088,73],[3023,12,2089,12],[3023,13,2089,13],[3023,19,2090,17],[3024,14,2091,16],[3024,20,2091,22,"e"],[3024,21,2091,23],[3025,12,2092,12],[3026,10,2093,8],[3027,8,2094,4],[3027,9,2094,5],[3028,8,2094,5],[3028,17,2056,10,"_autoRefreshTokenTick"],[3028,38,2056,31,"_autoRefreshTokenTick"],[3028,39,2056,31],[3029,10,2056,31],[3029,17,2056,31,"_autoRefreshTokenTick2"],[3029,39,2056,31],[3029,40,2056,31,"apply"],[3029,45,2056,31],[3029,52,2056,31,"arguments"],[3029,61,2056,31],[3030,8,2056,31],[3031,8,2056,31],[3031,15,2056,10,"_autoRefreshTokenTick"],[3031,36,2056,31],[3032,6,2056,31],[3033,6,2095,4],[3034,0,2096,0],[3035,0,2097,0],[3036,0,2098,0],[3037,0,2099,0],[3038,6,2095,4],[3039,4,2095,4],[3040,6,2095,4,"key"],[3040,9,2095,4],[3041,6,2095,4,"value"],[3041,11,2095,4],[3042,8,2095,4],[3042,12,2095,4,"_handleVisibilityChange2"],[3042,36,2095,4],[3042,39,2095,4,"_asyncToGenerator"],[3042,56,2095,4],[3042,57,2100,4],[3042,70,2100,36],[3043,10,2100,36],[3043,14,2100,36,"_this23"],[3043,21,2100,36],[3044,10,2101,8],[3044,14,2101,12],[3044,15,2101,13,"_debug"],[3044,21,2101,19],[3044,22,2101,20],[3044,50,2101,48],[3044,51,2101,49],[3045,10,2102,8],[3045,14,2102,12],[3045,15,2102,13],[3045,16,2102,14],[3045,17,2102,15],[3045,19,2102,17,"helpers_1"],[3045,28,2102,26],[3045,29,2102,27,"isBrowser"],[3045,38,2102,36],[3045,40,2102,38],[3045,41,2102,39],[3045,45,2102,43],[3045,47,2102,45,"window"],[3045,53,2102,51],[3045,58,2102,56],[3045,62,2102,60],[3045,66,2102,64,"window"],[3045,72,2102,70],[3045,77,2102,75],[3045,82,2102,80],[3045,83,2102,81],[3045,86,2102,84],[3045,91,2102,89],[3045,92,2102,90],[3045,95,2102,93,"window"],[3045,101,2102,99],[3045,102,2102,100,"addEventListener"],[3045,118,2102,116],[3045,119,2102,117],[3045,121,2102,119],[3046,12,2103,12],[3046,16,2103,16],[3046,20,2103,20],[3046,21,2103,21,"autoRefreshToken"],[3046,37,2103,37],[3046,39,2103,39],[3047,14,2104,16],[3048,14,2105,16],[3048,18,2105,20],[3048,19,2105,21,"startAutoRefresh"],[3048,35,2105,37],[3048,36,2105,38],[3048,37,2105,39],[3049,12,2106,12],[3050,12,2107,12],[3050,19,2107,19],[3050,24,2107,24],[3051,10,2108,8],[3052,10,2109,8],[3052,14,2109,12],[3053,12,2110,12],[3053,16,2110,16],[3053,17,2110,17,"visibilityChangedCallback"],[3053,42,2110,42],[3053,58,2110,42,"_asyncToGenerator"],[3053,75,2110,42],[3053,76,2110,45],[3054,14,2110,45],[3054,27,2110,63,"_this23"],[3054,34,2110,67],[3054,35,2110,68,"_onVisibilityChanged"],[3054,55,2110,88],[3054,56,2110,89],[3054,61,2110,94],[3054,62,2110,95],[3055,12,2110,95],[3056,12,2111,12,"window"],[3056,18,2111,18],[3056,23,2111,23],[3056,27,2111,27],[3056,31,2111,31,"window"],[3056,37,2111,37],[3056,42,2111,42],[3056,47,2111,47],[3056,48,2111,48],[3056,51,2111,51],[3056,56,2111,56],[3056,57,2111,57],[3056,60,2111,60,"window"],[3056,66,2111,66],[3056,67,2111,67,"addEventListener"],[3056,83,2111,83],[3056,84,2111,84],[3056,102,2111,102],[3056,104,2111,104],[3056,108,2111,108],[3056,109,2111,109,"visibilityChangedCallback"],[3056,134,2111,134],[3056,135,2111,135],[3057,12,2112,12],[3058,12,2113,12],[3059,12,2114,12],[3059,18,2114,18],[3059,22,2114,22],[3059,23,2114,23,"_onVisibilityChanged"],[3059,43,2114,43],[3059,44,2114,44],[3059,48,2114,48],[3059,49,2114,49],[3059,50,2114,50],[3059,51,2114,51],[3060,10,2115,8],[3060,11,2115,9],[3060,12,2116,8],[3060,19,2116,15,"error"],[3060,24,2116,20],[3060,26,2116,22],[3061,12,2117,12,"console"],[3061,19,2117,19],[3061,20,2117,20,"error"],[3061,25,2117,25],[3061,26,2117,26],[3061,51,2117,51],[3061,53,2117,53,"error"],[3061,58,2117,58],[3061,59,2117,59],[3062,10,2118,8],[3063,8,2119,4],[3063,9,2119,5],[3064,8,2119,5],[3064,17,2100,10,"_handleVisibilityChange"],[3064,40,2100,33,"_handleVisibilityChange"],[3064,41,2100,33],[3065,10,2100,33],[3065,17,2100,33,"_handleVisibilityChange2"],[3065,41,2100,33],[3065,42,2100,33,"apply"],[3065,47,2100,33],[3065,54,2100,33,"arguments"],[3065,63,2100,33],[3066,8,2100,33],[3067,8,2100,33],[3067,15,2100,10,"_handleVisibilityChange"],[3067,38,2100,33],[3068,6,2100,33],[3069,6,2120,4],[3070,0,2121,0],[3071,0,2122,0],[3072,6,2120,4],[3073,4,2120,4],[3074,6,2120,4,"key"],[3074,9,2120,4],[3075,6,2120,4,"value"],[3075,11,2120,4],[3076,8,2120,4],[3076,12,2120,4,"_onVisibilityChanged2"],[3076,33,2120,4],[3076,36,2120,4,"_asyncToGenerator"],[3076,53,2120,4],[3076,54,2123,4],[3076,65,2123,31,"calledFromInitialize"],[3076,85,2123,51],[3076,87,2123,53],[3077,10,2123,53],[3077,14,2123,53,"_this24"],[3077,21,2123,53],[3078,10,2124,8],[3078,14,2124,14,"methodName"],[3078,24,2124,24],[3078,27,2124,27],[3078,52,2124,52,"calledFromInitialize"],[3078,72,2124,72],[3078,75,2124,75],[3079,10,2125,8],[3079,14,2125,12],[3079,15,2125,13,"_debug"],[3079,21,2125,19],[3079,22,2125,20,"methodName"],[3079,32,2125,30],[3079,34,2125,32],[3079,51,2125,49],[3079,53,2125,51,"document"],[3079,61,2125,59],[3079,62,2125,60,"visibilityState"],[3079,77,2125,75],[3079,78,2125,76],[3080,10,2126,8],[3080,14,2126,12,"document"],[3080,22,2126,20],[3080,23,2126,21,"visibilityState"],[3080,38,2126,36],[3080,43,2126,41],[3080,52,2126,50],[3080,54,2126,52],[3081,12,2127,12],[3081,16,2127,16],[3081,20,2127,20],[3081,21,2127,21,"autoRefreshToken"],[3081,37,2127,37],[3081,39,2127,39],[3082,14,2128,16],[3083,14,2129,16],[3084,14,2130,16],[3084,18,2130,20],[3084,19,2130,21,"_startAutoRefresh"],[3084,36,2130,38],[3084,37,2130,39],[3084,38,2130,40],[3085,12,2131,12],[3086,12,2132,12],[3086,16,2132,16],[3086,17,2132,17,"calledFromInitialize"],[3086,37,2132,37],[3086,39,2132,39],[3087,14,2133,16],[3088,14,2134,16],[3089,14,2135,16],[3090,14,2136,16],[3091,14,2137,16],[3091,20,2137,22],[3091,24,2137,26],[3091,25,2137,27,"initializePromise"],[3091,42,2137,44],[3092,14,2138,16],[3092,20,2138,22],[3092,24,2138,26],[3092,25,2138,27,"_acquireLock"],[3092,37,2138,39],[3092,38,2138,40],[3092,39,2138,41],[3092,40,2138,42],[3092,55,2138,42,"_asyncToGenerator"],[3092,72,2138,42],[3092,73,2138,44],[3092,86,2138,56],[3093,16,2139,20],[3093,20,2139,24,"document"],[3093,28,2139,32],[3093,29,2139,33,"visibilityState"],[3093,44,2139,48],[3093,49,2139,53],[3093,58,2139,62],[3093,60,2139,64],[3094,18,2140,24,"_this24"],[3094,25,2140,28],[3094,26,2140,29,"_debug"],[3094,32,2140,35],[3094,33,2140,36,"methodName"],[3094,43,2140,46],[3094,45,2140,48],[3094,151,2140,154],[3094,152,2140,155],[3095,18,2141,24],[3096,18,2142,24],[3097,16,2143,20],[3098,16,2144,20],[3099,16,2145,20],[3099,22,2145,26,"_this24"],[3099,29,2145,30],[3099,30,2145,31,"_recoverAndRefresh"],[3099,48,2145,49],[3099,49,2145,50],[3099,50,2145,51],[3100,14,2146,16],[3100,15,2146,17],[3100,17,2146,18],[3101,12,2147,12],[3102,10,2148,8],[3102,11,2148,9],[3102,17,2149,13],[3102,21,2149,17,"document"],[3102,29,2149,25],[3102,30,2149,26,"visibilityState"],[3102,45,2149,41],[3102,50,2149,46],[3102,58,2149,54],[3102,60,2149,56],[3103,12,2150,12],[3103,16,2150,16],[3103,20,2150,20],[3103,21,2150,21,"autoRefreshToken"],[3103,37,2150,37],[3103,39,2150,39],[3104,14,2151,16],[3104,18,2151,20],[3104,19,2151,21,"_stopAutoRefresh"],[3104,35,2151,37],[3104,36,2151,38],[3104,37,2151,39],[3105,12,2152,12],[3106,10,2153,8],[3107,8,2154,4],[3107,9,2154,5],[3108,8,2154,5],[3108,17,2123,10,"_onVisibilityChanged"],[3108,37,2123,30,"_onVisibilityChanged"],[3108,38,2123,30,"_x54"],[3108,42,2123,30],[3109,10,2123,30],[3109,17,2123,30,"_onVisibilityChanged2"],[3109,38,2123,30],[3109,39,2123,30,"apply"],[3109,44,2123,30],[3109,51,2123,30,"arguments"],[3109,60,2123,30],[3110,8,2123,30],[3111,8,2123,30],[3111,15,2123,10,"_onVisibilityChanged"],[3111,35,2123,30],[3112,6,2123,30],[3113,6,2155,4],[3114,0,2156,0],[3115,0,2157,0],[3116,0,2158,0],[3117,0,2159,0],[3118,0,2160,0],[3119,6,2155,4],[3120,4,2155,4],[3121,6,2155,4,"key"],[3121,9,2155,4],[3122,6,2155,4,"value"],[3122,11,2155,4],[3123,8,2155,4],[3123,12,2155,4,"_getUrlForProvider2"],[3123,31,2155,4],[3123,34,2155,4,"_asyncToGenerator"],[3123,51,2155,4],[3123,52,2161,4],[3123,63,2161,29,"url"],[3123,66,2161,32],[3123,68,2161,34,"provider"],[3123,76,2161,42],[3123,78,2161,44,"options"],[3123,85,2161,51],[3123,87,2161,53],[3124,10,2162,8],[3124,14,2162,14,"urlParams"],[3124,23,2162,23],[3124,26,2162,26],[3124,27,2162,27],[3124,39,2162,39,"encodeURIComponent"],[3124,57,2162,57],[3124,58,2162,58,"provider"],[3124,66,2162,66],[3124,67,2162,67],[3124,69,2162,69],[3124,70,2162,70],[3125,10,2163,8],[3125,14,2163,12,"options"],[3125,21,2163,19],[3125,26,2163,24],[3125,30,2163,28],[3125,34,2163,32,"options"],[3125,41,2163,39],[3125,46,2163,44],[3125,51,2163,49],[3125,52,2163,50],[3125,55,2163,53],[3125,60,2163,58],[3125,61,2163,59],[3125,64,2163,62,"options"],[3125,71,2163,69],[3125,72,2163,70,"redirectTo"],[3125,82,2163,80],[3125,84,2163,82],[3126,12,2164,12,"urlParams"],[3126,21,2164,21],[3126,22,2164,22,"push"],[3126,26,2164,26],[3126,27,2164,27],[3126,42,2164,42,"encodeURIComponent"],[3126,60,2164,60],[3126,61,2164,61,"options"],[3126,68,2164,68],[3126,69,2164,69,"redirectTo"],[3126,79,2164,79],[3126,80,2164,80],[3126,82,2164,82],[3126,83,2164,83],[3127,10,2165,8],[3128,10,2166,8],[3128,14,2166,12,"options"],[3128,21,2166,19],[3128,26,2166,24],[3128,30,2166,28],[3128,34,2166,32,"options"],[3128,41,2166,39],[3128,46,2166,44],[3128,51,2166,49],[3128,52,2166,50],[3128,55,2166,53],[3128,60,2166,58],[3128,61,2166,59],[3128,64,2166,62,"options"],[3128,71,2166,69],[3128,72,2166,70,"scopes"],[3128,78,2166,76],[3128,80,2166,78],[3129,12,2167,12,"urlParams"],[3129,21,2167,21],[3129,22,2167,22,"push"],[3129,26,2167,26],[3129,27,2167,27],[3129,37,2167,37,"encodeURIComponent"],[3129,55,2167,55],[3129,56,2167,56,"options"],[3129,63,2167,63],[3129,64,2167,64,"scopes"],[3129,70,2167,70],[3129,71,2167,71],[3129,73,2167,73],[3129,74,2167,74],[3130,10,2168,8],[3131,10,2169,8],[3131,14,2169,12],[3131,18,2169,16],[3131,19,2169,17,"flowType"],[3131,27,2169,25],[3131,32,2169,30],[3131,38,2169,36],[3131,40,2169,38],[3132,12,2170,12],[3132,16,2170,12,"_yield19"],[3132,24,2170,12],[3132,33,2170,63],[3132,34,2170,64],[3132,35,2170,65],[3132,37,2170,67,"helpers_1"],[3132,46,2170,76],[3132,47,2170,77,"getCodeChallengeAndMethod"],[3132,72,2170,102],[3132,74,2170,104],[3132,78,2170,108],[3132,79,2170,109,"storage"],[3132,86,2170,116],[3132,88,2170,118],[3132,92,2170,122],[3132,93,2170,123,"storageKey"],[3132,103,2170,133],[3132,104,2170,134],[3133,14,2170,134,"_yield20"],[3133,22,2170,134],[3133,25,2170,134,"_slicedToArray"],[3133,39,2170,134],[3133,40,2170,134,"_yield19"],[3133,48,2170,134],[3134,14,2170,19,"codeChallenge"],[3134,27,2170,32],[3134,30,2170,32,"_yield20"],[3134,38,2170,32],[3135,14,2170,34,"codeChallengeMethod"],[3135,33,2170,53],[3135,36,2170,53,"_yield20"],[3135,44,2170,53],[3136,12,2171,12],[3136,16,2171,18,"flowParams"],[3136,26,2171,28],[3136,29,2171,31],[3136,33,2171,35,"URLSearchParams"],[3136,48,2171,50],[3136,49,2171,51],[3137,14,2172,16,"code_challenge"],[3137,28,2172,30],[3137,30,2172,32],[3137,33,2172,35,"encodeURIComponent"],[3137,51,2172,53],[3137,52,2172,54,"codeChallenge"],[3137,65,2172,67],[3137,66,2172,68],[3137,68,2172,70],[3138,14,2173,16,"code_challenge_method"],[3138,35,2173,37],[3138,37,2173,39],[3138,40,2173,42,"encodeURIComponent"],[3138,58,2173,60],[3138,59,2173,61,"codeChallengeMethod"],[3138,78,2173,80],[3138,79,2173,81],[3139,12,2174,12],[3139,13,2174,13],[3139,14,2174,14],[3140,12,2175,12,"urlParams"],[3140,21,2175,21],[3140,22,2175,22,"push"],[3140,26,2175,26],[3140,27,2175,27,"flowParams"],[3140,37,2175,37],[3140,38,2175,38,"toString"],[3140,46,2175,46],[3140,47,2175,47],[3140,48,2175,48],[3140,49,2175,49],[3141,10,2176,8],[3142,10,2177,8],[3142,14,2177,12,"options"],[3142,21,2177,19],[3142,26,2177,24],[3142,30,2177,28],[3142,34,2177,32,"options"],[3142,41,2177,39],[3142,46,2177,44],[3142,51,2177,49],[3142,52,2177,50],[3142,55,2177,53],[3142,60,2177,58],[3142,61,2177,59],[3142,64,2177,62,"options"],[3142,71,2177,69],[3142,72,2177,70,"queryParams"],[3142,83,2177,81],[3142,85,2177,83],[3143,12,2178,12],[3143,16,2178,18,"query"],[3143,21,2178,23],[3143,24,2178,26],[3143,28,2178,30,"URLSearchParams"],[3143,43,2178,45],[3143,44,2178,46,"options"],[3143,51,2178,53],[3143,52,2178,54,"queryParams"],[3143,63,2178,65],[3143,64,2178,66],[3144,12,2179,12,"urlParams"],[3144,21,2179,21],[3144,22,2179,22,"push"],[3144,26,2179,26],[3144,27,2179,27,"query"],[3144,32,2179,32],[3144,33,2179,33,"toString"],[3144,41,2179,41],[3144,42,2179,42],[3144,43,2179,43],[3144,44,2179,44],[3145,10,2180,8],[3146,10,2181,8],[3146,14,2181,12,"options"],[3146,21,2181,19],[3146,26,2181,24],[3146,30,2181,28],[3146,34,2181,32,"options"],[3146,41,2181,39],[3146,46,2181,44],[3146,51,2181,49],[3146,52,2181,50],[3146,55,2181,53],[3146,60,2181,58],[3146,61,2181,59],[3146,64,2181,62,"options"],[3146,71,2181,69],[3146,72,2181,70,"skipBrowserRedirect"],[3146,91,2181,89],[3146,93,2181,91],[3147,12,2182,12,"urlParams"],[3147,21,2182,21],[3147,22,2182,22,"push"],[3147,26,2182,26],[3147,27,2182,27],[3147,49,2182,49,"options"],[3147,56,2182,56],[3147,57,2182,57,"skipBrowserRedirect"],[3147,76,2182,76],[3147,78,2182,78],[3147,79,2182,79],[3148,10,2183,8],[3149,10,2184,8],[3149,17,2184,15],[3149,20,2184,18,"url"],[3149,23,2184,21],[3149,27,2184,25,"urlParams"],[3149,36,2184,34],[3149,37,2184,35,"join"],[3149,41,2184,39],[3149,42,2184,40],[3149,45,2184,43],[3149,46,2184,44],[3149,48,2184,46],[3150,8,2185,4],[3150,9,2185,5],[3151,8,2185,5],[3151,17,2161,10,"_getUrlForProvider"],[3151,35,2161,28,"_getUrlForProvider"],[3151,36,2161,28,"_x55"],[3151,40,2161,28],[3151,42,2161,28,"_x56"],[3151,46,2161,28],[3151,48,2161,28,"_x57"],[3151,52,2161,28],[3152,10,2161,28],[3152,17,2161,28,"_getUrlForProvider2"],[3152,36,2161,28],[3152,37,2161,28,"apply"],[3152,42,2161,28],[3152,49,2161,28,"arguments"],[3152,58,2161,28],[3153,8,2161,28],[3154,8,2161,28],[3154,15,2161,10,"_getUrlForProvider"],[3154,33,2161,28],[3155,6,2161,28],[3156,4,2161,28],[3157,6,2161,28,"key"],[3157,9,2161,28],[3158,6,2161,28,"value"],[3158,11,2161,28],[3159,8,2161,28],[3159,12,2161,28,"_unenroll2"],[3159,22,2161,28],[3159,25,2161,28,"_asyncToGenerator"],[3159,42,2161,28],[3159,43,2186,4],[3159,54,2186,20,"params"],[3159,60,2186,26],[3159,62,2186,28],[3160,10,2186,28],[3160,14,2186,28,"_this25"],[3160,21,2186,28],[3161,10,2187,8],[3161,14,2187,12],[3162,12,2188,12],[3162,25,2188,25],[3162,29,2188,29],[3162,30,2188,30,"_useSession"],[3162,41,2188,41],[3163,14,2188,41],[3163,18,2188,41,"_ref35"],[3163,24,2188,41],[3163,27,2188,41,"_asyncToGenerator"],[3163,44,2188,41],[3163,45,2188,42],[3163,56,2188,49,"result"],[3163,62,2188,55],[3163,64,2188,60],[3164,16,2189,16],[3164,20,2189,20,"_a"],[3164,22,2189,22],[3165,16,2190,16],[3165,20,2190,30,"sessionData"],[3165,31,2190,41],[3165,34,2190,67,"result"],[3165,40,2190,73],[3165,41,2190,24,"data"],[3165,45,2190,28],[3166,18,2190,50,"sessionError"],[3166,30,2190,62],[3166,33,2190,67,"result"],[3166,39,2190,73],[3166,40,2190,43,"error"],[3166,45,2190,48],[3167,16,2191,16],[3167,20,2191,20,"sessionError"],[3167,32,2191,32],[3167,34,2191,34],[3168,18,2192,20],[3168,25,2192,27],[3169,20,2192,29,"data"],[3169,24,2192,33],[3169,26,2192,35],[3169,30,2192,39],[3170,20,2192,41,"error"],[3170,25,2192,46],[3170,27,2192,48,"sessionError"],[3171,18,2192,61],[3171,19,2192,62],[3172,16,2193,16],[3173,16,2194,16],[3173,29,2194,29],[3173,30,2194,30],[3173,31,2194,31],[3173,33,2194,33,"fetch_1"],[3173,40,2194,40],[3173,41,2194,41,"_request"],[3173,49,2194,49],[3173,51,2194,51,"_this25"],[3173,58,2194,55],[3173,59,2194,56,"fetch"],[3173,64,2194,61],[3173,66,2194,63],[3173,74,2194,71],[3173,76,2194,73],[3173,79,2194,76,"_this25"],[3173,86,2194,80],[3173,87,2194,81,"url"],[3173,90,2194,84],[3173,102,2194,96,"params"],[3173,108,2194,102],[3173,109,2194,103,"factorId"],[3173,117,2194,111],[3173,119,2194,113],[3173,121,2194,115],[3174,18,2195,20,"headers"],[3174,25,2195,27],[3174,27,2195,29,"_this25"],[3174,34,2195,33],[3174,35,2195,34,"headers"],[3174,42,2195,41],[3175,18,2196,20,"jwt"],[3175,21,2196,23],[3175,23,2196,25],[3175,24,2196,26,"_a"],[3175,26,2196,28],[3175,29,2196,31,"sessionData"],[3175,40,2196,42],[3175,45,2196,47],[3175,49,2196,51],[3175,53,2196,55,"sessionData"],[3175,64,2196,66],[3175,69,2196,71],[3175,74,2196,76],[3175,75,2196,77],[3175,78,2196,80],[3175,83,2196,85],[3175,84,2196,86],[3175,87,2196,89,"sessionData"],[3175,98,2196,100],[3175,99,2196,101,"session"],[3175,106,2196,108],[3175,112,2196,114],[3175,116,2196,118],[3175,120,2196,122,"_a"],[3175,122,2196,124],[3175,127,2196,129],[3175,132,2196,134],[3175,133,2196,135],[3175,136,2196,138],[3175,141,2196,143],[3175,142,2196,144],[3175,145,2196,147,"_a"],[3175,147,2196,149],[3175,148,2196,150,"access_token"],[3176,16,2197,16],[3176,17,2197,17],[3176,18,2197,18],[3177,14,2198,12],[3177,15,2198,13],[3178,14,2198,13],[3178,31,2198,13,"_x59"],[3178,35,2198,13],[3179,16,2198,13],[3179,23,2198,13,"_ref35"],[3179,29,2198,13],[3179,30,2198,13,"apply"],[3179,35,2198,13],[3179,42,2198,13,"arguments"],[3179,51,2198,13],[3180,14,2198,13],[3181,12,2198,13],[3181,16,2198,14],[3182,10,2199,8],[3182,11,2199,9],[3182,12,2200,8],[3182,19,2200,15,"error"],[3182,24,2200,20],[3182,26,2200,22],[3183,12,2201,12],[3183,16,2201,16],[3183,17,2201,17],[3183,18,2201,18],[3183,20,2201,20,"errors_1"],[3183,28,2201,28],[3183,29,2201,29,"isAuthError"],[3183,40,2201,40],[3183,42,2201,42,"error"],[3183,47,2201,47],[3183,48,2201,48],[3183,50,2201,50],[3184,14,2202,16],[3184,21,2202,23],[3185,16,2202,25,"data"],[3185,20,2202,29],[3185,22,2202,31],[3185,26,2202,35],[3186,16,2202,37,"error"],[3187,14,2202,43],[3187,15,2202,44],[3188,12,2203,12],[3189,12,2204,12],[3189,18,2204,18,"error"],[3189,23,2204,23],[3190,10,2205,8],[3191,8,2206,4],[3191,9,2206,5],[3192,8,2206,5],[3192,17,2186,10,"_unenroll"],[3192,26,2186,19,"_unenroll"],[3192,27,2186,19,"_x58"],[3192,31,2186,19],[3193,10,2186,19],[3193,17,2186,19,"_unenroll2"],[3193,27,2186,19],[3193,28,2186,19,"apply"],[3193,33,2186,19],[3193,40,2186,19,"arguments"],[3193,49,2186,19],[3194,8,2186,19],[3195,8,2186,19],[3195,15,2186,10,"_unenroll"],[3195,24,2186,19],[3196,6,2186,19],[3197,4,2186,19],[3198,6,2186,19,"key"],[3198,9,2186,19],[3199,6,2186,19,"value"],[3199,11,2186,19],[3200,8,2186,19],[3200,12,2186,19,"_enroll2"],[3200,20,2186,19],[3200,23,2186,19,"_asyncToGenerator"],[3200,40,2186,19],[3200,41,2207,4],[3200,52,2207,18,"params"],[3200,58,2207,24],[3200,60,2207,26],[3201,10,2207,26],[3201,14,2207,26,"_this26"],[3201,21,2207,26],[3202,10,2208,8],[3202,14,2208,12],[3203,12,2209,12],[3203,25,2209,25],[3203,29,2209,29],[3203,30,2209,30,"_useSession"],[3203,41,2209,41],[3204,14,2209,41],[3204,18,2209,41,"_ref36"],[3204,24,2209,41],[3204,27,2209,41,"_asyncToGenerator"],[3204,44,2209,41],[3204,45,2209,42],[3204,56,2209,49,"result"],[3204,62,2209,55],[3204,64,2209,60],[3205,16,2210,16],[3205,20,2210,20,"_a"],[3205,22,2210,22],[3205,24,2210,24,"_b"],[3205,26,2210,26],[3206,16,2211,16],[3206,20,2211,30,"sessionData"],[3206,31,2211,41],[3206,34,2211,67,"result"],[3206,40,2211,73],[3206,41,2211,24,"data"],[3206,45,2211,28],[3207,18,2211,50,"sessionError"],[3207,30,2211,62],[3207,33,2211,67,"result"],[3207,39,2211,73],[3207,40,2211,43,"error"],[3207,45,2211,48],[3208,16,2212,16],[3208,20,2212,20,"sessionError"],[3208,32,2212,32],[3208,34,2212,34],[3209,18,2213,20],[3209,25,2213,27],[3210,20,2213,29,"data"],[3210,24,2213,33],[3210,26,2213,35],[3210,30,2213,39],[3211,20,2213,41,"error"],[3211,25,2213,46],[3211,27,2213,48,"sessionError"],[3212,18,2213,61],[3212,19,2213,62],[3213,16,2214,16],[3214,16,2215,16],[3214,20,2215,22,"body"],[3214,24,2215,26],[3214,27,2215,29,"Object"],[3214,33,2215,35],[3214,34,2215,36,"assign"],[3214,40,2215,42],[3214,41,2215,43],[3215,18,2215,45,"friendly_name"],[3215,31,2215,58],[3215,33,2215,60,"params"],[3215,39,2215,66],[3215,40,2215,67,"friendlyName"],[3215,52,2215,79],[3216,18,2215,81,"factor_type"],[3216,29,2215,92],[3216,31,2215,94,"params"],[3216,37,2215,100],[3216,38,2215,101,"factorType"],[3217,16,2215,112],[3217,17,2215,113],[3217,19,2215,116,"params"],[3217,25,2215,122],[3217,26,2215,123,"factorType"],[3217,36,2215,133],[3217,41,2215,138],[3217,48,2215,145],[3217,51,2215,148],[3218,18,2215,150,"phone"],[3218,23,2215,155],[3218,25,2215,157,"params"],[3218,31,2215,163],[3218,32,2215,164,"phone"],[3219,16,2215,170],[3219,17,2215,171],[3219,20,2215,174],[3220,18,2215,176,"issuer"],[3220,24,2215,182],[3220,26,2215,184,"params"],[3220,32,2215,190],[3220,33,2215,191,"issuer"],[3221,16,2215,198],[3221,17,2215,200],[3221,18,2215,201],[3222,16,2216,16],[3222,20,2216,16,"_yield21"],[3222,28,2216,16],[3222,37,2216,46],[3222,38,2216,47],[3222,39,2216,48],[3222,41,2216,50,"fetch_1"],[3222,48,2216,57],[3222,49,2216,58,"_request"],[3222,57,2216,66],[3222,59,2216,68,"_this26"],[3222,66,2216,72],[3222,67,2216,73,"fetch"],[3222,72,2216,78],[3222,74,2216,80],[3222,80,2216,86],[3222,82,2216,88],[3222,85,2216,91,"_this26"],[3222,92,2216,95],[3222,93,2216,96,"url"],[3222,96,2216,99],[3222,106,2216,109],[3222,108,2216,111],[3223,20,2217,20,"body"],[3223,24,2217,24],[3224,20,2218,20,"headers"],[3224,27,2218,27],[3224,29,2218,29,"_this26"],[3224,36,2218,33],[3224,37,2218,34,"headers"],[3224,44,2218,41],[3225,20,2219,20,"jwt"],[3225,23,2219,23],[3225,25,2219,25],[3225,26,2219,26,"_a"],[3225,28,2219,28],[3225,31,2219,31,"sessionData"],[3225,42,2219,42],[3225,47,2219,47],[3225,51,2219,51],[3225,55,2219,55,"sessionData"],[3225,66,2219,66],[3225,71,2219,71],[3225,76,2219,76],[3225,77,2219,77],[3225,80,2219,80],[3225,85,2219,85],[3225,86,2219,86],[3225,89,2219,89,"sessionData"],[3225,100,2219,100],[3225,101,2219,101,"session"],[3225,108,2219,108],[3225,114,2219,114],[3225,118,2219,118],[3225,122,2219,122,"_a"],[3225,124,2219,124],[3225,129,2219,129],[3225,134,2219,134],[3225,135,2219,135],[3225,138,2219,138],[3225,143,2219,143],[3225,144,2219,144],[3225,147,2219,147,"_a"],[3225,149,2219,149],[3225,150,2219,150,"access_token"],[3226,18,2220,16],[3226,19,2220,17],[3226,20,2220,18],[3227,18,2216,24,"data"],[3227,22,2216,28],[3227,25,2216,28,"_yield21"],[3227,33,2216,28],[3227,34,2216,24,"data"],[3227,38,2216,28],[3228,18,2216,30,"error"],[3228,23,2216,35],[3228,26,2216,35,"_yield21"],[3228,34,2216,35],[3228,35,2216,30,"error"],[3228,40,2216,35],[3229,16,2221,16],[3229,20,2221,20,"error"],[3229,25,2221,25],[3229,27,2221,27],[3230,18,2222,20],[3230,25,2222,27],[3231,20,2222,29,"data"],[3231,24,2222,33],[3231,26,2222,35],[3231,30,2222,39],[3232,20,2222,41,"error"],[3233,18,2222,47],[3233,19,2222,48],[3234,16,2223,16],[3235,16,2224,16],[3235,20,2224,20,"params"],[3235,26,2224,26],[3235,27,2224,27,"factorType"],[3235,37,2224,37],[3235,42,2224,42],[3235,48,2224,48],[3235,53,2224,53],[3235,54,2224,54,"_b"],[3235,56,2224,56],[3235,59,2224,59,"data"],[3235,63,2224,63],[3235,68,2224,68],[3235,72,2224,72],[3235,76,2224,76,"data"],[3235,80,2224,80],[3235,85,2224,85],[3235,90,2224,90],[3235,91,2224,91],[3235,94,2224,94],[3235,99,2224,99],[3235,100,2224,100],[3235,103,2224,103,"data"],[3235,107,2224,107],[3235,108,2224,108,"totp"],[3235,112,2224,112],[3235,118,2224,118],[3235,122,2224,122],[3235,126,2224,126,"_b"],[3235,128,2224,128],[3235,133,2224,133],[3235,138,2224,138],[3235,139,2224,139],[3235,142,2224,142],[3235,147,2224,147],[3235,148,2224,148],[3235,151,2224,151,"_b"],[3235,153,2224,153],[3235,154,2224,154,"qr_code"],[3235,161,2224,161],[3235,162,2224,162],[3235,164,2224,164],[3236,18,2225,20,"data"],[3236,22,2225,24],[3236,23,2225,25,"totp"],[3236,27,2225,29],[3236,28,2225,30,"qr_code"],[3236,35,2225,37],[3236,38,2225,40],[3236,66,2225,68,"data"],[3236,70,2225,72],[3236,71,2225,73,"totp"],[3236,75,2225,77],[3236,76,2225,78,"qr_code"],[3236,83,2225,85],[3236,85,2225,87],[3237,16,2226,16],[3238,16,2227,16],[3238,23,2227,23],[3239,18,2227,25,"data"],[3239,22,2227,29],[3240,18,2227,31,"error"],[3240,23,2227,36],[3240,25,2227,38],[3241,16,2227,43],[3241,17,2227,44],[3242,14,2228,12],[3242,15,2228,13],[3243,14,2228,13],[3243,31,2228,13,"_x61"],[3243,35,2228,13],[3244,16,2228,13],[3244,23,2228,13,"_ref36"],[3244,29,2228,13],[3244,30,2228,13,"apply"],[3244,35,2228,13],[3244,42,2228,13,"arguments"],[3244,51,2228,13],[3245,14,2228,13],[3246,12,2228,13],[3246,16,2228,14],[3247,10,2229,8],[3247,11,2229,9],[3247,12,2230,8],[3247,19,2230,15,"error"],[3247,24,2230,20],[3247,26,2230,22],[3248,12,2231,12],[3248,16,2231,16],[3248,17,2231,17],[3248,18,2231,18],[3248,20,2231,20,"errors_1"],[3248,28,2231,28],[3248,29,2231,29,"isAuthError"],[3248,40,2231,40],[3248,42,2231,42,"error"],[3248,47,2231,47],[3248,48,2231,48],[3248,50,2231,50],[3249,14,2232,16],[3249,21,2232,23],[3250,16,2232,25,"data"],[3250,20,2232,29],[3250,22,2232,31],[3250,26,2232,35],[3251,16,2232,37,"error"],[3252,14,2232,43],[3252,15,2232,44],[3253,12,2233,12],[3254,12,2234,12],[3254,18,2234,18,"error"],[3254,23,2234,23],[3255,10,2235,8],[3256,8,2236,4],[3256,9,2236,5],[3257,8,2236,5],[3257,17,2207,10,"_enroll"],[3257,24,2207,17,"_enroll"],[3257,25,2207,17,"_x60"],[3257,29,2207,17],[3258,10,2207,17],[3258,17,2207,17,"_enroll2"],[3258,25,2207,17],[3258,26,2207,17,"apply"],[3258,31,2207,17],[3258,38,2207,17,"arguments"],[3258,47,2207,17],[3259,8,2207,17],[3260,8,2207,17],[3260,15,2207,10,"_enroll"],[3260,22,2207,17],[3261,6,2207,17],[3262,6,2237,4],[3263,0,2238,0],[3264,0,2239,0],[3265,4,2237,4],[3266,6,2237,4,"key"],[3266,9,2237,4],[3267,6,2237,4,"value"],[3267,11,2237,4],[3268,8,2237,4],[3268,12,2237,4,"_verify2"],[3268,20,2237,4],[3268,23,2237,4,"_asyncToGenerator"],[3268,40,2237,4],[3268,41,2240,4],[3268,52,2240,18,"params"],[3268,58,2240,24],[3268,60,2240,26],[3269,10,2240,26],[3269,14,2240,26,"_this27"],[3269,21,2240,26],[3270,10,2241,8],[3270,17,2241,15],[3270,21,2241,19],[3270,22,2241,20,"_acquireLock"],[3270,34,2241,32],[3270,35,2241,33],[3270,36,2241,34],[3270,37,2241,35],[3270,52,2241,35,"_asyncToGenerator"],[3270,69,2241,35],[3270,70,2241,37],[3270,83,2241,49],[3271,12,2242,12],[3271,16,2242,16],[3272,14,2243,16],[3272,27,2243,29,"_this27"],[3272,34,2243,33],[3272,35,2243,34,"_useSession"],[3272,46,2243,45],[3273,16,2243,45],[3273,20,2243,45,"_ref38"],[3273,26,2243,45],[3273,29,2243,45,"_asyncToGenerator"],[3273,46,2243,45],[3273,47,2243,46],[3273,58,2243,53,"result"],[3273,64,2243,59],[3273,66,2243,64],[3274,18,2244,20],[3274,22,2244,24,"_a"],[3274,24,2244,26],[3275,18,2245,20],[3275,22,2245,34,"sessionData"],[3275,33,2245,45],[3275,36,2245,71,"result"],[3275,42,2245,77],[3275,43,2245,28,"data"],[3275,47,2245,32],[3276,20,2245,54,"sessionError"],[3276,32,2245,66],[3276,35,2245,71,"result"],[3276,41,2245,77],[3276,42,2245,47,"error"],[3276,47,2245,52],[3277,18,2246,20],[3277,22,2246,24,"sessionError"],[3277,34,2246,36],[3277,36,2246,38],[3278,20,2247,24],[3278,27,2247,31],[3279,22,2247,33,"data"],[3279,26,2247,37],[3279,28,2247,39],[3279,32,2247,43],[3280,22,2247,45,"error"],[3280,27,2247,50],[3280,29,2247,52,"sessionError"],[3281,20,2247,65],[3281,21,2247,66],[3282,18,2248,20],[3283,18,2249,20],[3283,22,2249,20,"_yield22"],[3283,30,2249,20],[3283,39,2249,50],[3283,40,2249,51],[3283,41,2249,52],[3283,43,2249,54,"fetch_1"],[3283,50,2249,61],[3283,51,2249,62,"_request"],[3283,59,2249,70],[3283,61,2249,72,"_this27"],[3283,68,2249,76],[3283,69,2249,77,"fetch"],[3283,74,2249,82],[3283,76,2249,84],[3283,82,2249,90],[3283,84,2249,92],[3283,87,2249,95,"_this27"],[3283,94,2249,99],[3283,95,2249,100,"url"],[3283,98,2249,103],[3283,110,2249,115,"params"],[3283,116,2249,121],[3283,117,2249,122,"factorId"],[3283,125,2249,130],[3283,134,2249,139],[3283,136,2249,141],[3284,22,2250,24,"body"],[3284,26,2250,28],[3284,28,2250,30],[3285,24,2250,32,"code"],[3285,28,2250,36],[3285,30,2250,38,"params"],[3285,36,2250,44],[3285,37,2250,45,"code"],[3285,41,2250,49],[3286,24,2250,51,"challenge_id"],[3286,36,2250,63],[3286,38,2250,65,"params"],[3286,44,2250,71],[3286,45,2250,72,"challengeId"],[3287,22,2250,84],[3287,23,2250,85],[3288,22,2251,24,"headers"],[3288,29,2251,31],[3288,31,2251,33,"_this27"],[3288,38,2251,37],[3288,39,2251,38,"headers"],[3288,46,2251,45],[3289,22,2252,24,"jwt"],[3289,25,2252,27],[3289,27,2252,29],[3289,28,2252,30,"_a"],[3289,30,2252,32],[3289,33,2252,35,"sessionData"],[3289,44,2252,46],[3289,49,2252,51],[3289,53,2252,55],[3289,57,2252,59,"sessionData"],[3289,68,2252,70],[3289,73,2252,75],[3289,78,2252,80],[3289,79,2252,81],[3289,82,2252,84],[3289,87,2252,89],[3289,88,2252,90],[3289,91,2252,93,"sessionData"],[3289,102,2252,104],[3289,103,2252,105,"session"],[3289,110,2252,112],[3289,116,2252,118],[3289,120,2252,122],[3289,124,2252,126,"_a"],[3289,126,2252,128],[3289,131,2252,133],[3289,136,2252,138],[3289,137,2252,139],[3289,140,2252,142],[3289,145,2252,147],[3289,146,2252,148],[3289,149,2252,151,"_a"],[3289,151,2252,153],[3289,152,2252,154,"access_token"],[3290,20,2253,20],[3290,21,2253,21],[3290,22,2253,22],[3291,20,2249,28,"data"],[3291,24,2249,32],[3291,27,2249,32,"_yield22"],[3291,35,2249,32],[3291,36,2249,28,"data"],[3291,40,2249,32],[3292,20,2249,34,"error"],[3292,25,2249,39],[3292,28,2249,39,"_yield22"],[3292,36,2249,39],[3292,37,2249,34,"error"],[3292,42,2249,39],[3293,18,2254,20],[3293,22,2254,24,"error"],[3293,27,2254,29],[3293,29,2254,31],[3294,20,2255,24],[3294,27,2255,31],[3295,22,2255,33,"data"],[3295,26,2255,37],[3295,28,2255,39],[3295,32,2255,43],[3296,22,2255,45,"error"],[3297,20,2255,51],[3297,21,2255,52],[3298,18,2256,20],[3299,18,2257,20],[3299,24,2257,26,"_this27"],[3299,31,2257,30],[3299,32,2257,31,"_saveSession"],[3299,44,2257,43],[3299,45,2257,44,"Object"],[3299,51,2257,50],[3299,52,2257,51,"assign"],[3299,58,2257,57],[3299,59,2257,58],[3300,20,2257,60,"expires_at"],[3300,30,2257,70],[3300,32,2257,72,"Math"],[3300,36,2257,76],[3300,37,2257,77,"round"],[3300,42,2257,82],[3300,43,2257,83,"Date"],[3300,47,2257,87],[3300,48,2257,88,"now"],[3300,51,2257,91],[3300,52,2257,92],[3300,53,2257,93],[3300,56,2257,96],[3300,60,2257,100],[3300,61,2257,101],[3300,64,2257,104,"data"],[3300,68,2257,108],[3300,69,2257,109,"expires_in"],[3301,18,2257,120],[3301,19,2257,121],[3301,21,2257,123,"data"],[3301,25,2257,127],[3301,26,2257,128],[3301,27,2257,129],[3302,18,2258,20],[3302,24,2258,26,"_this27"],[3302,31,2258,30],[3302,32,2258,31,"_notifyAllSubscribers"],[3302,53,2258,52],[3302,54,2258,53],[3302,78,2258,77],[3302,80,2258,79,"data"],[3302,84,2258,83],[3302,85,2258,84],[3303,18,2259,20],[3303,25,2259,27],[3304,20,2259,29,"data"],[3304,24,2259,33],[3305,20,2259,35,"error"],[3306,18,2259,41],[3306,19,2259,42],[3307,16,2260,16],[3307,17,2260,17],[3308,16,2260,17],[3308,33,2260,17,"_x63"],[3308,37,2260,17],[3309,18,2260,17],[3309,25,2260,17,"_ref38"],[3309,31,2260,17],[3309,32,2260,17,"apply"],[3309,37,2260,17],[3309,44,2260,17,"arguments"],[3309,53,2260,17],[3310,16,2260,17],[3311,14,2260,17],[3311,18,2260,18],[3312,12,2261,12],[3312,13,2261,13],[3312,14,2262,12],[3312,21,2262,19,"error"],[3312,26,2262,24],[3312,28,2262,26],[3313,14,2263,16],[3313,18,2263,20],[3313,19,2263,21],[3313,20,2263,22],[3313,22,2263,24,"errors_1"],[3313,30,2263,32],[3313,31,2263,33,"isAuthError"],[3313,42,2263,44],[3313,44,2263,46,"error"],[3313,49,2263,51],[3313,50,2263,52],[3313,52,2263,54],[3314,16,2264,20],[3314,23,2264,27],[3315,18,2264,29,"data"],[3315,22,2264,33],[3315,24,2264,35],[3315,28,2264,39],[3316,18,2264,41,"error"],[3317,16,2264,47],[3317,17,2264,48],[3318,14,2265,16],[3319,14,2266,16],[3319,20,2266,22,"error"],[3319,25,2266,27],[3320,12,2267,12],[3321,10,2268,8],[3321,11,2268,9],[3321,13,2268,10],[3322,8,2269,4],[3322,9,2269,5],[3323,8,2269,5],[3323,17,2240,10,"_verify"],[3323,24,2240,17,"_verify"],[3323,25,2240,17,"_x62"],[3323,29,2240,17],[3324,10,2240,17],[3324,17,2240,17,"_verify2"],[3324,25,2240,17],[3324,26,2240,17,"apply"],[3324,31,2240,17],[3324,38,2240,17,"arguments"],[3324,47,2240,17],[3325,8,2240,17],[3326,8,2240,17],[3326,15,2240,10,"_verify"],[3326,22,2240,17],[3327,6,2240,17],[3328,6,2270,4],[3329,0,2271,0],[3330,0,2272,0],[3331,6,2270,4],[3332,4,2270,4],[3333,6,2270,4,"key"],[3333,9,2270,4],[3334,6,2270,4,"value"],[3334,11,2270,4],[3335,8,2270,4],[3335,12,2270,4,"_challenge2"],[3335,23,2270,4],[3335,26,2270,4,"_asyncToGenerator"],[3335,43,2270,4],[3335,44,2273,4],[3335,55,2273,21,"params"],[3335,61,2273,27],[3335,63,2273,29],[3336,10,2273,29],[3336,14,2273,29,"_this28"],[3336,21,2273,29],[3337,10,2274,8],[3337,17,2274,15],[3337,21,2274,19],[3337,22,2274,20,"_acquireLock"],[3337,34,2274,32],[3337,35,2274,33],[3337,36,2274,34],[3337,37,2274,35],[3337,52,2274,35,"_asyncToGenerator"],[3337,69,2274,35],[3337,70,2274,37],[3337,83,2274,49],[3338,12,2275,12],[3338,16,2275,16],[3339,14,2276,16],[3339,27,2276,29,"_this28"],[3339,34,2276,33],[3339,35,2276,34,"_useSession"],[3339,46,2276,45],[3340,16,2276,45],[3340,20,2276,45,"_ref40"],[3340,26,2276,45],[3340,29,2276,45,"_asyncToGenerator"],[3340,46,2276,45],[3340,47,2276,46],[3340,58,2276,53,"result"],[3340,64,2276,59],[3340,66,2276,64],[3341,18,2277,20],[3341,22,2277,24,"_a"],[3341,24,2277,26],[3342,18,2278,20],[3342,22,2278,34,"sessionData"],[3342,33,2278,45],[3342,36,2278,71,"result"],[3342,42,2278,77],[3342,43,2278,28,"data"],[3342,47,2278,32],[3343,20,2278,54,"sessionError"],[3343,32,2278,66],[3343,35,2278,71,"result"],[3343,41,2278,77],[3343,42,2278,47,"error"],[3343,47,2278,52],[3344,18,2279,20],[3344,22,2279,24,"sessionError"],[3344,34,2279,36],[3344,36,2279,38],[3345,20,2280,24],[3345,27,2280,31],[3346,22,2280,33,"data"],[3346,26,2280,37],[3346,28,2280,39],[3346,32,2280,43],[3347,22,2280,45,"error"],[3347,27,2280,50],[3347,29,2280,52,"sessionError"],[3348,20,2280,65],[3348,21,2280,66],[3349,18,2281,20],[3350,18,2282,20],[3350,31,2282,33],[3350,32,2282,34],[3350,33,2282,35],[3350,35,2282,37,"fetch_1"],[3350,42,2282,44],[3350,43,2282,45,"_request"],[3350,51,2282,53],[3350,53,2282,55,"_this28"],[3350,60,2282,59],[3350,61,2282,60,"fetch"],[3350,66,2282,65],[3350,68,2282,67],[3350,74,2282,73],[3350,76,2282,75],[3350,79,2282,78,"_this28"],[3350,86,2282,82],[3350,87,2282,83,"url"],[3350,90,2282,86],[3350,102,2282,98,"params"],[3350,108,2282,104],[3350,109,2282,105,"factorId"],[3350,117,2282,113],[3350,129,2282,125],[3350,131,2282,127],[3351,20,2283,24,"body"],[3351,24,2283,28],[3351,26,2283,30],[3352,22,2283,32,"channel"],[3352,29,2283,39],[3352,31,2283,41,"params"],[3352,37,2283,47],[3352,38,2283,48,"channel"],[3353,20,2283,56],[3353,21,2283,57],[3354,20,2284,24,"headers"],[3354,27,2284,31],[3354,29,2284,33,"_this28"],[3354,36,2284,37],[3354,37,2284,38,"headers"],[3354,44,2284,45],[3355,20,2285,24,"jwt"],[3355,23,2285,27],[3355,25,2285,29],[3355,26,2285,30,"_a"],[3355,28,2285,32],[3355,31,2285,35,"sessionData"],[3355,42,2285,46],[3355,47,2285,51],[3355,51,2285,55],[3355,55,2285,59,"sessionData"],[3355,66,2285,70],[3355,71,2285,75],[3355,76,2285,80],[3355,77,2285,81],[3355,80,2285,84],[3355,85,2285,89],[3355,86,2285,90],[3355,89,2285,93,"sessionData"],[3355,100,2285,104],[3355,101,2285,105,"session"],[3355,108,2285,112],[3355,114,2285,118],[3355,118,2285,122],[3355,122,2285,126,"_a"],[3355,124,2285,128],[3355,129,2285,133],[3355,134,2285,138],[3355,135,2285,139],[3355,138,2285,142],[3355,143,2285,147],[3355,144,2285,148],[3355,147,2285,151,"_a"],[3355,149,2285,153],[3355,150,2285,154,"access_token"],[3356,18,2286,20],[3356,19,2286,21],[3356,20,2286,22],[3357,16,2287,16],[3357,17,2287,17],[3358,16,2287,17],[3358,33,2287,17,"_x65"],[3358,37,2287,17],[3359,18,2287,17],[3359,25,2287,17,"_ref40"],[3359,31,2287,17],[3359,32,2287,17,"apply"],[3359,37,2287,17],[3359,44,2287,17,"arguments"],[3359,53,2287,17],[3360,16,2287,17],[3361,14,2287,17],[3361,18,2287,18],[3362,12,2288,12],[3362,13,2288,13],[3362,14,2289,12],[3362,21,2289,19,"error"],[3362,26,2289,24],[3362,28,2289,26],[3363,14,2290,16],[3363,18,2290,20],[3363,19,2290,21],[3363,20,2290,22],[3363,22,2290,24,"errors_1"],[3363,30,2290,32],[3363,31,2290,33,"isAuthError"],[3363,42,2290,44],[3363,44,2290,46,"error"],[3363,49,2290,51],[3363,50,2290,52],[3363,52,2290,54],[3364,16,2291,20],[3364,23,2291,27],[3365,18,2291,29,"data"],[3365,22,2291,33],[3365,24,2291,35],[3365,28,2291,39],[3366,18,2291,41,"error"],[3367,16,2291,47],[3367,17,2291,48],[3368,14,2292,16],[3369,14,2293,16],[3369,20,2293,22,"error"],[3369,25,2293,27],[3370,12,2294,12],[3371,10,2295,8],[3371,11,2295,9],[3371,13,2295,10],[3372,8,2296,4],[3372,9,2296,5],[3373,8,2296,5],[3373,17,2273,10,"_challenge"],[3373,27,2273,20,"_challenge"],[3373,28,2273,20,"_x64"],[3373,32,2273,20],[3374,10,2273,20],[3374,17,2273,20,"_challenge2"],[3374,28,2273,20],[3374,29,2273,20,"apply"],[3374,34,2273,20],[3374,41,2273,20,"arguments"],[3374,50,2273,20],[3375,8,2273,20],[3376,8,2273,20],[3376,15,2273,10,"_challenge"],[3376,25,2273,20],[3377,6,2273,20],[3378,6,2297,4],[3379,0,2298,0],[3380,0,2299,0],[3381,6,2297,4],[3382,4,2297,4],[3383,6,2297,4,"key"],[3383,9,2297,4],[3384,6,2297,4,"value"],[3384,11,2297,4],[3385,8,2297,4],[3385,12,2297,4,"_challengeAndVerify2"],[3385,32,2297,4],[3385,35,2297,4,"_asyncToGenerator"],[3385,52,2297,4],[3385,53,2300,4],[3385,64,2300,30,"params"],[3385,70,2300,36],[3385,72,2300,38],[3386,10,2301,8],[3387,10,2302,8],[3388,10,2303,8],[3388,14,2303,8,"_yield$this$_challeng"],[3388,35,2303,8],[3388,44,2303,69],[3388,48,2303,73],[3388,49,2303,74,"_challenge"],[3388,59,2303,84],[3388,60,2303,85],[3389,14,2304,12,"factorId"],[3389,22,2304,20],[3389,24,2304,22,"params"],[3389,30,2304,28],[3389,31,2304,29,"factorId"],[3390,12,2305,8],[3390,13,2305,9],[3390,14,2305,10],[3391,12,2303,22,"challengeData"],[3391,25,2303,35],[3391,28,2303,35,"_yield$this$_challeng"],[3391,49,2303,35],[3391,50,2303,16,"data"],[3391,54,2303,20],[3392,12,2303,44,"challengeError"],[3392,26,2303,58],[3392,29,2303,58,"_yield$this$_challeng"],[3392,50,2303,58],[3392,51,2303,37,"error"],[3392,56,2303,42],[3393,10,2306,8],[3393,14,2306,12,"challengeError"],[3393,28,2306,26],[3393,30,2306,28],[3394,12,2307,12],[3394,19,2307,19],[3395,14,2307,21,"data"],[3395,18,2307,25],[3395,20,2307,27],[3395,24,2307,31],[3396,14,2307,33,"error"],[3396,19,2307,38],[3396,21,2307,40,"challengeError"],[3397,12,2307,55],[3397,13,2307,56],[3398,10,2308,8],[3399,10,2309,8],[3399,23,2309,21],[3399,27,2309,25],[3399,28,2309,26,"_verify"],[3399,35,2309,33],[3399,36,2309,34],[3400,12,2310,12,"factorId"],[3400,20,2310,20],[3400,22,2310,22,"params"],[3400,28,2310,28],[3400,29,2310,29,"factorId"],[3400,37,2310,37],[3401,12,2311,12,"challengeId"],[3401,23,2311,23],[3401,25,2311,25,"challengeData"],[3401,38,2311,38],[3401,39,2311,39,"id"],[3401,41,2311,41],[3402,12,2312,12,"code"],[3402,16,2312,16],[3402,18,2312,18,"params"],[3402,24,2312,24],[3402,25,2312,25,"code"],[3403,10,2313,8],[3403,11,2313,9],[3403,12,2313,10],[3404,8,2314,4],[3404,9,2314,5],[3405,8,2314,5],[3405,17,2300,10,"_challengeAndVerify"],[3405,36,2300,29,"_challengeAndVerify"],[3405,37,2300,29,"_x66"],[3405,41,2300,29],[3406,10,2300,29],[3406,17,2300,29,"_challengeAndVerify2"],[3406,37,2300,29],[3406,38,2300,29,"apply"],[3406,43,2300,29],[3406,50,2300,29,"arguments"],[3406,59,2300,29],[3407,8,2300,29],[3408,8,2300,29],[3408,15,2300,10,"_challengeAndVerify"],[3408,34,2300,29],[3409,6,2300,29],[3410,6,2315,4],[3411,0,2316,0],[3412,0,2317,0],[3413,6,2315,4],[3414,4,2315,4],[3415,6,2315,4,"key"],[3415,9,2315,4],[3416,6,2315,4,"value"],[3416,11,2315,4],[3417,8,2315,4],[3417,12,2315,4,"_listFactors2"],[3417,25,2315,4],[3417,28,2315,4,"_asyncToGenerator"],[3417,45,2315,4],[3417,46,2318,4],[3417,59,2318,25],[3418,10,2319,8],[3419,10,2320,8],[3419,14,2320,8,"_yield$this$getUser2"],[3419,34,2320,8],[3419,43,2320,60],[3419,47,2320,64],[3419,48,2320,65,"getUser"],[3419,55,2320,72],[3419,56,2320,73],[3419,57,2320,74],[3420,12,2320,24,"user"],[3420,16,2320,28],[3420,19,2320,28,"_yield$this$getUser2"],[3420,39,2320,28],[3420,40,2320,16,"data"],[3420,44,2320,20],[3420,45,2320,24,"user"],[3420,49,2320,28],[3421,12,2320,39,"userError"],[3421,21,2320,48],[3421,24,2320,48,"_yield$this$getUser2"],[3421,44,2320,48],[3421,45,2320,32,"error"],[3421,50,2320,37],[3422,10,2321,8],[3422,14,2321,12,"userError"],[3422,23,2321,21],[3422,25,2321,23],[3423,12,2322,12],[3423,19,2322,19],[3424,14,2322,21,"data"],[3424,18,2322,25],[3424,20,2322,27],[3424,24,2322,31],[3425,14,2322,33,"error"],[3425,19,2322,38],[3425,21,2322,40,"userError"],[3426,12,2322,50],[3426,13,2322,51],[3427,10,2323,8],[3428,10,2324,8],[3428,14,2324,14,"factors"],[3428,21,2324,21],[3428,24,2324,24],[3428,25,2324,25,"user"],[3428,29,2324,29],[3428,34,2324,34],[3428,38,2324,38],[3428,42,2324,42,"user"],[3428,46,2324,46],[3428,51,2324,51],[3428,56,2324,56],[3428,57,2324,57],[3428,60,2324,60],[3428,65,2324,65],[3428,66,2324,66],[3428,69,2324,69,"user"],[3428,73,2324,73],[3428,74,2324,74,"factors"],[3428,81,2324,81],[3428,86,2324,86],[3428,88,2324,88],[3429,10,2325,8],[3429,14,2325,14,"totp"],[3429,18,2325,18],[3429,21,2325,21,"factors"],[3429,28,2325,28],[3429,29,2325,29,"filter"],[3429,35,2325,35],[3429,36,2325,37,"factor"],[3429,42,2325,43],[3429,46,2325,48,"factor"],[3429,52,2325,54],[3429,53,2325,55,"factor_type"],[3429,64,2325,66],[3429,69,2325,71],[3429,75,2325,77],[3429,79,2325,81,"factor"],[3429,85,2325,87],[3429,86,2325,88,"status"],[3429,92,2325,94],[3429,97,2325,99],[3429,107,2325,109],[3429,108,2325,110],[3430,10,2326,8],[3430,14,2326,14,"phone"],[3430,19,2326,19],[3430,22,2326,22,"factors"],[3430,29,2326,29],[3430,30,2326,30,"filter"],[3430,36,2326,36],[3430,37,2326,38,"factor"],[3430,43,2326,44],[3430,47,2326,49,"factor"],[3430,53,2326,55],[3430,54,2326,56,"factor_type"],[3430,65,2326,67],[3430,70,2326,72],[3430,77,2326,79],[3430,81,2326,83,"factor"],[3430,87,2326,89],[3430,88,2326,90,"status"],[3430,94,2326,96],[3430,99,2326,101],[3430,109,2326,111],[3430,110,2326,112],[3431,10,2327,8],[3431,17,2327,15],[3432,12,2328,12,"data"],[3432,16,2328,16],[3432,18,2328,18],[3433,14,2329,16,"all"],[3433,17,2329,19],[3433,19,2329,21,"factors"],[3433,26,2329,28],[3434,14,2330,16,"totp"],[3434,18,2330,20],[3435,14,2331,16,"phone"],[3436,12,2332,12],[3436,13,2332,13],[3437,12,2333,12,"error"],[3437,17,2333,17],[3437,19,2333,19],[3438,10,2334,8],[3438,11,2334,9],[3439,8,2335,4],[3439,9,2335,5],[3440,8,2335,5],[3440,17,2318,10,"_listFactors"],[3440,29,2318,22,"_listFactors"],[3440,30,2318,22],[3441,10,2318,22],[3441,17,2318,22,"_listFactors2"],[3441,30,2318,22],[3441,31,2318,22,"apply"],[3441,36,2318,22],[3441,43,2318,22,"arguments"],[3441,52,2318,22],[3442,8,2318,22],[3443,8,2318,22],[3443,15,2318,10,"_listFactors"],[3443,27,2318,22],[3444,6,2318,22],[3445,6,2336,4],[3446,0,2337,0],[3447,0,2338,0],[3448,6,2336,4],[3449,4,2336,4],[3450,6,2336,4,"key"],[3450,9,2336,4],[3451,6,2336,4,"value"],[3451,11,2336,4],[3452,8,2336,4],[3452,12,2336,4,"_getAuthenticatorAssuranceLevel2"],[3452,44,2336,4],[3452,47,2336,4,"_asyncToGenerator"],[3452,64,2336,4],[3452,65,2339,4],[3452,78,2339,44],[3453,10,2339,44],[3453,14,2339,44,"_this29"],[3453,21,2339,44],[3454,10,2340,8],[3454,17,2340,15],[3454,21,2340,19],[3454,22,2340,20,"_acquireLock"],[3454,34,2340,32],[3454,35,2340,33],[3454,36,2340,34],[3454,37,2340,35],[3454,52,2340,35,"_asyncToGenerator"],[3454,69,2340,35],[3454,70,2340,37],[3454,83,2340,49],[3455,12,2341,12],[3455,25,2341,25,"_this29"],[3455,32,2341,29],[3455,33,2341,30,"_useSession"],[3455,44,2341,41],[3456,14,2341,41],[3456,18,2341,41,"_ref42"],[3456,24,2341,41],[3456,27,2341,41,"_asyncToGenerator"],[3456,44,2341,41],[3456,45,2341,42],[3456,56,2341,49,"result"],[3456,62,2341,55],[3456,64,2341,60],[3457,16,2342,16],[3457,20,2342,20,"_a"],[3457,22,2342,22],[3457,24,2342,24,"_b"],[3457,26,2342,26],[3458,16,2343,16],[3458,20,2343,32,"session"],[3458,27,2343,39],[3458,30,2343,68,"result"],[3458,36,2343,74],[3458,37,2343,24,"data"],[3458,41,2343,28],[3458,42,2343,32,"session"],[3458,49,2343,39],[3459,18,2343,50,"sessionError"],[3459,30,2343,62],[3459,33,2343,68,"result"],[3459,39,2343,74],[3459,40,2343,43,"error"],[3459,45,2343,48],[3460,16,2344,16],[3460,20,2344,20,"sessionError"],[3460,32,2344,32],[3460,34,2344,34],[3461,18,2345,20],[3461,25,2345,27],[3462,20,2345,29,"data"],[3462,24,2345,33],[3462,26,2345,35],[3462,30,2345,39],[3463,20,2345,41,"error"],[3463,25,2345,46],[3463,27,2345,48,"sessionError"],[3464,18,2345,61],[3464,19,2345,62],[3465,16,2346,16],[3466,16,2347,16],[3466,20,2347,20],[3466,21,2347,21,"session"],[3466,28,2347,28],[3466,30,2347,30],[3467,18,2348,20],[3467,25,2348,27],[3468,20,2349,24,"data"],[3468,24,2349,28],[3468,26,2349,30],[3469,22,2349,32,"currentLevel"],[3469,34,2349,44],[3469,36,2349,46],[3469,40,2349,50],[3470,22,2349,52,"nextLevel"],[3470,31,2349,61],[3470,33,2349,63],[3470,37,2349,67],[3471,22,2349,69,"currentAuthenticationMethods"],[3471,50,2349,97],[3471,52,2349,99],[3472,20,2349,102],[3472,21,2349,103],[3473,20,2350,24,"error"],[3473,25,2350,29],[3473,27,2350,31],[3474,18,2351,20],[3474,19,2351,21],[3475,16,2352,16],[3476,16,2353,16],[3476,20,2353,16,"_ref43"],[3476,26,2353,16],[3476,29,2353,36],[3476,30,2353,37],[3476,31,2353,38],[3476,33,2353,40,"helpers_1"],[3476,42,2353,49],[3476,43,2353,50,"decodeJWT"],[3476,52,2353,59],[3476,54,2353,61,"session"],[3476,61,2353,68],[3476,62,2353,69,"access_token"],[3476,74,2353,81],[3476,75,2353,82],[3477,18,2353,24,"payload"],[3477,25,2353,31],[3477,28,2353,31,"_ref43"],[3477,34,2353,31],[3477,35,2353,24,"payload"],[3477,42,2353,31],[3478,16,2354,16],[3478,20,2354,20,"currentLevel"],[3478,32,2354,32],[3478,35,2354,35],[3478,39,2354,39],[3479,16,2355,16],[3479,20,2355,20,"payload"],[3479,27,2355,27],[3479,28,2355,28,"aal"],[3479,31,2355,31],[3479,33,2355,33],[3480,18,2356,20,"currentLevel"],[3480,30,2356,32],[3480,33,2356,35,"payload"],[3480,40,2356,42],[3480,41,2356,43,"aal"],[3480,44,2356,46],[3481,16,2357,16],[3482,16,2358,16],[3482,20,2358,20,"nextLevel"],[3482,29,2358,29],[3482,32,2358,32,"currentLevel"],[3482,44,2358,44],[3483,16,2359,16],[3483,20,2359,22,"verifiedFactors"],[3483,35,2359,37],[3483,38,2359,40],[3483,39,2359,41,"_b"],[3483,41,2359,43],[3483,44,2359,46],[3483,45,2359,47,"_a"],[3483,47,2359,49],[3483,50,2359,52,"session"],[3483,57,2359,59],[3483,58,2359,60,"user"],[3483,62,2359,64],[3483,63,2359,65,"factors"],[3483,70,2359,72],[3483,76,2359,78],[3483,80,2359,82],[3483,84,2359,86,"_a"],[3483,86,2359,88],[3483,91,2359,93],[3483,96,2359,98],[3483,97,2359,99],[3483,100,2359,102],[3483,105,2359,107],[3483,106,2359,108],[3483,109,2359,111,"_a"],[3483,111,2359,113],[3483,112,2359,114,"filter"],[3483,118,2359,120],[3483,119,2359,122,"factor"],[3483,125,2359,128],[3483,129,2359,133,"factor"],[3483,135,2359,139],[3483,136,2359,140,"status"],[3483,142,2359,146],[3483,147,2359,151],[3483,157,2359,161],[3483,158,2359,162],[3483,164,2359,168],[3483,168,2359,172],[3483,172,2359,176,"_b"],[3483,174,2359,178],[3483,179,2359,183],[3483,184,2359,188],[3483,185,2359,189],[3483,188,2359,192,"_b"],[3483,190,2359,194],[3483,193,2359,197],[3483,195,2359,199],[3484,16,2360,16],[3484,20,2360,20,"verifiedFactors"],[3484,35,2360,35],[3484,36,2360,36,"length"],[3484,42,2360,42],[3484,45,2360,45],[3484,46,2360,46],[3484,48,2360,48],[3485,18,2361,20,"nextLevel"],[3485,27,2361,29],[3485,30,2361,32],[3485,36,2361,38],[3486,16,2362,16],[3487,16,2363,16],[3487,20,2363,22,"currentAuthenticationMethods"],[3487,48,2363,50],[3487,51,2363,53,"payload"],[3487,58,2363,60],[3487,59,2363,61,"amr"],[3487,62,2363,64],[3487,66,2363,68],[3487,68,2363,70],[3488,16,2364,16],[3488,23,2364,23],[3489,18,2364,25,"data"],[3489,22,2364,29],[3489,24,2364,31],[3490,20,2364,33,"currentLevel"],[3490,32,2364,45],[3491,20,2364,47,"nextLevel"],[3491,29,2364,56],[3492,20,2364,58,"currentAuthenticationMethods"],[3493,18,2364,87],[3493,19,2364,88],[3494,18,2364,90,"error"],[3494,23,2364,95],[3494,25,2364,97],[3495,16,2364,102],[3495,17,2364,103],[3496,14,2365,12],[3496,15,2365,13],[3497,14,2365,13],[3497,31,2365,13,"_x67"],[3497,35,2365,13],[3498,16,2365,13],[3498,23,2365,13,"_ref42"],[3498,29,2365,13],[3498,30,2365,13,"apply"],[3498,35,2365,13],[3498,42,2365,13,"arguments"],[3498,51,2365,13],[3499,14,2365,13],[3500,12,2365,13],[3500,16,2365,14],[3501,10,2366,8],[3501,11,2366,9],[3501,13,2366,10],[3502,8,2367,4],[3502,9,2367,5],[3503,8,2367,5],[3503,17,2339,10,"_getAuthenticatorAssuranceLevel"],[3503,48,2339,41,"_getAuthenticatorAssuranceLevel"],[3503,49,2339,41],[3504,10,2339,41],[3504,17,2339,41,"_getAuthenticatorAssuranceLevel2"],[3504,49,2339,41],[3504,50,2339,41,"apply"],[3504,55,2339,41],[3504,62,2339,41,"arguments"],[3504,71,2339,41],[3505,8,2339,41],[3506,8,2339,41],[3506,15,2339,10,"_getAuthenticatorAssuranceLevel"],[3506,46,2339,41],[3507,6,2339,41],[3508,4,2339,41],[3509,6,2339,41,"key"],[3509,9,2339,41],[3510,6,2339,41,"value"],[3510,11,2339,41],[3511,8,2339,41],[3511,12,2339,41,"_fetchJwk"],[3511,21,2339,41],[3511,24,2339,41,"_asyncToGenerator"],[3511,41,2339,41],[3511,42,2368,4],[3511,53,2368,19,"kid"],[3511,56,2368,22],[3511,58,2368,45],[3512,10,2368,45],[3512,14,2368,24,"jwks"],[3512,18,2368,28],[3512,21,2368,28,"arguments"],[3512,30,2368,28],[3512,31,2368,28,"length"],[3512,37,2368,28],[3512,45,2368,28,"arguments"],[3512,54,2368,28],[3512,62,2368,28,"undefined"],[3512,71,2368,28],[3512,74,2368,28,"arguments"],[3512,83,2368,28],[3512,89,2368,31],[3513,12,2368,33,"keys"],[3513,16,2368,37],[3513,18,2368,39],[3514,10,2368,42],[3514,11,2368,43],[3515,10,2369,8],[3516,10,2370,8],[3516,14,2370,12,"jwk"],[3516,17,2370,15],[3516,20,2370,18,"jwks"],[3516,24,2370,22],[3516,25,2370,23,"keys"],[3516,29,2370,27],[3516,30,2370,28,"find"],[3516,34,2370,32],[3516,35,2370,34,"key"],[3516,38,2370,37],[3516,42,2370,42,"key"],[3516,45,2370,45],[3516,46,2370,46,"kid"],[3516,49,2370,49],[3516,54,2370,54,"kid"],[3516,57,2370,57],[3516,58,2370,58],[3517,10,2371,8],[3517,14,2371,12,"jwk"],[3517,17,2371,15],[3517,19,2371,17],[3518,12,2372,12],[3518,19,2372,19,"jwk"],[3518,22,2372,22],[3519,10,2373,8],[3520,10,2374,8],[3520,14,2374,14,"now"],[3520,17,2374,17],[3520,20,2374,20,"Date"],[3520,24,2374,24],[3520,25,2374,25,"now"],[3520,28,2374,28],[3520,29,2374,29],[3520,30,2374,30],[3521,10,2375,8],[3522,10,2376,8,"jwk"],[3522,13,2376,11],[3522,16,2376,14],[3522,20,2376,18],[3522,21,2376,19,"jwks"],[3522,25,2376,23],[3522,26,2376,24,"keys"],[3522,30,2376,28],[3522,31,2376,29,"find"],[3522,35,2376,33],[3522,36,2376,35,"key"],[3522,39,2376,38],[3522,43,2376,43,"key"],[3522,46,2376,46],[3522,47,2376,47,"kid"],[3522,50,2376,50],[3522,55,2376,55,"kid"],[3522,58,2376,58],[3522,59,2376,59],[3523,10,2377,8],[3524,10,2378,8],[3524,14,2378,12,"jwk"],[3524,17,2378,15],[3524,21,2378,19],[3524,25,2378,23],[3524,26,2378,24,"jwks_cached_at"],[3524,40,2378,38],[3524,43,2378,41,"constants_1"],[3524,54,2378,52],[3524,55,2378,53,"JWKS_TTL"],[3524,63,2378,61],[3524,66,2378,64,"now"],[3524,69,2378,67],[3524,71,2378,69],[3525,12,2379,12],[3525,19,2379,19,"jwk"],[3525,22,2379,22],[3526,10,2380,8],[3527,10,2381,8],[3528,10,2382,8],[3528,14,2382,8,"_yield23"],[3528,22,2382,8],[3528,31,2382,38],[3528,32,2382,39],[3528,33,2382,40],[3528,35,2382,42,"fetch_1"],[3528,42,2382,49],[3528,43,2382,50,"_request"],[3528,51,2382,58],[3528,53,2382,60],[3528,57,2382,64],[3528,58,2382,65,"fetch"],[3528,63,2382,70],[3528,65,2382,72],[3528,70,2382,77],[3528,72,2382,79],[3528,75,2382,82],[3528,79,2382,86],[3528,80,2382,87,"url"],[3528,83,2382,90],[3528,107,2382,114],[3528,109,2382,116],[3529,14,2383,12,"headers"],[3529,21,2383,19],[3529,23,2383,21],[3529,27,2383,25],[3529,28,2383,26,"headers"],[3530,12,2384,8],[3530,13,2384,9],[3530,14,2384,10],[3531,12,2382,16,"data"],[3531,16,2382,20],[3531,19,2382,20,"_yield23"],[3531,27,2382,20],[3531,28,2382,16,"data"],[3531,32,2382,20],[3532,12,2382,22,"error"],[3532,17,2382,27],[3532,20,2382,27,"_yield23"],[3532,28,2382,27],[3532,29,2382,22,"error"],[3532,34,2382,27],[3533,10,2385,8],[3533,14,2385,12,"error"],[3533,19,2385,17],[3533,21,2385,19],[3534,12,2386,12],[3534,18,2386,18,"error"],[3534,23,2386,23],[3535,10,2387,8],[3536,10,2388,8],[3536,14,2388,12],[3536,15,2388,13,"data"],[3536,19,2388,17],[3536,20,2388,18,"keys"],[3536,24,2388,22],[3536,28,2388,26,"data"],[3536,32,2388,30],[3536,33,2388,31,"keys"],[3536,37,2388,35],[3536,38,2388,36,"length"],[3536,44,2388,42],[3536,49,2388,47],[3536,50,2388,48],[3536,52,2388,50],[3537,12,2389,12],[3537,19,2389,19],[3537,23,2389,23],[3538,10,2390,8],[3539,10,2391,8],[3539,14,2391,12],[3539,15,2391,13,"jwks"],[3539,19,2391,17],[3539,22,2391,20,"data"],[3539,26,2391,24],[3540,10,2392,8],[3540,14,2392,12],[3540,15,2392,13,"jwks_cached_at"],[3540,29,2392,27],[3540,32,2392,30,"now"],[3540,35,2392,33],[3541,10,2393,8],[3542,10,2394,8,"jwk"],[3542,13,2394,11],[3542,16,2394,14,"data"],[3542,20,2394,18],[3542,21,2394,19,"keys"],[3542,25,2394,23],[3542,26,2394,24,"find"],[3542,30,2394,28],[3542,31,2394,30,"key"],[3542,34,2394,33],[3542,38,2394,38,"key"],[3542,41,2394,41],[3542,42,2394,42,"kid"],[3542,45,2394,45],[3542,50,2394,50,"kid"],[3542,53,2394,53],[3542,54,2394,54],[3543,10,2395,8],[3543,14,2395,12],[3543,15,2395,13,"jwk"],[3543,18,2395,16],[3543,20,2395,18],[3544,12,2396,12],[3544,19,2396,19],[3544,23,2396,23],[3545,10,2397,8],[3546,10,2398,8],[3546,17,2398,15,"jwk"],[3546,20,2398,18],[3547,8,2399,4],[3547,9,2399,5],[3548,8,2399,5],[3548,17,2368,10,"fetchJwk"],[3548,25,2368,18,"fetchJwk"],[3548,26,2368,18,"_x68"],[3548,30,2368,18],[3549,10,2368,18],[3549,17,2368,18,"_fetchJwk"],[3549,26,2368,18],[3549,27,2368,18,"apply"],[3549,32,2368,18],[3549,39,2368,18,"arguments"],[3549,48,2368,18],[3550,8,2368,18],[3551,8,2368,18],[3551,15,2368,10,"fetchJwk"],[3551,23,2368,18],[3552,6,2368,18],[3553,6,2400,4],[3554,0,2401,0],[3555,0,2402,0],[3556,0,2403,0],[3557,0,2404,0],[3558,0,2405,0],[3559,0,2406,0],[3560,0,2407,0],[3561,0,2408,0],[3562,0,2409,0],[3563,0,2410,0],[3564,0,2411,0],[3565,0,2412,0],[3566,0,2413,0],[3567,0,2414,0],[3568,0,2415,0],[3569,4,2400,4],[3570,6,2400,4,"key"],[3570,9,2400,4],[3571,6,2400,4,"value"],[3571,11,2400,4],[3572,8,2400,4],[3572,12,2400,4,"_getClaims"],[3572,22,2400,4],[3572,25,2400,4,"_asyncToGenerator"],[3572,42,2400,4],[3572,43,2416,4],[3572,54,2416,20,"jwt"],[3572,57,2416,23],[3572,59,2416,39],[3573,10,2416,39],[3573,14,2416,25,"options"],[3573,21,2416,32],[3573,24,2416,32,"arguments"],[3573,33,2416,32],[3573,34,2416,32,"length"],[3573,40,2416,32],[3573,48,2416,32,"arguments"],[3573,57,2416,32],[3573,65,2416,32,"undefined"],[3573,74,2416,32],[3573,77,2416,32,"arguments"],[3573,86,2416,32],[3573,92,2416,35],[3573,93,2416,36],[3573,94,2416,37],[3574,10,2417,8],[3574,14,2417,12],[3575,12,2418,12],[3575,16,2418,16,"token"],[3575,21,2418,21],[3575,24,2418,24,"jwt"],[3575,27,2418,27],[3576,12,2419,12],[3576,16,2419,16],[3576,17,2419,17,"token"],[3576,22,2419,22],[3576,24,2419,24],[3577,14,2420,16],[3577,18,2420,16,"_yield$this$getSessio"],[3577,39,2420,16],[3577,48,2420,46],[3577,52,2420,50],[3577,53,2420,51,"getSession"],[3577,63,2420,61],[3577,64,2420,62],[3577,65,2420,63],[3578,16,2420,24,"data"],[3578,20,2420,28],[3578,23,2420,28,"_yield$this$getSessio"],[3578,44,2420,28],[3578,45,2420,24,"data"],[3578,49,2420,28],[3579,16,2420,30,"error"],[3579,21,2420,35],[3579,24,2420,35,"_yield$this$getSessio"],[3579,45,2420,35],[3579,46,2420,30,"error"],[3579,51,2420,35],[3580,14,2421,16],[3580,18,2421,20,"error"],[3580,23,2421,25],[3580,27,2421,29],[3580,28,2421,30,"data"],[3580,32,2421,34],[3580,33,2421,35,"session"],[3580,40,2421,42],[3580,42,2421,44],[3581,16,2422,20],[3581,23,2422,27],[3582,18,2422,29,"data"],[3582,22,2422,33],[3582,24,2422,35],[3582,28,2422,39],[3583,18,2422,41,"error"],[3584,16,2422,47],[3584,17,2422,48],[3585,14,2423,16],[3586,14,2424,16,"token"],[3586,19,2424,21],[3586,22,2424,24,"data"],[3586,26,2424,28],[3586,27,2424,29,"session"],[3586,34,2424,36],[3586,35,2424,37,"access_token"],[3586,47,2424,49],[3587,12,2425,12],[3588,12,2426,12],[3588,16,2426,12,"_ref44"],[3588,22,2426,12],[3588,25,2426,101],[3588,26,2426,102],[3588,27,2426,103],[3588,29,2426,105,"helpers_1"],[3588,38,2426,114],[3588,39,2426,115,"decodeJWT"],[3588,48,2426,124],[3588,50,2426,126,"token"],[3588,55,2426,131],[3588,56,2426,132],[3589,14,2426,20,"header"],[3589,20,2426,26],[3589,23,2426,26,"_ref44"],[3589,29,2426,26],[3589,30,2426,20,"header"],[3589,36,2426,26],[3590,14,2426,28,"payload"],[3590,21,2426,35],[3590,24,2426,35,"_ref44"],[3590,30,2426,35],[3590,31,2426,28,"payload"],[3590,38,2426,35],[3591,14,2426,37,"signature"],[3591,23,2426,46],[3591,26,2426,46,"_ref44"],[3591,32,2426,46],[3591,33,2426,37,"signature"],[3591,42,2426,46],[3592,14,2426,46,"_ref44$raw"],[3592,24,2426,46],[3592,27,2426,46,"_ref44"],[3592,33,2426,46],[3592,34,2426,48,"raw"],[3592,37,2426,51],[3593,14,2426,63,"rawHeader"],[3593,23,2426,72],[3593,26,2426,72,"_ref44$raw"],[3593,36,2426,72],[3593,37,2426,55,"header"],[3593,43,2426,61],[3594,14,2426,83,"rawPayload"],[3594,24,2426,93],[3594,27,2426,93,"_ref44$raw"],[3594,37,2426,93],[3594,38,2426,74,"payload"],[3594,45,2426,81],[3595,12,2427,12],[3595,16,2427,16],[3595,18,2427,18,"options"],[3595,25,2427,25],[3595,30,2427,30],[3595,34,2427,34],[3595,38,2427,38,"options"],[3595,45,2427,45],[3595,50,2427,50],[3595,55,2427,55],[3595,56,2427,56],[3595,59,2427,59],[3595,64,2427,64],[3595,65,2427,65],[3595,68,2427,68,"options"],[3595,75,2427,75],[3595,76,2427,76,"allowExpired"],[3595,88,2427,88],[3595,89,2427,89],[3595,91,2427,91],[3596,14,2428,16],[3597,14,2429,16],[3597,15,2429,17],[3597,16,2429,18],[3597,18,2429,20,"helpers_1"],[3597,27,2429,29],[3597,28,2429,30,"validateExp"],[3597,39,2429,41],[3597,41,2429,43,"payload"],[3597,48,2429,50],[3597,49,2429,51,"exp"],[3597,52,2429,54],[3597,53,2429,55],[3598,12,2430,12],[3599,12,2431,12],[3599,16,2431,18,"signingKey"],[3599,26,2431,28],[3599,29,2431,31],[3599,30,2431,32,"header"],[3599,36,2431,38],[3599,37,2431,39,"alg"],[3599,40,2431,42],[3599,44,2432,16,"header"],[3599,50,2432,22],[3599,51,2432,23,"alg"],[3599,54,2432,26],[3599,55,2432,27,"startsWith"],[3599,65,2432,37],[3599,66,2432,38],[3599,70,2432,42],[3599,71,2432,43],[3599,75,2433,16],[3599,76,2433,17,"header"],[3599,82,2433,23],[3599,83,2433,24,"kid"],[3599,86,2433,27],[3599,90,2434,16],[3599,92,2434,18],[3599,100,2434,26],[3599,104,2434,30,"globalThis"],[3599,114,2434,40],[3599,118,2434,44],[3599,126,2434,52],[3599,130,2434,56,"globalThis"],[3599,140,2434,66],[3599,141,2434,67,"crypto"],[3599,147,2434,73],[3599,148,2434,74],[3599,151,2435,18],[3599,155,2435,22],[3599,164,2436,24],[3599,168,2436,28],[3599,169,2436,29,"fetchJwk"],[3599,177,2436,37],[3599,178,2436,38,"header"],[3599,184,2436,44],[3599,185,2436,45,"kid"],[3599,188,2436,48],[3599,190,2436,50],[3599,191,2436,51,"options"],[3599,198,2436,58],[3599,203,2436,63],[3599,207,2436,67],[3599,211,2436,71,"options"],[3599,218,2436,78],[3599,223,2436,83],[3599,228,2436,88],[3599,229,2436,89],[3599,232,2436,92],[3599,237,2436,97],[3599,238,2436,98],[3599,241,2436,101,"options"],[3599,248,2436,108],[3599,249,2436,109,"keys"],[3599,253,2436,113],[3599,257,2436,117],[3600,14,2436,119,"keys"],[3600,18,2436,123],[3600,20,2436,125,"options"],[3600,27,2436,132],[3600,28,2436,133,"keys"],[3601,12,2436,138],[3601,13,2436,139],[3601,16,2436,142,"options"],[3601,23,2436,149],[3601,28,2436,154],[3601,32,2436,158],[3601,36,2436,162,"options"],[3601,43,2436,169],[3601,48,2436,174],[3601,53,2436,179],[3601,54,2436,180],[3601,57,2436,183],[3601,62,2436,188],[3601,63,2436,189],[3601,66,2436,192,"options"],[3601,73,2436,199],[3601,74,2436,200,"jwks"],[3601,78,2436,204],[3601,79,2436,205],[3602,12,2437,12],[3603,12,2438,12],[3603,16,2438,16],[3603,17,2438,17,"signingKey"],[3603,27,2438,27],[3603,29,2438,29],[3604,14,2439,16],[3604,18,2439,16,"_yield$this$getUser3"],[3604,38,2439,16],[3604,47,2439,40],[3604,51,2439,44],[3604,52,2439,45,"getUser"],[3604,59,2439,52],[3604,60,2439,53,"token"],[3604,65,2439,58],[3604,66,2439,59],[3605,16,2439,24,"error"],[3605,23,2439,29],[3605,26,2439,29,"_yield$this$getUser3"],[3605,46,2439,29],[3605,47,2439,24,"error"],[3605,52,2439,29],[3606,14,2440,16],[3606,18,2440,20,"error"],[3606,25,2440,25],[3606,27,2440,27],[3607,16,2441,20],[3607,22,2441,26,"error"],[3607,29,2441,31],[3608,14,2442,16],[3609,14,2443,16],[3610,14,2444,16],[3610,21,2444,23],[3611,16,2445,20,"data"],[3611,20,2445,24],[3611,22,2445,26],[3612,18,2446,24,"claims"],[3612,24,2446,30],[3612,26,2446,32,"payload"],[3612,33,2446,39],[3613,18,2447,24,"header"],[3613,24,2447,30],[3614,18,2448,24,"signature"],[3615,16,2449,20],[3615,17,2449,21],[3616,16,2450,20,"error"],[3616,21,2450,25],[3616,23,2450,27],[3617,14,2451,16],[3617,15,2451,17],[3618,12,2452,12],[3619,12,2453,12],[3619,16,2453,18,"algorithm"],[3619,25,2453,27],[3619,28,2453,30],[3619,29,2453,31],[3619,30,2453,32],[3619,32,2453,34,"helpers_1"],[3619,41,2453,43],[3619,42,2453,44,"getAlgorithm"],[3619,54,2453,56],[3619,56,2453,58,"header"],[3619,62,2453,64],[3619,63,2453,65,"alg"],[3619,66,2453,68],[3619,67,2453,69],[3620,12,2454,12],[3621,12,2455,12],[3621,16,2455,18,"publicKey"],[3621,25,2455,27],[3621,34,2455,36,"crypto"],[3621,40,2455,42],[3621,41,2455,43,"subtle"],[3621,47,2455,49],[3621,48,2455,50,"importKey"],[3621,57,2455,59],[3621,58,2455,60],[3621,63,2455,65],[3621,65,2455,67,"signingKey"],[3621,75,2455,77],[3621,77,2455,79,"algorithm"],[3621,86,2455,88],[3621,88,2455,90],[3621,92,2455,94],[3621,94,2455,96],[3621,95,2456,16],[3621,103,2456,24],[3621,104,2457,13],[3621,105,2457,14],[3622,12,2458,12],[3623,12,2459,12],[3623,16,2459,18,"isValid"],[3623,23,2459,25],[3623,32,2459,34,"crypto"],[3623,38,2459,40],[3623,39,2459,41,"subtle"],[3623,45,2459,47],[3623,46,2459,48,"verify"],[3623,52,2459,54],[3623,53,2459,55,"algorithm"],[3623,62,2459,64],[3623,64,2459,66,"publicKey"],[3623,73,2459,75],[3623,75,2459,77,"signature"],[3623,84,2459,86],[3623,86,2459,88],[3623,87,2459,89],[3623,88,2459,90],[3623,90,2459,92,"base64url_1"],[3623,101,2459,103],[3623,102,2459,104,"stringToUint8Array"],[3623,120,2459,122],[3623,122,2459,124],[3623,125,2459,127,"rawHeader"],[3623,134,2459,136],[3623,138,2459,140,"rawPayload"],[3623,148,2459,150],[3623,150,2459,152],[3623,151,2459,153],[3623,152,2459,154],[3624,12,2460,12],[3624,16,2460,16],[3624,17,2460,17,"isValid"],[3624,24,2460,24],[3624,26,2460,26],[3625,14,2461,16],[3625,20,2461,22],[3625,24,2461,26,"errors_1"],[3625,32,2461,34],[3625,33,2461,35,"AuthInvalidJwtError"],[3625,52,2461,54],[3625,53,2461,55],[3625,76,2461,78],[3625,77,2461,79],[3626,12,2462,12],[3627,12,2463,12],[3628,12,2464,12],[3628,19,2464,19],[3629,14,2465,16,"data"],[3629,18,2465,20],[3629,20,2465,22],[3630,16,2466,20,"claims"],[3630,22,2466,26],[3630,24,2466,28,"payload"],[3630,31,2466,35],[3631,16,2467,20,"header"],[3631,22,2467,26],[3632,16,2468,20,"signature"],[3633,14,2469,16],[3633,15,2469,17],[3634,14,2470,16,"error"],[3634,19,2470,21],[3634,21,2470,23],[3635,12,2471,12],[3635,13,2471,13],[3636,10,2472,8],[3636,11,2472,9],[3636,12,2473,8],[3636,19,2473,15,"error"],[3636,24,2473,20],[3636,26,2473,22],[3637,12,2474,12],[3637,16,2474,16],[3637,17,2474,17],[3637,18,2474,18],[3637,20,2474,20,"errors_1"],[3637,28,2474,28],[3637,29,2474,29,"isAuthError"],[3637,40,2474,40],[3637,42,2474,42,"error"],[3637,47,2474,47],[3637,48,2474,48],[3637,50,2474,50],[3638,14,2475,16],[3638,21,2475,23],[3639,16,2475,25,"data"],[3639,20,2475,29],[3639,22,2475,31],[3639,26,2475,35],[3640,16,2475,37,"error"],[3641,14,2475,43],[3641,15,2475,44],[3642,12,2476,12],[3643,12,2477,12],[3643,18,2477,18,"error"],[3643,23,2477,23],[3644,10,2478,8],[3645,8,2479,4],[3645,9,2479,5],[3646,8,2479,5],[3646,17,2416,10,"getClaims"],[3646,26,2416,19,"getClaims"],[3646,27,2416,19,"_x69"],[3646,31,2416,19],[3647,10,2416,19],[3647,17,2416,19,"_getClaims"],[3647,27,2416,19],[3647,28,2416,19,"apply"],[3647,33,2416,19],[3647,40,2416,19,"arguments"],[3647,49,2416,19],[3648,8,2416,19],[3649,8,2416,19],[3649,15,2416,10,"getClaims"],[3649,24,2416,19],[3650,6,2416,19],[3651,4,2416,19],[3652,2,2416,19],[3653,2,2481,0,"exports"],[3653,9,2481,7],[3653,10,2481,8,"default"],[3653,17,2481,15],[3653,20,2481,18,"GoTrueClient"],[3653,32,2481,30],[3654,2,2482,0,"GoTrueClient"],[3654,14,2482,12],[3654,15,2482,13,"nextInstanceID"],[3654,29,2482,27],[3654,32,2482,30],[3654,33,2482,31],[3655,0,2482,32],[3655,3]],"functionMap":{"names":["<global>","<anonymous>","lockNoOp","GoTrueClient","constructor","_b.addEventListener$argument_1","get__jwks","set__jwks","get__jwks_cached_at","set__jwks_cached_at","_debug","initialize","_acquireLock$argument_1","_initialize","setTimeout$argument_0","signInAnonymously","signUp","signInWithPassword","signInWithOAuth","exchangeCodeForSession","signInWithWeb3","signInWithEthereum","resolvedWallet.request.then$argument_0","resolvedWallet.request.then._catch$argument_0","signInWithSolana","options.signInWithSolana.resources.map$argument_0","_exchangeCodeForSession","signInWithIdToken","signInWithOtp","verifyOtp","signInWithSSO","reauthenticate","_reauthenticate","_useSession$argument_0","resend","getSession","_acquireLock","lock$argument_2","_useSession","__loadSession","Proxy$argument_1.get","getUser","_getUser","updateUser","_updateUser","setSession","_setSession","refreshSession","_refreshSession","_getSessionFromURL","_isImplicitGrantCallback","_isPKCECallback","signOut","_signOut","onAuthStateChange","subscription.unsubscribe","_emitInitialSession","resetPasswordForEmail","getUserIdentities","linkIdentity","unlinkIdentity","_refreshAccessToken","_isValidSession","_handleProviderSignIn","_recoverAndRefresh","_callRefreshToken","_notifyAllSubscribers","Array.from.map$argument_0","_saveSession","_removeSession","_removeVisibilityChangedCallback","_startAutoRefresh","setInterval$argument_0","_stopAutoRefresh","startAutoRefresh","stopAutoRefresh","_autoRefreshTokenTick","_handleVisibilityChange","visibilityChangedCallback","_onVisibilityChanged","_getUrlForProvider","_unenroll","_enroll","_verify","_challenge","_challengeAndVerify","_listFactors","factors.filter$argument_0","_getAuthenticatorAssuranceLevel","_a.filter$argument_0","fetchJwk","jwks.keys.find$argument_0","data.keys.find$argument_0","getClaims"],"mappings":"AAA;wDCC;CDE;AEyB;CFE;AGU;ICI;6GCuG;aDG;KDG;IGI;KHG;IIC;KJE;IKC;KLG;IMC;KNE;IOC;KPK;IQM;kCVI;+CWC;aXE;SUC;KRE;IUO;2BCqC;iBDO;KVmB;IYM;KZ6B;IaW;Kb6D;IcS;KdoD;IeK;KfQ;IgBI;qCPE;SOE;KhBC;IiBQ;KjBU;IkBC;sBCsC,cD;uBEC;aFE;KlB+D;IqBC;sECmG,6BD;KrBwC;IuBC;KvBkC;IwBK;KxBoC;IyBkB;KzB+C;I0BI;K1BmC;I2Be;K3BuB;I4BK;2CnBE;SmBE;K5BC;I6BC;0CCE;aDW;K7BQ;I+BI;K/BoC;IgCY;mDvBE;oCqBC;arBE;SuBC;KhCE;IiCI;gCnCO;iBmCG;yCnCC;iBmCO;8ECG;6CpCK;qBoCO;aDc;KjCK;ImCO;KnCU;IoCM;6BC2C;yBDQ;KpCe;IsCQ;mD7BK;S6BE;KtCE;IuCC;0CTS;aSe;KvCc;IwCI;2C/BE;S+BE;KxCC;IyCC;0CXE;aW4B;KzCQ;I0CM;2CjCE;SiCE;K1CC;I2CC;K3CgD;I4CO;2CnCE;SmCE;K5CC;I6CC;0CfE;aeoB;K7CQ;I8CI;K9CsF;I+CI;K/CE;IgDI;KhDG;IiDS;2CxCE;SwCE;KjDC;IkDC;sCpBC;SoBuB;KlDC;ImDK;yBCK;aDG;SrDI;wCWE;aXE;SqDC;KnDE;IqDC;sCvBC;SuBc;KrDC;IsDQ;KtD0B;IuDI;KvDc;IwDK;2D1BG;a0Be;KxDc;IyDI;0C3BE;a2BU;KzDQ;I0DK;kD5DM;a4DU,E5D;a4DM;K1DY;I2DC;K3DO;I4DC;K5DY;I6DK;K7D0F;I8DC;K9DyC;I+DC;+ECQ;aDO;K/DY;IiEK;KjEmC;IkEC;KlES;ImEO;KnEY;IoEK;mCCG,kCD;mBzDqB;SyDG;KpEC;IsEK;KtEO;IuEuB;KvEG;IwES;KxEG;IyEI;uChEG;sDqBI;yBrBY;agES;KzEU;I0EM;6CCU,kDD;K1ES;I4EI;4CnEe;iBmEQ;K5EQ;I6EO;K7EwB;I8EC;0ChDE;agDU;K9EQ;I+EC;0CjDE;aiDmB;K/EQ;IgFI;qCvEC;8CqBE;iBrBiB;SuEQ;KhFC;IiFI;qCxEC;8CqBE;iBrBW;SwEQ;KjFC;IkFI;KlFc;ImFI;oCCO,yED;qCCC,0ED;KnFS;IqFI;qC5EC;0CqBC;yHwDkB,wCxD;arBM;S4EC;KrFC;IuFC;iCCE,wBD;kCCM,wBD;6BEkB,wBF;KvFK;I0FiB;K1F+D;CHC"},"hasCjsExports":true},"type":"js/module"}]}