{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@supabase/functions-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":23,"index":781},"end":{"line":12,"column":56,"index":814}}],"key":"glpf6oTP7di01DC4h74kjG9zUk8=","exportNames":["*"],"imports":1}},{"name":"@supabase/postgrest-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":23,"index":839},"end":{"line":13,"column":56,"index":872}}],"key":"cL6u/nzyiUXVZ5YxlIegXtn34JQ=","exportNames":["*"],"imports":1}},{"name":"@supabase/realtime-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":22,"index":896},"end":{"line":14,"column":54,"index":928}}],"key":"ufvOE+4NpNY3D4MWUjApZQJLO+w=","exportNames":["*"],"imports":1}},{"name":"@supabase/storage-js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":21,"index":951},"end":{"line":15,"column":52,"index":982}}],"key":"QxvtUmCIxi2sN/azuKOSJ477D7U=","exportNames":["*"],"imports":1}},{"name":"./lib/constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":20,"index":1004},"end":{"line":16,"column":46,"index":1030}}],"key":"Tozkr70n9lVAcLLAJew2JSVOK9Y=","exportNames":["*"],"imports":1}},{"name":"./lib/fetch","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":16,"index":1048},"end":{"line":17,"column":38,"index":1070}}],"key":"R6LkNjEOXDiLQ/+hwj6jDUhuOC4=","exportNames":["*"],"imports":1}},{"name":"./lib/helpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":18,"index":1090},"end":{"line":18,"column":42,"index":1114}}],"key":"WC5jlm7KwiIsdJM6jCtPN6iFk4U=","exportNames":["*"],"imports":1}},{"name":"./lib/SupabaseAuthClient","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":29,"index":1145},"end":{"line":19,"column":64,"index":1180}}],"key":"1AnNupT1kuXoI5Q2fZ4eDSG6OJQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\").default;\n  var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var functions_js_1 = require(_dependencyMap[2], \"@supabase/functions-js\");\n  var postgrest_js_1 = require(_dependencyMap[3], \"@supabase/postgrest-js\");\n  var realtime_js_1 = require(_dependencyMap[4], \"@supabase/realtime-js\");\n  var storage_js_1 = require(_dependencyMap[5], \"@supabase/storage-js\");\n  var constants_1 = require(_dependencyMap[6], \"./lib/constants\");\n  var fetch_1 = require(_dependencyMap[7], \"./lib/fetch\");\n  var helpers_1 = require(_dependencyMap[8], \"./lib/helpers\");\n  var SupabaseAuthClient_1 = require(_dependencyMap[9], \"./lib/SupabaseAuthClient\");\n  /**\n   * Supabase Client.\n   *\n   * An isomorphic Javascript client for interacting with Postgres.\n   */\n  var SupabaseClient = /*#__PURE__*/function () {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.storage Options passed along to the storage-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    function SupabaseClient(supabaseUrl, supabaseKey, options) {\n      _classCallCheck(this, SupabaseClient);\n      var _a, _b, _c;\n      this.supabaseUrl = supabaseUrl;\n      this.supabaseKey = supabaseKey;\n      var baseUrl = (0, helpers_1.validateSupabaseUrl)(supabaseUrl);\n      if (!supabaseKey) throw new Error('supabaseKey is required.');\n      this.realtimeUrl = new URL('realtime/v1', baseUrl);\n      this.realtimeUrl.protocol = this.realtimeUrl.protocol.replace('http', 'ws');\n      this.authUrl = new URL('auth/v1', baseUrl);\n      this.storageUrl = new URL('storage/v1', baseUrl);\n      this.functionsUrl = new URL('functions/v1', baseUrl);\n      // default storage key uses the supabase project ref as a namespace\n      var defaultStorageKey = `sb-${baseUrl.hostname.split('.')[0]}-auth-token`;\n      var DEFAULTS = {\n        db: constants_1.DEFAULT_DB_OPTIONS,\n        realtime: constants_1.DEFAULT_REALTIME_OPTIONS,\n        auth: Object.assign(Object.assign({}, constants_1.DEFAULT_AUTH_OPTIONS), {\n          storageKey: defaultStorageKey\n        }),\n        global: constants_1.DEFAULT_GLOBAL_OPTIONS\n      };\n      var settings = (0, helpers_1.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : '';\n      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n      if (!settings.accessToken) {\n        this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n      } else {\n        this.accessToken = settings.accessToken;\n        this.auth = new Proxy({}, {\n          get: (_, prop) => {\n            throw new Error(`@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.${String(prop)} is not possible`);\n          }\n        });\n      }\n      this.fetch = (0, fetch_1.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n      this.realtime = this._initRealtimeClient(Object.assign({\n        headers: this.headers,\n        accessToken: this._getAccessToken.bind(this)\n      }, settings.realtime));\n      this.rest = new postgrest_js_1.PostgrestClient(new URL('rest/v1', baseUrl).href, {\n        headers: this.headers,\n        schema: settings.db.schema,\n        fetch: this.fetch\n      });\n      this.storage = new storage_js_1.StorageClient(this.storageUrl.href, this.headers, this.fetch, options === null || options === void 0 ? void 0 : options.storage);\n      if (!settings.accessToken) {\n        this._listenForAuthEvents();\n      }\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    return _createClass(SupabaseClient, [{\n      key: \"functions\",\n      get: function () {\n        return new functions_js_1.FunctionsClient(this.functionsUrl.href, {\n          headers: this.headers,\n          customFetch: this.fetch\n        });\n      }\n      /**\n       * Perform a query on a table or a view.\n       *\n       * @param relation - The table or view name to query\n       */\n    }, {\n      key: \"from\",\n      value: function from(relation) {\n        return this.rest.from(relation);\n      }\n      // NOTE: signatures must be kept in sync with PostgrestClient.schema\n      /**\n       * Select a schema to query or perform an function (rpc) call.\n       *\n       * The schema needs to be on the list of exposed schemas inside Supabase.\n       *\n       * @param schema - The schema to query\n       */\n    }, {\n      key: \"schema\",\n      value: function schema(_schema) {\n        return this.rest.schema(_schema);\n      }\n      // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n      /**\n       * Perform a function call.\n       *\n       * @param fn - The function name to call\n       * @param args - The arguments to pass to the function call\n       * @param options - Named parameters\n       * @param options.head - When set to `true`, `data` will not be returned.\n       * Useful if you only need the count.\n       * @param options.get - When set to `true`, the function will be called with\n       * read-only access mode.\n       * @param options.count - Count algorithm to use to count rows returned by the\n       * function. Only applicable for [set-returning\n       * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n       *\n       * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n       * hood.\n       *\n       * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n       * statistics under the hood.\n       *\n       * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n       * numbers.\n       */\n    }, {\n      key: \"rpc\",\n      value: function rpc(fn) {\n        var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return this.rest.rpc(fn, args, options);\n      }\n      /**\n       * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n       *\n       * @param {string} name - The name of the Realtime channel.\n       * @param {Object} opts - The options to pass to the Realtime channel.\n       *\n       */\n    }, {\n      key: \"channel\",\n      value: function channel(name) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n          config: {}\n        };\n        return this.realtime.channel(name, opts);\n      }\n      /**\n       * Returns all Realtime channels.\n       */\n    }, {\n      key: \"getChannels\",\n      value: function getChannels() {\n        return this.realtime.getChannels();\n      }\n      /**\n       * Unsubscribes and removes Realtime channel from Realtime client.\n       *\n       * @param {RealtimeChannel} channel - The name of the Realtime channel.\n       *\n       */\n    }, {\n      key: \"removeChannel\",\n      value: function removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n      }\n      /**\n       * Unsubscribes and removes all Realtime channels from Realtime client.\n       */\n    }, {\n      key: \"removeAllChannels\",\n      value: function removeAllChannels() {\n        return this.realtime.removeAllChannels();\n      }\n    }, {\n      key: \"_getAccessToken\",\n      value: function _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n          if (this.accessToken) {\n            return yield this.accessToken();\n          }\n          var _yield$this$auth$getS = yield this.auth.getSession(),\n            data = _yield$this$auth$getS.data;\n          return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        });\n      }\n    }, {\n      key: \"_initSupabaseAuthClient\",\n      value: function _initSupabaseAuthClient(_ref, headers, fetch) {\n        var autoRefreshToken = _ref.autoRefreshToken,\n          persistSession = _ref.persistSession,\n          detectSessionInUrl = _ref.detectSessionInUrl,\n          storage = _ref.storage,\n          userStorage = _ref.userStorage,\n          storageKey = _ref.storageKey,\n          flowType = _ref.flowType,\n          lock = _ref.lock,\n          debug = _ref.debug;\n        var authHeaders = {\n          Authorization: `Bearer ${this.supabaseKey}`,\n          apikey: `${this.supabaseKey}`\n        };\n        return new SupabaseAuthClient_1.SupabaseAuthClient({\n          url: this.authUrl.href,\n          headers: Object.assign(Object.assign({}, authHeaders), headers),\n          storageKey: storageKey,\n          autoRefreshToken,\n          persistSession,\n          detectSessionInUrl,\n          storage,\n          userStorage,\n          flowType,\n          lock,\n          debug,\n          fetch,\n          // auth checks if there is a custom authorizaiton header using this flag\n          // so it knows whether to return an error when getUser is called with no session\n          hasCustomAuthorizationHeader: Object.keys(this.headers).some(key => key.toLowerCase() === 'authorization')\n        });\n      }\n    }, {\n      key: \"_initRealtimeClient\",\n      value: function _initRealtimeClient(options) {\n        return new realtime_js_1.RealtimeClient(this.realtimeUrl.href, Object.assign(Object.assign({}, options), {\n          params: Object.assign({\n            apikey: this.supabaseKey\n          }, options === null || options === void 0 ? void 0 : options.params)\n        }));\n      }\n    }, {\n      key: \"_listenForAuthEvents\",\n      value: function _listenForAuthEvents() {\n        var data = this.auth.onAuthStateChange((event, session) => {\n          this._handleTokenChanged(event, 'CLIENT', session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n      }\n    }, {\n      key: \"_handleTokenChanged\",\n      value: function _handleTokenChanged(event, source, token) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') && this.changedAccessToken !== token) {\n          this.changedAccessToken = token;\n          this.realtime.setAuth(token);\n        } else if (event === 'SIGNED_OUT') {\n          this.realtime.setAuth();\n          if (source == 'STORAGE') this.auth.signOut();\n          this.changedAccessToken = undefined;\n        }\n      }\n    }]);\n  }();\n  exports.default = SupabaseClient;\n});","lineCount":299,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"require"],[4,31,1,13],[4,32,1,13,"_dependencyMap"],[4,46,1,13],[4,92,1,13,"default"],[4,99,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"require"],[5,28,1,13],[5,29,1,13,"_dependencyMap"],[5,43,1,13],[5,86,1,13,"default"],[5,93,1,13],[6,2,2,0],[6,6,2,4,"__awaiter"],[6,15,2,13],[6,18,2,17],[6,22,2,21],[6,26,2,25],[6,30,2,29],[6,31,2,30,"__awaiter"],[6,40,2,39],[6,44,2,44],[6,54,2,54,"thisArg"],[6,61,2,61],[6,63,2,63,"_arguments"],[6,73,2,73],[6,75,2,75,"P"],[6,76,2,76],[6,78,2,78,"generator"],[6,87,2,87],[6,89,2,89],[7,4,3,4],[7,13,3,13,"adopt"],[7,18,3,18,"adopt"],[7,19,3,19,"value"],[7,24,3,24],[7,26,3,26],[8,6,3,28],[8,13,3,35,"value"],[8,18,3,40],[8,30,3,52,"P"],[8,31,3,53],[8,34,3,56,"value"],[8,39,3,61],[8,42,3,64],[8,46,3,68,"P"],[8,47,3,69],[8,48,3,70],[8,58,3,80,"resolve"],[8,65,3,87],[8,67,3,89],[9,8,3,91,"resolve"],[9,15,3,98],[9,16,3,99,"value"],[9,21,3,104],[9,22,3,105],[10,6,3,107],[10,7,3,108],[10,8,3,109],[11,4,3,111],[12,4,4,4],[12,11,4,11],[12,16,4,16,"P"],[12,17,4,17],[12,22,4,22,"P"],[12,23,4,23],[12,26,4,26,"Promise"],[12,33,4,33],[12,34,4,34],[12,36,4,36],[12,46,4,46,"resolve"],[12,53,4,53],[12,55,4,55,"reject"],[12,61,4,61],[12,63,4,63],[13,6,5,8],[13,15,5,17,"fulfilled"],[13,24,5,26,"fulfilled"],[13,25,5,27,"value"],[13,30,5,32],[13,32,5,34],[14,8,5,36],[14,12,5,40],[15,10,5,42,"step"],[15,14,5,46],[15,15,5,47,"generator"],[15,24,5,56],[15,25,5,57,"next"],[15,29,5,61],[15,30,5,62,"value"],[15,35,5,67],[15,36,5,68],[15,37,5,69],[16,8,5,71],[16,9,5,72],[16,10,5,73],[16,17,5,80,"e"],[16,18,5,81],[16,20,5,83],[17,10,5,85,"reject"],[17,16,5,91],[17,17,5,92,"e"],[17,18,5,93],[17,19,5,94],[18,8,5,96],[19,6,5,98],[20,6,6,8],[20,15,6,17,"rejected"],[20,23,6,25,"rejected"],[20,24,6,26,"value"],[20,29,6,31],[20,31,6,33],[21,8,6,35],[21,12,6,39],[22,10,6,41,"step"],[22,14,6,45],[22,15,6,46,"generator"],[22,24,6,55],[22,25,6,56],[22,32,6,63],[22,33,6,64],[22,34,6,65,"value"],[22,39,6,70],[22,40,6,71],[22,41,6,72],[23,8,6,74],[23,9,6,75],[23,10,6,76],[23,17,6,83,"e"],[23,18,6,84],[23,20,6,86],[24,10,6,88,"reject"],[24,16,6,94],[24,17,6,95,"e"],[24,18,6,96],[24,19,6,97],[25,8,6,99],[26,6,6,101],[27,6,7,8],[27,15,7,17,"step"],[27,19,7,21,"step"],[27,20,7,22,"result"],[27,26,7,28],[27,28,7,30],[28,8,7,32,"result"],[28,14,7,38],[28,15,7,39,"done"],[28,19,7,43],[28,22,7,46,"resolve"],[28,29,7,53],[28,30,7,54,"result"],[28,36,7,60],[28,37,7,61,"value"],[28,42,7,66],[28,43,7,67],[28,46,7,70,"adopt"],[28,51,7,75],[28,52,7,76,"result"],[28,58,7,82],[28,59,7,83,"value"],[28,64,7,88],[28,65,7,89],[28,66,7,90,"then"],[28,70,7,94],[28,71,7,95,"fulfilled"],[28,80,7,104],[28,82,7,106,"rejected"],[28,90,7,114],[28,91,7,115],[29,6,7,117],[30,6,8,8,"step"],[30,10,8,12],[30,11,8,13],[30,12,8,14,"generator"],[30,21,8,23],[30,24,8,26,"generator"],[30,33,8,35],[30,34,8,36,"apply"],[30,39,8,41],[30,40,8,42,"thisArg"],[30,47,8,49],[30,49,8,51,"_arguments"],[30,59,8,61],[30,63,8,65],[30,65,8,67],[30,66,8,68],[30,68,8,70,"next"],[30,72,8,74],[30,73,8,75],[30,74,8,76],[30,75,8,77],[31,4,9,4],[31,5,9,5],[31,6,9,6],[32,2,10,0],[32,3,10,1],[33,2,11,0,"Object"],[33,8,11,6],[33,9,11,7,"defineProperty"],[33,23,11,21],[33,24,11,22,"exports"],[33,31,11,29],[33,33,11,31],[33,45,11,43],[33,47,11,45],[34,4,11,47,"value"],[34,9,11,52],[34,11,11,54],[35,2,11,59],[35,3,11,60],[35,4,11,61],[36,2,12,0],[36,6,12,6,"functions_js_1"],[36,20,12,20],[36,23,12,23,"require"],[36,30,12,30],[36,31,12,30,"_dependencyMap"],[36,45,12,30],[36,74,12,55],[36,75,12,56],[37,2,13,0],[37,6,13,6,"postgrest_js_1"],[37,20,13,20],[37,23,13,23,"require"],[37,30,13,30],[37,31,13,30,"_dependencyMap"],[37,45,13,30],[37,74,13,55],[37,75,13,56],[38,2,14,0],[38,6,14,6,"realtime_js_1"],[38,19,14,19],[38,22,14,22,"require"],[38,29,14,29],[38,30,14,29,"_dependencyMap"],[38,44,14,29],[38,72,14,53],[38,73,14,54],[39,2,15,0],[39,6,15,6,"storage_js_1"],[39,18,15,18],[39,21,15,21,"require"],[39,28,15,28],[39,29,15,28,"_dependencyMap"],[39,43,15,28],[39,70,15,51],[39,71,15,52],[40,2,16,0],[40,6,16,6,"constants_1"],[40,17,16,17],[40,20,16,20,"require"],[40,27,16,27],[40,28,16,27,"_dependencyMap"],[40,42,16,27],[40,64,16,45],[40,65,16,46],[41,2,17,0],[41,6,17,6,"fetch_1"],[41,13,17,13],[41,16,17,16,"require"],[41,23,17,23],[41,24,17,23,"_dependencyMap"],[41,38,17,23],[41,56,17,37],[41,57,17,38],[42,2,18,0],[42,6,18,6,"helpers_1"],[42,15,18,15],[42,18,18,18,"require"],[42,25,18,25],[42,26,18,25,"_dependencyMap"],[42,40,18,25],[42,60,18,41],[42,61,18,42],[43,2,19,0],[43,6,19,6,"SupabaseAuthClient_1"],[43,26,19,26],[43,29,19,29,"require"],[43,36,19,36],[43,37,19,36,"_dependencyMap"],[43,51,19,36],[43,82,19,63],[43,83,19,64],[44,2,20,0],[45,0,21,0],[46,0,22,0],[47,0,23,0],[48,0,24,0],[49,2,20,0],[49,6,25,6,"SupabaseClient"],[49,20,25,20],[50,4,26,4],[51,0,27,0],[52,0,28,0],[53,0,29,0],[54,0,30,0],[55,0,31,0],[56,0,32,0],[57,0,33,0],[58,0,34,0],[59,0,35,0],[60,0,36,0],[61,0,37,0],[62,0,38,0],[63,4,39,4],[63,13,39,4,"SupabaseClient"],[63,28,39,16,"supabaseUrl"],[63,39,39,27],[63,41,39,29,"supabaseKey"],[63,52,39,40],[63,54,39,42,"options"],[63,61,39,49],[63,63,39,51],[64,6,39,51,"_classCallCheck"],[64,21,39,51],[64,28,39,51,"SupabaseClient"],[64,42,39,51],[65,6,40,8],[65,10,40,12,"_a"],[65,12,40,14],[65,14,40,16,"_b"],[65,16,40,18],[65,18,40,20,"_c"],[65,20,40,22],[66,6,41,8],[66,10,41,12],[66,11,41,13,"supabaseUrl"],[66,22,41,24],[66,25,41,27,"supabaseUrl"],[66,36,41,38],[67,6,42,8],[67,10,42,12],[67,11,42,13,"supabaseKey"],[67,22,42,24],[67,25,42,27,"supabaseKey"],[67,36,42,38],[68,6,43,8],[68,10,43,14,"baseUrl"],[68,17,43,21],[68,20,43,24],[68,21,43,25],[68,22,43,26],[68,24,43,28,"helpers_1"],[68,33,43,37],[68,34,43,38,"validateSupabaseUrl"],[68,53,43,57],[68,55,43,59,"supabaseUrl"],[68,66,43,70],[68,67,43,71],[69,6,44,8],[69,10,44,12],[69,11,44,13,"supabaseKey"],[69,22,44,24],[69,24,45,12],[69,30,45,18],[69,34,45,22,"Error"],[69,39,45,27],[69,40,45,28],[69,66,45,54],[69,67,45,55],[70,6,46,8],[70,10,46,12],[70,11,46,13,"realtimeUrl"],[70,22,46,24],[70,25,46,27],[70,29,46,31,"URL"],[70,32,46,34],[70,33,46,35],[70,46,46,48],[70,48,46,50,"baseUrl"],[70,55,46,57],[70,56,46,58],[71,6,47,8],[71,10,47,12],[71,11,47,13,"realtimeUrl"],[71,22,47,24],[71,23,47,25,"protocol"],[71,31,47,33],[71,34,47,36],[71,38,47,40],[71,39,47,41,"realtimeUrl"],[71,50,47,52],[71,51,47,53,"protocol"],[71,59,47,61],[71,60,47,62,"replace"],[71,67,47,69],[71,68,47,70],[71,74,47,76],[71,76,47,78],[71,80,47,82],[71,81,47,83],[72,6,48,8],[72,10,48,12],[72,11,48,13,"authUrl"],[72,18,48,20],[72,21,48,23],[72,25,48,27,"URL"],[72,28,48,30],[72,29,48,31],[72,38,48,40],[72,40,48,42,"baseUrl"],[72,47,48,49],[72,48,48,50],[73,6,49,8],[73,10,49,12],[73,11,49,13,"storageUrl"],[73,21,49,23],[73,24,49,26],[73,28,49,30,"URL"],[73,31,49,33],[73,32,49,34],[73,44,49,46],[73,46,49,48,"baseUrl"],[73,53,49,55],[73,54,49,56],[74,6,50,8],[74,10,50,12],[74,11,50,13,"functionsUrl"],[74,23,50,25],[74,26,50,28],[74,30,50,32,"URL"],[74,33,50,35],[74,34,50,36],[74,48,50,50],[74,50,50,52,"baseUrl"],[74,57,50,59],[74,58,50,60],[75,6,51,8],[76,6,52,8],[76,10,52,14,"defaultStorageKey"],[76,27,52,31],[76,30,52,34],[76,36,52,40,"baseUrl"],[76,43,52,47],[76,44,52,48,"hostname"],[76,52,52,56],[76,53,52,57,"split"],[76,58,52,62],[76,59,52,63],[76,62,52,66],[76,63,52,67],[76,64,52,68],[76,65,52,69],[76,66,52,70],[76,79,52,83],[77,6,53,8],[77,10,53,14,"DEFAULTS"],[77,18,53,22],[77,21,53,25],[78,8,54,12,"db"],[78,10,54,14],[78,12,54,16,"constants_1"],[78,23,54,27],[78,24,54,28,"DEFAULT_DB_OPTIONS"],[78,42,54,46],[79,8,55,12,"realtime"],[79,16,55,20],[79,18,55,22,"constants_1"],[79,29,55,33],[79,30,55,34,"DEFAULT_REALTIME_OPTIONS"],[79,54,55,58],[80,8,56,12,"auth"],[80,12,56,16],[80,14,56,18,"Object"],[80,20,56,24],[80,21,56,25,"assign"],[80,27,56,31],[80,28,56,32,"Object"],[80,34,56,38],[80,35,56,39,"assign"],[80,41,56,45],[80,42,56,46],[80,43,56,47],[80,44,56,48],[80,46,56,50,"constants_1"],[80,57,56,61],[80,58,56,62,"DEFAULT_AUTH_OPTIONS"],[80,78,56,82],[80,79,56,83],[80,81,56,85],[81,10,56,87,"storageKey"],[81,20,56,97],[81,22,56,99,"defaultStorageKey"],[82,8,56,117],[82,9,56,118],[82,10,56,119],[83,8,57,12,"global"],[83,14,57,18],[83,16,57,20,"constants_1"],[83,27,57,31],[83,28,57,32,"DEFAULT_GLOBAL_OPTIONS"],[84,6,58,8],[84,7,58,9],[85,6,59,8],[85,10,59,14,"settings"],[85,18,59,22],[85,21,59,25],[85,22,59,26],[85,23,59,27],[85,25,59,29,"helpers_1"],[85,34,59,38],[85,35,59,39,"applySettingDefaults"],[85,55,59,59],[85,57,59,61,"options"],[85,64,59,68],[85,69,59,73],[85,73,59,77],[85,77,59,81,"options"],[85,84,59,88],[85,89,59,93],[85,94,59,98],[85,95,59,99],[85,98,59,102,"options"],[85,105,59,109],[85,108,59,112],[85,109,59,113],[85,110,59,114],[85,112,59,116,"DEFAULTS"],[85,120,59,124],[85,121,59,125],[86,6,60,8],[86,10,60,12],[86,11,60,13,"storageKey"],[86,21,60,23],[86,24,60,26],[86,25,60,27,"_a"],[86,27,60,29],[86,30,60,32,"settings"],[86,38,60,40],[86,39,60,41,"auth"],[86,43,60,45],[86,44,60,46,"storageKey"],[86,54,60,56],[86,60,60,62],[86,64,60,66],[86,68,60,70,"_a"],[86,70,60,72],[86,75,60,77],[86,80,60,82],[86,81,60,83],[86,84,60,86,"_a"],[86,86,60,88],[86,89,60,91],[86,91,60,93],[87,6,61,8],[87,10,61,12],[87,11,61,13,"headers"],[87,18,61,20],[87,21,61,23],[87,22,61,24,"_b"],[87,24,61,26],[87,27,61,29,"settings"],[87,35,61,37],[87,36,61,38,"global"],[87,42,61,44],[87,43,61,45,"headers"],[87,50,61,52],[87,56,61,58],[87,60,61,62],[87,64,61,66,"_b"],[87,66,61,68],[87,71,61,73],[87,76,61,78],[87,77,61,79],[87,80,61,82,"_b"],[87,82,61,84],[87,85,61,87],[87,86,61,88],[87,87,61,89],[88,6,62,8],[88,10,62,12],[88,11,62,13,"settings"],[88,19,62,21],[88,20,62,22,"accessToken"],[88,31,62,33],[88,33,62,35],[89,8,63,12],[89,12,63,16],[89,13,63,17,"auth"],[89,17,63,21],[89,20,63,24],[89,24,63,28],[89,25,63,29,"_initSupabaseAuthClient"],[89,48,63,52],[89,49,63,53],[89,50,63,54,"_c"],[89,52,63,56],[89,55,63,59,"settings"],[89,63,63,67],[89,64,63,68,"auth"],[89,68,63,72],[89,74,63,78],[89,78,63,82],[89,82,63,86,"_c"],[89,84,63,88],[89,89,63,93],[89,94,63,98],[89,95,63,99],[89,98,63,102,"_c"],[89,100,63,104],[89,103,63,107],[89,104,63,108],[89,105,63,109],[89,107,63,111],[89,111,63,115],[89,112,63,116,"headers"],[89,119,63,123],[89,121,63,125,"settings"],[89,129,63,133],[89,130,63,134,"global"],[89,136,63,140],[89,137,63,141,"fetch"],[89,142,63,146],[89,143,63,147],[90,6,64,8],[90,7,64,9],[90,13,65,13],[91,8,66,12],[91,12,66,16],[91,13,66,17,"accessToken"],[91,24,66,28],[91,27,66,31,"settings"],[91,35,66,39],[91,36,66,40,"accessToken"],[91,47,66,51],[92,8,67,12],[92,12,67,16],[92,13,67,17,"auth"],[92,17,67,21],[92,20,67,24],[92,24,67,28,"Proxy"],[92,29,67,33],[92,30,67,34],[92,31,67,35],[92,32,67,36],[92,34,67,38],[93,10,68,16,"get"],[93,13,68,19],[93,15,68,21,"get"],[93,16,68,22,"_"],[93,17,68,23],[93,19,68,25,"prop"],[93,23,68,29],[93,28,68,34],[94,12,69,20],[94,18,69,26],[94,22,69,30,"Error"],[94,27,69,35],[94,28,69,36],[94,137,69,145,"String"],[94,143,69,151],[94,144,69,152,"prop"],[94,148,69,156],[94,149,69,157],[94,167,69,175],[94,168,69,176],[95,10,70,16],[96,8,71,12],[96,9,71,13],[96,10,71,14],[97,6,72,8],[98,6,73,8],[98,10,73,12],[98,11,73,13,"fetch"],[98,16,73,18],[98,19,73,21],[98,20,73,22],[98,21,73,23],[98,23,73,25,"fetch_1"],[98,30,73,32],[98,31,73,33,"fetchWithAuth"],[98,44,73,46],[98,46,73,48,"supabaseKey"],[98,57,73,59],[98,59,73,61],[98,63,73,65],[98,64,73,66,"_getAccessToken"],[98,79,73,81],[98,80,73,82,"bind"],[98,84,73,86],[98,85,73,87],[98,89,73,91],[98,90,73,92],[98,92,73,94,"settings"],[98,100,73,102],[98,101,73,103,"global"],[98,107,73,109],[98,108,73,110,"fetch"],[98,113,73,115],[98,114,73,116],[99,6,74,8],[99,10,74,12],[99,11,74,13,"realtime"],[99,19,74,21],[99,22,74,24],[99,26,74,28],[99,27,74,29,"_initRealtimeClient"],[99,46,74,48],[99,47,74,49,"Object"],[99,53,74,55],[99,54,74,56,"assign"],[99,60,74,62],[99,61,74,63],[100,8,74,65,"headers"],[100,15,74,72],[100,17,74,74],[100,21,74,78],[100,22,74,79,"headers"],[100,29,74,86],[101,8,74,88,"accessToken"],[101,19,74,99],[101,21,74,101],[101,25,74,105],[101,26,74,106,"_getAccessToken"],[101,41,74,121],[101,42,74,122,"bind"],[101,46,74,126],[101,47,74,127],[101,51,74,131],[102,6,74,133],[102,7,74,134],[102,9,74,136,"settings"],[102,17,74,144],[102,18,74,145,"realtime"],[102,26,74,153],[102,27,74,154],[102,28,74,155],[103,6,75,8],[103,10,75,12],[103,11,75,13,"rest"],[103,15,75,17],[103,18,75,20],[103,22,75,24,"postgrest_js_1"],[103,36,75,38],[103,37,75,39,"PostgrestClient"],[103,52,75,54],[103,53,75,55],[103,57,75,59,"URL"],[103,60,75,62],[103,61,75,63],[103,70,75,72],[103,72,75,74,"baseUrl"],[103,79,75,81],[103,80,75,82],[103,81,75,83,"href"],[103,85,75,87],[103,87,75,89],[104,8,76,12,"headers"],[104,15,76,19],[104,17,76,21],[104,21,76,25],[104,22,76,26,"headers"],[104,29,76,33],[105,8,77,12,"schema"],[105,14,77,18],[105,16,77,20,"settings"],[105,24,77,28],[105,25,77,29,"db"],[105,27,77,31],[105,28,77,32,"schema"],[105,34,77,38],[106,8,78,12,"fetch"],[106,13,78,17],[106,15,78,19],[106,19,78,23],[106,20,78,24,"fetch"],[107,6,79,8],[107,7,79,9],[107,8,79,10],[108,6,80,8],[108,10,80,12],[108,11,80,13,"storage"],[108,18,80,20],[108,21,80,23],[108,25,80,27,"storage_js_1"],[108,37,80,39],[108,38,80,40,"StorageClient"],[108,51,80,53],[108,52,80,54],[108,56,80,58],[108,57,80,59,"storageUrl"],[108,67,80,69],[108,68,80,70,"href"],[108,72,80,74],[108,74,80,76],[108,78,80,80],[108,79,80,81,"headers"],[108,86,80,88],[108,88,80,90],[108,92,80,94],[108,93,80,95,"fetch"],[108,98,80,100],[108,100,80,102,"options"],[108,107,80,109],[108,112,80,114],[108,116,80,118],[108,120,80,122,"options"],[108,127,80,129],[108,132,80,134],[108,137,80,139],[108,138,80,140],[108,141,80,143],[108,146,80,148],[108,147,80,149],[108,150,80,152,"options"],[108,157,80,159],[108,158,80,160,"storage"],[108,165,80,167],[108,166,80,168],[109,6,81,8],[109,10,81,12],[109,11,81,13,"settings"],[109,19,81,21],[109,20,81,22,"accessToken"],[109,31,81,33],[109,33,81,35],[110,8,82,12],[110,12,82,16],[110,13,82,17,"_listenForAuthEvents"],[110,33,82,37],[110,34,82,38],[110,35,82,39],[111,6,83,8],[112,4,84,4],[113,4,85,4],[114,0,86,0],[115,0,87,0],[116,4,85,4],[116,11,85,4,"_createClass"],[116,23,85,4],[116,24,85,4,"SupabaseClient"],[116,38,85,4],[117,6,85,4,"key"],[117,9,85,4],[118,6,85,4,"get"],[118,9,85,4],[118,11,88,4],[118,20,88,4,"get"],[118,21,88,4],[118,23,88,20],[119,8,89,8],[119,15,89,15],[119,19,89,19,"functions_js_1"],[119,33,89,33],[119,34,89,34,"FunctionsClient"],[119,49,89,49],[119,50,89,50],[119,54,89,54],[119,55,89,55,"functionsUrl"],[119,67,89,67],[119,68,89,68,"href"],[119,72,89,72],[119,74,89,74],[120,10,90,12,"headers"],[120,17,90,19],[120,19,90,21],[120,23,90,25],[120,24,90,26,"headers"],[120,31,90,33],[121,10,91,12,"customFetch"],[121,21,91,23],[121,23,91,25],[121,27,91,29],[121,28,91,30,"fetch"],[122,8,92,8],[122,9,92,9],[122,10,92,10],[123,6,93,4],[124,6,94,4],[125,0,95,0],[126,0,96,0],[127,0,97,0],[128,0,98,0],[129,4,94,4],[130,6,94,4,"key"],[130,9,94,4],[131,6,94,4,"value"],[131,11,94,4],[131,13,99,4],[131,22,99,4,"from"],[131,26,99,8,"from"],[131,27,99,9,"relation"],[131,35,99,17],[131,37,99,19],[132,8,100,8],[132,15,100,15],[132,19,100,19],[132,20,100,20,"rest"],[132,24,100,24],[132,25,100,25,"from"],[132,29,100,29],[132,30,100,30,"relation"],[132,38,100,38],[132,39,100,39],[133,6,101,4],[134,6,102,4],[135,6,103,4],[136,0,104,0],[137,0,105,0],[138,0,106,0],[139,0,107,0],[140,0,108,0],[141,0,109,0],[142,4,103,4],[143,6,103,4,"key"],[143,9,103,4],[144,6,103,4,"value"],[144,11,103,4],[144,13,110,4],[144,22,110,4,"schema"],[144,28,110,10,"schema"],[144,29,110,11,"schema"],[144,36,110,17],[144,38,110,19],[145,8,111,8],[145,15,111,15],[145,19,111,19],[145,20,111,20,"rest"],[145,24,111,24],[145,25,111,25,"schema"],[145,31,111,31],[145,32,111,32,"schema"],[145,39,111,38],[145,40,111,39],[146,6,112,4],[147,6,113,4],[148,6,114,4],[149,0,115,0],[150,0,116,0],[151,0,117,0],[152,0,118,0],[153,0,119,0],[154,0,120,0],[155,0,121,0],[156,0,122,0],[157,0,123,0],[158,0,124,0],[159,0,125,0],[160,0,126,0],[161,0,127,0],[162,0,128,0],[163,0,129,0],[164,0,130,0],[165,0,131,0],[166,0,132,0],[167,0,133,0],[168,0,134,0],[169,0,135,0],[170,0,136,0],[171,4,114,4],[172,6,114,4,"key"],[172,9,114,4],[173,6,114,4,"value"],[173,11,114,4],[173,13,137,4],[173,22,137,4,"rpc"],[173,25,137,7,"rpc"],[173,26,137,8,"fn"],[173,28,137,10],[173,30,137,37],[174,8,137,37],[174,12,137,12,"args"],[174,16,137,16],[174,19,137,16,"arguments"],[174,28,137,16],[174,29,137,16,"length"],[174,35,137,16],[174,43,137,16,"arguments"],[174,52,137,16],[174,60,137,16,"undefined"],[174,69,137,16],[174,72,137,16,"arguments"],[174,81,137,16],[174,87,137,19],[174,88,137,20],[174,89,137,21],[175,8,137,21],[175,12,137,23,"options"],[175,19,137,30],[175,22,137,30,"arguments"],[175,31,137,30],[175,32,137,30,"length"],[175,38,137,30],[175,46,137,30,"arguments"],[175,55,137,30],[175,63,137,30,"undefined"],[175,72,137,30],[175,75,137,30,"arguments"],[175,84,137,30],[175,90,137,33],[175,91,137,34],[175,92,137,35],[176,8,138,8],[176,15,138,15],[176,19,138,19],[176,20,138,20,"rest"],[176,24,138,24],[176,25,138,25,"rpc"],[176,28,138,28],[176,29,138,29,"fn"],[176,31,138,31],[176,33,138,33,"args"],[176,37,138,37],[176,39,138,39,"options"],[176,46,138,46],[176,47,138,47],[177,6,139,4],[178,6,140,4],[179,0,141,0],[180,0,142,0],[181,0,143,0],[182,0,144,0],[183,0,145,0],[184,0,146,0],[185,4,140,4],[186,6,140,4,"key"],[186,9,140,4],[187,6,140,4,"value"],[187,11,140,4],[187,13,147,4],[187,22,147,4,"channel"],[187,29,147,11,"channel"],[187,30,147,12,"name"],[187,34,147,16],[187,36,147,41],[188,8,147,41],[188,12,147,18,"opts"],[188,16,147,22],[188,19,147,22,"arguments"],[188,28,147,22],[188,29,147,22,"length"],[188,35,147,22],[188,43,147,22,"arguments"],[188,52,147,22],[188,60,147,22,"undefined"],[188,69,147,22],[188,72,147,22,"arguments"],[188,81,147,22],[188,87,147,25],[189,10,147,27,"config"],[189,16,147,33],[189,18,147,35],[189,19,147,36],[190,8,147,38],[190,9,147,39],[191,8,148,8],[191,15,148,15],[191,19,148,19],[191,20,148,20,"realtime"],[191,28,148,28],[191,29,148,29,"channel"],[191,36,148,36],[191,37,148,37,"name"],[191,41,148,41],[191,43,148,43,"opts"],[191,47,148,47],[191,48,148,48],[192,6,149,4],[193,6,150,4],[194,0,151,0],[195,0,152,0],[196,4,150,4],[197,6,150,4,"key"],[197,9,150,4],[198,6,150,4,"value"],[198,11,150,4],[198,13,153,4],[198,22,153,4,"getChannels"],[198,33,153,15,"getChannels"],[198,34,153,15],[198,36,153,18],[199,8,154,8],[199,15,154,15],[199,19,154,19],[199,20,154,20,"realtime"],[199,28,154,28],[199,29,154,29,"getChannels"],[199,40,154,40],[199,41,154,41],[199,42,154,42],[200,6,155,4],[201,6,156,4],[202,0,157,0],[203,0,158,0],[204,0,159,0],[205,0,160,0],[206,0,161,0],[207,4,156,4],[208,6,156,4,"key"],[208,9,156,4],[209,6,156,4,"value"],[209,11,156,4],[209,13,162,4],[209,22,162,4,"removeChannel"],[209,35,162,17,"removeChannel"],[209,36,162,18,"channel"],[209,43,162,25],[209,45,162,27],[210,8,163,8],[210,15,163,15],[210,19,163,19],[210,20,163,20,"realtime"],[210,28,163,28],[210,29,163,29,"removeChannel"],[210,42,163,42],[210,43,163,43,"channel"],[210,50,163,50],[210,51,163,51],[211,6,164,4],[212,6,165,4],[213,0,166,0],[214,0,167,0],[215,4,165,4],[216,6,165,4,"key"],[216,9,165,4],[217,6,165,4,"value"],[217,11,165,4],[217,13,168,4],[217,22,168,4,"removeAllChannels"],[217,39,168,21,"removeAllChannels"],[217,40,168,21],[217,42,168,24],[218,8,169,8],[218,15,169,15],[218,19,169,19],[218,20,169,20,"realtime"],[218,28,169,28],[218,29,169,29,"removeAllChannels"],[218,46,169,46],[218,47,169,47],[218,48,169,48],[219,6,170,4],[220,4,170,5],[221,6,170,5,"key"],[221,9,170,5],[222,6,170,5,"value"],[222,11,170,5],[222,13,171,4],[222,22,171,4,"_getAccessToken"],[222,37,171,19,"_getAccessToken"],[222,38,171,19],[222,40,171,22],[223,8,172,8],[223,12,172,12,"_a"],[223,14,172,14],[223,16,172,16,"_b"],[223,18,172,18],[224,8,173,8],[224,15,173,15,"__awaiter"],[224,24,173,24],[224,25,173,25],[224,29,173,29],[224,31,173,31],[224,36,173,36],[224,37,173,37],[224,39,173,39],[224,44,173,44],[224,45,173,45],[224,47,173,47],[224,60,173,60],[225,10,174,12],[225,14,174,16],[225,18,174,20],[225,19,174,21,"accessToken"],[225,30,174,32],[225,32,174,34],[226,12,175,16],[226,19,175,23],[226,25,175,29],[226,29,175,33],[226,30,175,34,"accessToken"],[226,41,175,45],[226,42,175,46],[226,43,175,47],[227,10,176,12],[228,10,177,12],[228,14,177,12,"_yield$this$auth$getS"],[228,35,177,12],[228,38,177,29],[228,44,177,35],[228,48,177,39],[228,49,177,40,"auth"],[228,53,177,44],[228,54,177,45,"getSession"],[228,64,177,55],[228,65,177,56],[228,66,177,57],[229,12,177,20,"data"],[229,16,177,24],[229,19,177,24,"_yield$this$auth$getS"],[229,40,177,24],[229,41,177,20,"data"],[229,45,177,24],[230,10,178,12],[230,17,178,19],[230,18,178,20,"_b"],[230,20,178,22],[230,23,178,25],[230,24,178,26,"_a"],[230,26,178,28],[230,29,178,31,"data"],[230,33,178,35],[230,34,178,36,"session"],[230,41,178,43],[230,47,178,49],[230,51,178,53],[230,55,178,57,"_a"],[230,57,178,59],[230,62,178,64],[230,67,178,69],[230,68,178,70],[230,71,178,73],[230,76,178,78],[230,77,178,79],[230,80,178,82,"_a"],[230,82,178,84],[230,83,178,85,"access_token"],[230,95,178,97],[230,101,178,103],[230,105,178,107],[230,109,178,111,"_b"],[230,111,178,113],[230,116,178,118],[230,121,178,123],[230,122,178,124],[230,125,178,127,"_b"],[230,127,178,129],[230,130,178,132],[230,134,178,136],[230,135,178,137,"supabaseKey"],[230,146,178,148],[231,8,179,8],[231,9,179,9],[231,10,179,10],[232,6,180,4],[233,4,180,5],[234,6,180,5,"key"],[234,9,180,5],[235,6,180,5,"value"],[235,11,180,5],[235,13,181,4],[235,22,181,4,"_initSupabaseAuthClient"],[235,45,181,27,"_initSupabaseAuthClient"],[235,46,181,27,"_ref"],[235,50,181,27],[235,52,181,144,"headers"],[235,59,181,151],[235,61,181,153,"fetch"],[235,66,181,158],[235,68,181,160],[236,8,181,160],[236,12,181,30,"autoRefreshToken"],[236,28,181,46],[236,31,181,46,"_ref"],[236,35,181,46],[236,36,181,30,"autoRefreshToken"],[236,52,181,46],[237,10,181,48,"persistSession"],[237,24,181,62],[237,27,181,62,"_ref"],[237,31,181,62],[237,32,181,48,"persistSession"],[237,46,181,62],[238,10,181,64,"detectSessionInUrl"],[238,28,181,82],[238,31,181,82,"_ref"],[238,35,181,82],[238,36,181,64,"detectSessionInUrl"],[238,54,181,82],[239,10,181,84,"storage"],[239,17,181,91],[239,20,181,91,"_ref"],[239,24,181,91],[239,25,181,84,"storage"],[239,32,181,91],[240,10,181,93,"userStorage"],[240,21,181,104],[240,24,181,104,"_ref"],[240,28,181,104],[240,29,181,93,"userStorage"],[240,40,181,104],[241,10,181,106,"storageKey"],[241,20,181,116],[241,23,181,116,"_ref"],[241,27,181,116],[241,28,181,106,"storageKey"],[241,38,181,116],[242,10,181,118,"flowType"],[242,18,181,126],[242,21,181,126,"_ref"],[242,25,181,126],[242,26,181,118,"flowType"],[242,34,181,126],[243,10,181,128,"lock"],[243,14,181,132],[243,17,181,132,"_ref"],[243,21,181,132],[243,22,181,128,"lock"],[243,26,181,132],[244,10,181,134,"debug"],[244,15,181,139],[244,18,181,139,"_ref"],[244,22,181,139],[244,23,181,134,"debug"],[244,28,181,139],[245,8,182,8],[245,12,182,14,"authHeaders"],[245,23,182,25],[245,26,182,28],[246,10,183,12,"Authorization"],[246,23,183,25],[246,25,183,27],[246,35,183,37],[246,39,183,41],[246,40,183,42,"supabaseKey"],[246,51,183,53],[246,53,183,55],[247,10,184,12,"apikey"],[247,16,184,18],[247,18,184,20],[247,21,184,23],[247,25,184,27],[247,26,184,28,"supabaseKey"],[247,37,184,39],[248,8,185,8],[248,9,185,9],[249,8,186,8],[249,15,186,15],[249,19,186,19,"SupabaseAuthClient_1"],[249,39,186,39],[249,40,186,40,"SupabaseAuthClient"],[249,58,186,58],[249,59,186,59],[250,10,187,12,"url"],[250,13,187,15],[250,15,187,17],[250,19,187,21],[250,20,187,22,"authUrl"],[250,27,187,29],[250,28,187,30,"href"],[250,32,187,34],[251,10,188,12,"headers"],[251,17,188,19],[251,19,188,21,"Object"],[251,25,188,27],[251,26,188,28,"assign"],[251,32,188,34],[251,33,188,35,"Object"],[251,39,188,41],[251,40,188,42,"assign"],[251,46,188,48],[251,47,188,49],[251,48,188,50],[251,49,188,51],[251,51,188,53,"authHeaders"],[251,62,188,64],[251,63,188,65],[251,65,188,67,"headers"],[251,72,188,74],[251,73,188,75],[252,10,189,12,"storageKey"],[252,20,189,22],[252,22,189,24,"storageKey"],[252,32,189,34],[253,10,190,12,"autoRefreshToken"],[253,26,190,28],[254,10,191,12,"persistSession"],[254,24,191,26],[255,10,192,12,"detectSessionInUrl"],[255,28,192,30],[256,10,193,12,"storage"],[256,17,193,19],[257,10,194,12,"userStorage"],[257,21,194,23],[258,10,195,12,"flowType"],[258,18,195,20],[259,10,196,12,"lock"],[259,14,196,16],[260,10,197,12,"debug"],[260,15,197,17],[261,10,198,12,"fetch"],[261,15,198,17],[262,10,199,12],[263,10,200,12],[264,10,201,12,"hasCustomAuthorizationHeader"],[264,38,201,40],[264,40,201,42,"Object"],[264,46,201,48],[264,47,201,49,"keys"],[264,51,201,53],[264,52,201,54],[264,56,201,58],[264,57,201,59,"headers"],[264,64,201,66],[264,65,201,67],[264,66,201,68,"some"],[264,70,201,72],[264,71,201,74,"key"],[264,74,201,77],[264,78,201,82,"key"],[264,81,201,85],[264,82,201,86,"toLowerCase"],[264,93,201,97],[264,94,201,98],[264,95,201,99],[264,100,201,104],[264,115,201,119],[265,8,202,8],[265,9,202,9],[265,10,202,10],[266,6,203,4],[267,4,203,5],[268,6,203,5,"key"],[268,9,203,5],[269,6,203,5,"value"],[269,11,203,5],[269,13,204,4],[269,22,204,4,"_initRealtimeClient"],[269,41,204,23,"_initRealtimeClient"],[269,42,204,24,"options"],[269,49,204,31],[269,51,204,33],[270,8,205,8],[270,15,205,15],[270,19,205,19,"realtime_js_1"],[270,32,205,32],[270,33,205,33,"RealtimeClient"],[270,47,205,47],[270,48,205,48],[270,52,205,52],[270,53,205,53,"realtimeUrl"],[270,64,205,64],[270,65,205,65,"href"],[270,69,205,69],[270,71,205,71,"Object"],[270,77,205,77],[270,78,205,78,"assign"],[270,84,205,84],[270,85,205,85,"Object"],[270,91,205,91],[270,92,205,92,"assign"],[270,98,205,98],[270,99,205,99],[270,100,205,100],[270,101,205,101],[270,103,205,103,"options"],[270,110,205,110],[270,111,205,111],[270,113,205,113],[271,10,205,115,"params"],[271,16,205,121],[271,18,205,123,"Object"],[271,24,205,129],[271,25,205,130,"assign"],[271,31,205,136],[271,32,205,137],[272,12,205,139,"apikey"],[272,18,205,145],[272,20,205,147],[272,24,205,151],[272,25,205,152,"supabaseKey"],[273,10,205,164],[273,11,205,165],[273,13,205,167,"options"],[273,20,205,174],[273,25,205,179],[273,29,205,183],[273,33,205,187,"options"],[273,40,205,194],[273,45,205,199],[273,50,205,204],[273,51,205,205],[273,54,205,208],[273,59,205,213],[273,60,205,214],[273,63,205,217,"options"],[273,70,205,224],[273,71,205,225,"params"],[273,77,205,231],[274,8,205,233],[274,9,205,234],[274,10,205,235],[274,11,205,236],[275,6,206,4],[276,4,206,5],[277,6,206,5,"key"],[277,9,206,5],[278,6,206,5,"value"],[278,11,206,5],[278,13,207,4],[278,22,207,4,"_listenForAuthEvents"],[278,42,207,24,"_listenForAuthEvents"],[278,43,207,24],[278,45,207,27],[279,8,208,8],[279,12,208,12,"data"],[279,16,208,16],[279,19,208,19],[279,23,208,23],[279,24,208,24,"auth"],[279,28,208,28],[279,29,208,29,"onAuthStateChange"],[279,46,208,46],[279,47,208,47],[279,48,208,48,"event"],[279,53,208,53],[279,55,208,55,"session"],[279,62,208,62],[279,67,208,67],[280,10,209,12],[280,14,209,16],[280,15,209,17,"_handleTokenChanged"],[280,34,209,36],[280,35,209,37,"event"],[280,40,209,42],[280,42,209,44],[280,50,209,52],[280,52,209,54,"session"],[280,59,209,61],[280,64,209,66],[280,68,209,70],[280,72,209,74,"session"],[280,79,209,81],[280,84,209,86],[280,89,209,91],[280,90,209,92],[280,93,209,95],[280,98,209,100],[280,99,209,101],[280,102,209,104,"session"],[280,109,209,111],[280,110,209,112,"access_token"],[280,122,209,124],[280,123,209,125],[281,8,210,8],[281,9,210,9],[281,10,210,10],[282,8,211,8],[282,15,211,15,"data"],[282,19,211,19],[283,6,212,4],[284,4,212,5],[285,6,212,5,"key"],[285,9,212,5],[286,6,212,5,"value"],[286,11,212,5],[286,13,213,4],[286,22,213,4,"_handleTokenChanged"],[286,41,213,23,"_handleTokenChanged"],[286,42,213,24,"event"],[286,47,213,29],[286,49,213,31,"source"],[286,55,213,37],[286,57,213,39,"token"],[286,62,213,44],[286,64,213,46],[287,8,214,8],[287,12,214,12],[287,13,214,13,"event"],[287,18,214,18],[287,23,214,23],[287,40,214,40],[287,44,214,44,"event"],[287,49,214,49],[287,54,214,54],[287,65,214,65],[287,70,215,12],[287,74,215,16],[287,75,215,17,"changedAccessToken"],[287,93,215,35],[287,98,215,40,"token"],[287,103,215,45],[287,105,215,47],[288,10,216,12],[288,14,216,16],[288,15,216,17,"changedAccessToken"],[288,33,216,35],[288,36,216,38,"token"],[288,41,216,43],[289,10,217,12],[289,14,217,16],[289,15,217,17,"realtime"],[289,23,217,25],[289,24,217,26,"setAuth"],[289,31,217,33],[289,32,217,34,"token"],[289,37,217,39],[289,38,217,40],[290,8,218,8],[290,9,218,9],[290,15,219,13],[290,19,219,17,"event"],[290,24,219,22],[290,29,219,27],[290,41,219,39],[290,43,219,41],[291,10,220,12],[291,14,220,16],[291,15,220,17,"realtime"],[291,23,220,25],[291,24,220,26,"setAuth"],[291,31,220,33],[291,32,220,34],[291,33,220,35],[292,10,221,12],[292,14,221,16,"source"],[292,20,221,22],[292,24,221,26],[292,33,221,35],[292,35,222,16],[292,39,222,20],[292,40,222,21,"auth"],[292,44,222,25],[292,45,222,26,"signOut"],[292,52,222,33],[292,53,222,34],[292,54,222,35],[293,10,223,12],[293,14,223,16],[293,15,223,17,"changedAccessToken"],[293,33,223,35],[293,36,223,38,"undefined"],[293,45,223,47],[294,8,224,8],[295,6,225,4],[296,4,225,5],[297,2,225,5],[298,2,227,0,"exports"],[298,9,227,7],[298,10,227,8,"default"],[298,17,227,15],[298,20,227,18,"SupabaseClient"],[298,34,227,32],[299,0,227,33],[299,3]],"functionMap":{"names":["<global>","<anonymous>","adopt","P$argument_0","fulfilled","rejected","step","SupabaseClient","constructor","Proxy$argument_1.get","get__functions","from","schema","rpc","channel","getChannels","removeChannel","removeAllChannels","_getAccessToken","__awaiter$argument_3","_initSupabaseAuthClient","Object.keys.some$argument_0","_initRealtimeClient","_listenForAuthEvents","auth.onAuthStateChange$argument_0","_handleTokenChanged"],"mappings":"AAA;4CCC;ICC,kEC,sCD,ID;QGE,2FH;QIC,8FJ;QKC,8GL;CDG;AOe;ICc;qBC6B;iBDE;KDc;IGI;KHK;IIM;KJE;IKS;KLE;IMyB;KNE;IOQ;KPE;IQI;KRE;ISO;KTE;IUI;KVE;IWC;+CCE;SDM;KXC;IaC;yECoB,8CD;KbE;IeC;KfE;IgBC;+CCC;SDE;KhBE;IkBC;KlBY;CPC"},"hasCjsExports":true},"type":"js/module"}]}