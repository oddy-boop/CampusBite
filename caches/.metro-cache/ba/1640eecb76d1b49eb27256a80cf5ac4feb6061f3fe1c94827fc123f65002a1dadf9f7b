{"dependencies":[{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"serialize-error","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":27,"index":27},"end":{"line":1,"column":53,"index":53}}],"key":"dErfiWXR+CP+qESyY7I2E6ODPPw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _env = require(_dependencyMap[0], \"expo/virtual/env\").env;\n  var _asyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\").default;\n  var _require = require(_dependencyMap[2], \"serialize-error\"),\n    serializeError = _require.serializeError;\n  var reportErrorToRemote = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var error = _ref.error;\n      if (!_env.EXPO_PUBLIC_LOGS_ENDPOINT || !_env.EXPO_PUBLIC_PROJECT_GROUP_ID || !_env.EXPO_PUBLIC_CREATE_TEMP_API_KEY) {\n        console.debug('reportErrorToRemote: Missing environment variables for logging endpoint, project group ID, or API key.', error);\n        return {\n          success: false\n        };\n      }\n      try {\n        yield fetch(_env.EXPO_PUBLIC_LOGS_ENDPOINT, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${_env.EXPO_PUBLIC_CREATE_TEMP_API_KEY}`\n          },\n          body: JSON.stringify({\n            projectGroupId: _env.EXPO_PUBLIC_PROJECT_GROUP_ID,\n            logs: [{\n              message: JSON.stringify(serializeError(error)),\n              timestamp: new Date().toISOString(),\n              level: 'error'\n            }]\n          })\n        });\n      } catch (fetchError) {\n        return {\n          success: false,\n          error: fetchError\n        };\n      }\n      return {\n        success: true\n      };\n    });\n    return function reportErrorToRemote(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  module.exports = {\n    reportErrorToRemote\n  };\n});","lineCount":48,"map":[[4,2,1,0],[4,6,1,0,"_require"],[4,14,1,0],[4,17,1,27,"require"],[4,24,1,34],[4,25,1,34,"_dependencyMap"],[4,39,1,34],[4,61,1,52],[4,62,1,53],[5,4,1,8,"serializeError"],[5,18,1,22],[5,21,1,22,"_require"],[5,29,1,22],[5,30,1,8,"serializeError"],[5,44,1,22],[6,2,3,0],[6,6,3,6,"reportErrorToRemote"],[6,25,3,25],[7,4,3,25],[7,8,3,25,"_ref2"],[7,13,3,25],[7,16,3,25,"_asyncToGenerator"],[7,33,3,25],[7,34,3,28],[7,45,3,28,"_ref"],[7,49,3,28],[7,51,3,49],[8,6,3,49],[8,10,3,37,"error"],[8,15,3,42],[8,18,3,42,"_ref"],[8,22,3,42],[8,23,3,37,"error"],[8,28,3,42],[9,6,4,2],[9,10,5,4],[9,11,5,4,"_env"],[9,15,5,4],[9,16,5,4,"EXPO_PUBLIC_LOGS_ENDPOINT"],[9,41,5,42],[9,45,6,4],[9,46,6,4,"_env"],[9,50,6,4],[9,51,6,4,"EXPO_PUBLIC_PROJECT_GROUP_ID"],[9,79,6,45],[9,83,7,4],[9,84,7,4,"_env"],[9,88,7,4],[9,89,7,4,"EXPO_PUBLIC_CREATE_TEMP_API_KEY"],[9,120,7,48],[9,122,8,4],[10,8,9,4,"console"],[10,15,9,11],[10,16,9,12,"debug"],[10,21,9,17],[10,22,10,6],[10,126,10,110],[10,128,11,6,"error"],[10,133,12,4],[10,134,12,5],[11,8,13,4],[11,15,13,11],[12,10,13,13,"success"],[12,17,13,20],[12,19,13,22],[13,8,13,28],[13,9,13,29],[14,6,14,2],[15,6,15,2],[15,10,15,6],[16,8,16,4],[16,14,16,10,"fetch"],[16,19,16,15],[16,20,16,15,"_env"],[16,24,16,15],[16,25,16,15,"EXPO_PUBLIC_LOGS_ENDPOINT"],[16,50,16,15],[16,52,16,55],[17,10,17,6,"method"],[17,16,17,12],[17,18,17,14],[17,24,17,20],[18,10,18,6,"headers"],[18,17,18,13],[18,19,18,15],[19,12,19,8],[19,26,19,22],[19,28,19,24],[19,46,19,42],[20,12,20,8,"Authorization"],[20,25,20,21],[20,27,20,23],[20,37,20,23,"_env"],[20,41,20,23],[20,42,20,23,"EXPO_PUBLIC_CREATE_TEMP_API_KEY"],[20,73,20,23],[21,10,21,6],[21,11,21,7],[22,10,22,6,"body"],[22,14,22,10],[22,16,22,12,"JSON"],[22,20,22,16],[22,21,22,17,"stringify"],[22,30,22,26],[22,31,22,27],[23,12,23,8,"projectGroupId"],[23,26,23,22],[23,28,23,22,"_env"],[23,32,23,22],[23,33,23,22,"EXPO_PUBLIC_PROJECT_GROUP_ID"],[23,61,23,64],[24,12,24,8,"logs"],[24,16,24,12],[24,18,24,14],[24,19,25,10],[25,14,26,12,"message"],[25,21,26,19],[25,23,26,21,"JSON"],[25,27,26,25],[25,28,26,26,"stringify"],[25,37,26,35],[25,38,26,36,"serializeError"],[25,52,26,50],[25,53,26,51,"error"],[25,58,26,56],[25,59,26,57],[25,60,26,58],[26,14,27,12,"timestamp"],[26,23,27,21],[26,25,27,23],[26,29,27,27,"Date"],[26,33,27,31],[26,34,27,32],[26,35,27,33],[26,36,27,34,"toISOString"],[26,47,27,45],[26,48,27,46],[26,49,27,47],[27,14,28,12,"level"],[27,19,28,17],[27,21,28,19],[28,12,29,10],[28,13,29,11],[29,10,31,6],[29,11,31,7],[30,8,32,4],[30,9,32,5],[30,10,32,6],[31,6,33,2],[31,7,33,3],[31,8,33,4],[31,15,33,11,"fetchError"],[31,25,33,21],[31,27,33,23],[32,8,34,4],[32,15,34,11],[33,10,34,13,"success"],[33,17,34,20],[33,19,34,22],[33,24,34,27],[34,10,34,29,"error"],[34,15,34,34],[34,17,34,36,"fetchError"],[35,8,34,47],[35,9,34,48],[36,6,35,2],[37,6,36,2],[37,13,36,9],[38,8,36,11,"success"],[38,15,36,18],[38,17,36,20],[39,6,36,25],[39,7,36,26],[40,4,37,0],[40,5,37,1],[41,4,37,1],[41,20,3,6,"reportErrorToRemote"],[41,39,3,25,"reportErrorToRemote"],[41,40,3,25,"_x"],[41,42,3,25],[42,6,3,25],[42,13,3,25,"_ref2"],[42,18,3,25],[42,19,3,25,"apply"],[42,24,3,25],[42,31,3,25,"arguments"],[42,40,3,25],[43,4,3,25],[44,2,3,25],[44,5,37,1],[45,2,39,0,"module"],[45,8,39,6],[45,9,39,7,"exports"],[45,16,39,14],[45,19,39,17],[46,4,39,19,"reportErrorToRemote"],[47,2,39,39],[47,3,39,40],[48,0,39,41],[48,3]],"functionMap":{"names":["<global>","reportErrorToRemote"],"mappings":"AAA;4BCE;CDkC"},"hasCjsExports":true},"type":"js/module"}]}