{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@/lib/supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":42,"index":42}}],"key":"KSAjB91cgWz7DQuLWke0G0l9TgA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _libSupabase = require(_dependencyMap[1], \"@/lib/supabase\");\n  /**\r\n   * Simple notification service for client-side usage.\r\n   * - getUnread(userId) -> fetch unread notifications\r\n   * - markAsRead(notificationId) -> set is_read=true\r\n   * - subscribe(userId, onInsert) -> subscribe to new notifications for userId\r\n   */\n\n  var notificationService = {\n    getUnread(userId) {\n      return (0, _asyncToGenerator.default)(function* () {\n        if (!userId) return {\n          data: [],\n          error: null\n        };\n        try {\n          var _yield$supabase$from$ = yield _libSupabase.supabase.from('notifications').select('*').eq('user_id', userId).eq('is_read', false).order('created_at', {\n              ascending: false\n            }),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          return {\n            data,\n            error\n          };\n        } catch (error) {\n          console.error('[notificationService] getUnread error', error);\n          return {\n            data: null,\n            error\n          };\n        }\n      })();\n    },\n    markAsRead(notificationId) {\n      return (0, _asyncToGenerator.default)(function* () {\n        try {\n          var _yield$supabase$from$2 = yield _libSupabase.supabase.from('notifications').update({\n              is_read: true\n            }).eq('id', notificationId).select().single(),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          return {\n            data,\n            error\n          };\n        } catch (error) {\n          console.error('[notificationService] markAsRead error', error);\n          return {\n            data: null,\n            error\n          };\n        }\n      })();\n    },\n    /**\r\n     * Subscribe to new notifications for the given userId.\r\n     * onInsert receives the new notification row.\r\n     * Returns an object { unsubscribe }.\r\n     */\n    subscribe(userId, onInsert) {\n      if (!userId || typeof onInsert !== 'function') return {\n        unsubscribe: () => {}\n      };\n\n      // Prefer the v2 channel API if available\n      try {\n        if (typeof _libSupabase.supabase.channel === 'function') {\n          var chan = _libSupabase.supabase.channel(`notifications_user_${userId}`).on('postgres_changes', {\n            event: 'INSERT',\n            schema: 'public',\n            table: 'notifications',\n            filter: `user_id=eq.${userId}`\n          }, payload => {\n            try {\n              onInsert(payload?.new || payload?.record || payload);\n            } catch (e) {\n              console.warn('[notificationService] subscribe callback error', e);\n            }\n          }).subscribe();\n          return {\n            unsubscribe: () => {\n              try {\n                chan.unsubscribe();\n              } catch (e) {\n                try {\n                  _libSupabase.supabase.removeChannel?.(chan);\n                } catch (e2) {}\n              }\n            }\n          };\n        }\n      } catch (e) {\n        console.warn('[notificationService] realtime v2 subscription attempt failed', e);\n      }\n\n      // Fallback to v1 style subscription\n      try {\n        var sub = _libSupabase.supabase.from(`notifications:user_id=eq.${userId}`).on('INSERT', payload => {\n          try {\n            onInsert(payload?.new || payload?.record || payload);\n          } catch (e) {\n            console.warn('[notificationService] subscribe callback error', e);\n          }\n        }).subscribe();\n        return {\n          unsubscribe: () => {\n            try {\n              sub.unsubscribe?.();\n            } catch (e) {\n              try {\n                _libSupabase.supabase.removeSubscription?.(sub);\n              } catch (e2) {}\n            }\n          }\n        };\n      } catch (e) {\n        console.warn('[notificationService] realtime subscription not available', e);\n        return {\n          unsubscribe: () => {}\n        };\n      }\n    }\n  };\n  var _default = notificationService;\n});","lineCount":145,"map":[[12,2,93,0,"Object"],[12,8,93,0],[12,9,93,0,"defineProperty"],[12,23,93,0],[12,24,93,0,"exports"],[12,31,93,0],[13,4,93,0,"enumerable"],[13,14,93,0],[14,4,93,0,"get"],[14,7,93,0],[14,18,93,0,"get"],[14,19,93,0],[15,6,93,0],[15,13,93,0,"_default"],[15,21,93,0],[16,4,93,0],[17,2,93,0],[18,2,93,35],[18,6,93,35,"_babelRuntimeHelpersAsyncToGenerator"],[18,42,93,35],[18,45,93,35,"require"],[18,52,93,35],[18,53,93,35,"_dependencyMap"],[18,67,93,35],[19,2,93,35],[19,6,93,35,"_asyncToGenerator"],[19,23,93,35],[19,26,93,35,"_interopDefault"],[19,41,93,35],[19,42,93,35,"_babelRuntimeHelpersAsyncToGenerator"],[19,78,93,35],[20,2,1,0],[20,6,1,0,"_libSupabase"],[20,18,1,0],[20,21,1,0,"require"],[20,28,1,0],[20,29,1,0,"_dependencyMap"],[20,43,1,0],[21,2,3,0],[22,0,4,0],[23,0,5,0],[24,0,6,0],[25,0,7,0],[26,0,8,0],[28,2,10,0],[28,6,10,6,"notificationService"],[28,25,10,25],[28,28,10,28],[29,4,11,8,"getUnread"],[29,13,11,17,"getUnread"],[29,14,11,18,"userId"],[29,20,11,24],[29,22,11,26],[30,6,11,26],[30,17,11,26,"_asyncToGenerator"],[30,34,11,26],[30,35,11,26,"default"],[30,42,11,26],[31,8,12,4],[31,12,12,8],[31,13,12,9,"userId"],[31,19,12,15],[31,21,12,17],[31,28,12,24],[32,10,12,26,"data"],[32,14,12,30],[32,16,12,32],[32,18,12,34],[33,10,12,36,"error"],[33,15,12,41],[33,17,12,43],[34,8,12,48],[34,9,12,49],[35,8,13,4],[35,12,13,8],[36,10,14,6],[36,14,14,6,"_yield$supabase$from$"],[36,35,14,6],[36,44,14,36,"supabase"],[36,56,14,44],[36,57,14,44,"supabase"],[36,65,14,44],[36,66,15,9,"from"],[36,70,15,13],[36,71,15,14],[36,86,15,29],[36,87,15,30],[36,88,16,9,"select"],[36,94,16,15],[36,95,16,16],[36,98,16,19],[36,99,16,20],[36,100,17,9,"eq"],[36,102,17,11],[36,103,17,12],[36,112,17,21],[36,114,17,23,"userId"],[36,120,17,29],[36,121,17,30],[36,122,18,9,"eq"],[36,124,18,11],[36,125,18,12],[36,134,18,21],[36,136,18,23],[36,141,18,28],[36,142,18,29],[36,143,19,9,"order"],[36,148,19,14],[36,149,19,15],[36,161,19,27],[36,163,19,29],[37,14,19,31,"ascending"],[37,23,19,40],[37,25,19,42],[38,12,19,48],[38,13,19,49],[38,14,19,50],[39,12,14,14,"data"],[39,16,14,18],[39,19,14,18,"_yield$supabase$from$"],[39,40,14,18],[39,41,14,14,"data"],[39,45,14,18],[40,12,14,20,"error"],[40,17,14,25],[40,20,14,25,"_yield$supabase$from$"],[40,41,14,25],[40,42,14,20,"error"],[40,47,14,25],[41,10,20,6],[41,17,20,13],[42,12,20,15,"data"],[42,16,20,19],[43,12,20,21,"error"],[44,10,20,27],[44,11,20,28],[45,8,21,4],[45,9,21,5],[45,10,21,6],[45,17,21,13,"error"],[45,22,21,18],[45,24,21,20],[46,10,22,6,"console"],[46,17,22,13],[46,18,22,14,"error"],[46,23,22,19],[46,24,22,20],[46,63,22,59],[46,65,22,61,"error"],[46,70,22,66],[46,71,22,67],[47,10,23,6],[47,17,23,13],[48,12,23,15,"data"],[48,16,23,19],[48,18,23,21],[48,22,23,25],[49,12,23,27,"error"],[50,10,23,33],[50,11,23,34],[51,8,24,4],[52,6,24,5],[53,4,25,2],[53,5,25,3],[54,4,27,8,"markAsRead"],[54,14,27,18,"markAsRead"],[54,15,27,19,"notificationId"],[54,29,27,33],[54,31,27,35],[55,6,27,35],[55,17,27,35,"_asyncToGenerator"],[55,34,27,35],[55,35,27,35,"default"],[55,42,27,35],[56,8,28,4],[56,12,28,8],[57,10,29,6],[57,14,29,6,"_yield$supabase$from$2"],[57,36,29,6],[57,45,29,36,"supabase"],[57,57,29,44],[57,58,29,44,"supabase"],[57,66,29,44],[57,67,30,9,"from"],[57,71,30,13],[57,72,30,14],[57,87,30,29],[57,88,30,30],[57,89,31,9,"update"],[57,95,31,15],[57,96,31,16],[58,14,31,18,"is_read"],[58,21,31,25],[58,23,31,27],[59,12,31,32],[59,13,31,33],[59,14,31,34],[59,15,32,9,"eq"],[59,17,32,11],[59,18,32,12],[59,22,32,16],[59,24,32,18,"notificationId"],[59,38,32,32],[59,39,32,33],[59,40,33,9,"select"],[59,46,33,15],[59,47,33,16],[59,48,33,17],[59,49,34,9,"single"],[59,55,34,15],[59,56,34,16],[59,57,34,17],[60,12,29,14,"data"],[60,16,29,18],[60,19,29,18,"_yield$supabase$from$2"],[60,41,29,18],[60,42,29,14,"data"],[60,46,29,18],[61,12,29,20,"error"],[61,17,29,25],[61,20,29,25,"_yield$supabase$from$2"],[61,42,29,25],[61,43,29,20,"error"],[61,48,29,25],[62,10,35,6],[62,17,35,13],[63,12,35,15,"data"],[63,16,35,19],[64,12,35,21,"error"],[65,10,35,27],[65,11,35,28],[66,8,36,4],[66,9,36,5],[66,10,36,6],[66,17,36,13,"error"],[66,22,36,18],[66,24,36,20],[67,10,37,6,"console"],[67,17,37,13],[67,18,37,14,"error"],[67,23,37,19],[67,24,37,20],[67,64,37,60],[67,66,37,62,"error"],[67,71,37,67],[67,72,37,68],[68,10,38,6],[68,17,38,13],[69,12,38,15,"data"],[69,16,38,19],[69,18,38,21],[69,22,38,25],[70,12,38,27,"error"],[71,10,38,33],[71,11,38,34],[72,8,39,4],[73,6,39,5],[74,4,40,2],[74,5,40,3],[75,4,42,2],[76,0,43,0],[77,0,44,0],[78,0,45,0],[79,0,46,0],[80,4,47,2,"subscribe"],[80,13,47,11,"subscribe"],[80,14,47,12,"userId"],[80,20,47,18],[80,22,47,20,"onInsert"],[80,30,47,28],[80,32,47,30],[81,6,48,4],[81,10,48,8],[81,11,48,9,"userId"],[81,17,48,15],[81,21,48,19],[81,28,48,26,"onInsert"],[81,36,48,34],[81,41,48,39],[81,51,48,49],[81,53,48,51],[81,60,48,58],[82,8,48,60,"unsubscribe"],[82,19,48,71],[82,21,48,73,"unsubscribe"],[82,22,48,73],[82,27,48,79],[82,28,48,80],[83,6,48,82],[83,7,48,83],[85,6,50,4],[86,6,51,4],[86,10,51,8],[87,8,52,6],[87,12,52,10],[87,19,52,17,"supabase"],[87,31,52,25],[87,32,52,25,"supabase"],[87,40,52,25],[87,41,52,26,"channel"],[87,48,52,33],[87,53,52,38],[87,63,52,48],[87,65,52,50],[88,10,53,8],[88,14,53,14,"chan"],[88,18,53,18],[88,21,53,21,"supabase"],[88,33,53,29],[88,34,53,29,"supabase"],[88,42,53,29],[88,43,54,11,"channel"],[88,50,54,18],[88,51,54,19],[88,73,54,41,"userId"],[88,79,54,47],[88,81,54,49],[88,82,54,50],[88,83,55,11,"on"],[88,85,55,13],[88,86,55,14],[88,104,55,32],[88,106,55,34],[89,12,55,36,"event"],[89,17,55,41],[89,19,55,43],[89,27,55,51],[90,12,55,53,"schema"],[90,18,55,59],[90,20,55,61],[90,28,55,69],[91,12,55,71,"table"],[91,17,55,76],[91,19,55,78],[91,34,55,93],[92,12,55,95,"filter"],[92,18,55,101],[92,20,55,103],[92,34,55,117,"userId"],[92,40,55,123],[93,10,55,126],[93,11,55,127],[93,13,55,130,"payload"],[93,20,55,137],[93,24,55,142],[94,12,56,12],[94,16,56,16],[95,14,56,18,"onInsert"],[95,22,56,26],[95,23,56,27,"payload"],[95,30,56,34],[95,32,56,36,"new"],[95,35,56,39],[95,39,56,43,"payload"],[95,46,56,50],[95,48,56,52,"record"],[95,54,56,58],[95,58,56,62,"payload"],[95,65,56,69],[95,66,56,70],[96,12,56,72],[96,13,56,73],[96,14,56,74],[96,21,56,81,"e"],[96,22,56,82],[96,24,56,84],[97,14,56,86,"console"],[97,21,56,93],[97,22,56,94,"warn"],[97,26,56,98],[97,27,56,99],[97,75,56,147],[97,77,56,149,"e"],[97,78,56,150],[97,79,56,151],[98,12,56,153],[99,10,57,10],[99,11,57,11],[99,12,57,12],[99,13,58,11,"subscribe"],[99,22,58,20],[99,23,58,21],[99,24,58,22],[100,10,60,8],[100,17,60,15],[101,12,61,10,"unsubscribe"],[101,23,61,21],[101,25,61,23,"unsubscribe"],[101,26,61,23],[101,31,61,29],[102,14,62,12],[102,18,62,16],[103,16,62,18,"chan"],[103,20,62,22],[103,21,62,23,"unsubscribe"],[103,32,62,34],[103,33,62,35],[103,34,62,36],[104,14,62,38],[104,15,62,39],[104,16,62,40],[104,23,62,47,"e"],[104,24,62,48],[104,26,62,50],[105,16,63,14],[105,20,63,18],[106,18,63,20,"supabase"],[106,30,63,28],[106,31,63,28,"supabase"],[106,39,63,28],[106,40,63,29,"removeChannel"],[106,53,63,42],[106,56,63,45,"chan"],[106,60,63,49],[106,61,63,50],[107,16,63,52],[107,17,63,53],[107,18,63,54],[107,25,63,61,"e2"],[107,27,63,63],[107,29,63,65],[107,30,63,66],[108,14,64,12],[109,12,65,10],[110,10,66,8],[110,11,66,9],[111,8,67,6],[112,6,68,4],[112,7,68,5],[112,8,68,6],[112,15,68,13,"e"],[112,16,68,14],[112,18,68,16],[113,8,69,6,"console"],[113,15,69,13],[113,16,69,14,"warn"],[113,20,69,18],[113,21,69,19],[113,84,69,82],[113,86,69,84,"e"],[113,87,69,85],[113,88,69,86],[114,6,70,4],[116,6,72,4],[117,6,73,4],[117,10,73,8],[118,8,74,6],[118,12,74,12,"sub"],[118,15,74,15],[118,18,74,18,"supabase"],[118,30,74,26],[118,31,74,26,"supabase"],[118,39,74,26],[118,40,75,9,"from"],[118,44,75,13],[118,45,75,14],[118,73,75,42,"userId"],[118,79,75,48],[118,81,75,50],[118,82,75,51],[118,83,76,9,"on"],[118,85,76,11],[118,86,76,12],[118,94,76,20],[118,96,76,23,"payload"],[118,103,76,30],[118,107,76,35],[119,10,77,10],[119,14,77,14],[120,12,77,16,"onInsert"],[120,20,77,24],[120,21,77,25,"payload"],[120,28,77,32],[120,30,77,34,"new"],[120,33,77,37],[120,37,77,41,"payload"],[120,44,77,48],[120,46,77,50,"record"],[120,52,77,56],[120,56,77,60,"payload"],[120,63,77,67],[120,64,77,68],[121,10,77,70],[121,11,77,71],[121,12,77,72],[121,19,77,79,"e"],[121,20,77,80],[121,22,77,82],[122,12,77,84,"console"],[122,19,77,91],[122,20,77,92,"warn"],[122,24,77,96],[122,25,77,97],[122,73,77,145],[122,75,77,147,"e"],[122,76,77,148],[122,77,77,149],[123,10,77,151],[124,8,78,8],[124,9,78,9],[124,10,78,10],[124,11,79,9,"subscribe"],[124,20,79,18],[124,21,79,19],[124,22,79,20],[125,8,81,6],[125,15,81,13],[126,10,82,8,"unsubscribe"],[126,21,82,19],[126,23,82,21,"unsubscribe"],[126,24,82,21],[126,29,82,27],[127,12,83,10],[127,16,83,14],[128,14,83,16,"sub"],[128,17,83,19],[128,18,83,20,"unsubscribe"],[128,29,83,31],[128,32,83,34],[128,33,83,35],[129,12,83,37],[129,13,83,38],[129,14,83,39],[129,21,83,46,"e"],[129,22,83,47],[129,24,83,49],[130,14,83,51],[130,18,83,55],[131,16,83,57,"supabase"],[131,28,83,65],[131,29,83,65,"supabase"],[131,37,83,65],[131,38,83,66,"removeSubscription"],[131,56,83,84],[131,59,83,87,"sub"],[131,62,83,90],[131,63,83,91],[132,14,83,93],[132,15,83,94],[132,16,83,95],[132,23,83,102,"e2"],[132,25,83,104],[132,27,83,106],[132,28,83,107],[133,12,83,109],[134,10,84,8],[135,8,85,6],[135,9,85,7],[136,6,86,4],[136,7,86,5],[136,8,86,6],[136,15,86,13,"e"],[136,16,86,14],[136,18,86,16],[137,8,87,6,"console"],[137,15,87,13],[137,16,87,14,"warn"],[137,20,87,18],[137,21,87,19],[137,80,87,78],[137,82,87,80,"e"],[137,83,87,81],[137,84,87,82],[138,8,88,6],[138,15,88,13],[139,10,88,15,"unsubscribe"],[139,21,88,26],[139,23,88,28,"unsubscribe"],[139,24,88,28],[139,29,88,34],[139,30,88,35],[140,8,88,37],[140,9,88,38],[141,6,89,4],[142,4,90,2],[143,2,91,0],[143,3,91,1],[144,2,93,0],[144,6,93,0,"_default"],[144,14,93,0],[144,17,93,15,"notificationService"],[144,36,93,34],[145,0,93,35],[145,3]],"functionMap":{"names":["<global>","getUnread","markAsRead","subscribe","unsubscribe","supabase.channel.on$argument_2","supabase.from.on$argument_1"],"mappings":"AAA;ECU;GDc;EEE;GFa;EGO;yECC,QD;iIEO;WFE;uBCI;WDI;sBGW;SHE;qBCI;SDE;4BCI,QD;GHE"},"hasCjsExports":false},"type":"js/module"}]}